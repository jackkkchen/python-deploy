[{"data":1,"prerenderedAt":29774},["ShallowReactive",2],{"articles":3,"content-query-QkGLmgMyS6":16124},[4,392,1855,6396,10893,14205,15472,16033],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":8,"navigation":10,"index":11,"icon":12,"body":13,"_type":386,"_id":387,"_source":388,"_file":389,"_stem":390,"_extension":391},"/python-basic/preliminaries","python-basic",false,"","1 Preliminaries",true,2,"i-ph-info-duotone",{"type":14,"children":15,"toc":368},"root",[16,25,31,56,62,67,73,95,101,114,119,130,135,146,152,164,170,181,186,197,202,213,219,224,229,234,263,269,274,283,304,309,317,323,355,360],{"type":17,"tag":18,"props":19,"children":21},"element","h2",{"id":20},"_11-what-kinds-of-data",[22],{"type":23,"value":24},"text","1.1 What Kinds of Data?",{"type":17,"tag":26,"props":27,"children":28},"p",{},[29],{"type":23,"value":30},"We often mention \"data\" in our daily lives, talking about analyzing data or refining data. But what exactly does this data refer to? The primary focus is on \"structured data,\" which is a somewhat vague term that mainly includes the following types:",{"type":17,"tag":32,"props":33,"children":34},"ol",{},[35,41,46,51],{"type":17,"tag":36,"props":37,"children":38},"li",{},[39],{"type":23,"value":40},"Tabular or spreadsheet-like data in which each column may be a different type (string, numeric, date, or otherwise). This includes most kinds of data commonly stored in relational databases or tab- or comma-delimited text files.",{"type":17,"tag":36,"props":42,"children":43},{},[44],{"type":23,"value":45},"Multidimensional arrays (matrices).",{"type":17,"tag":36,"props":47,"children":48},{},[49],{"type":23,"value":50},"Multiple tables of data interrelated by key columns (what would be primary or foreign keys for a SQL user).",{"type":17,"tag":36,"props":52,"children":53},{},[54],{"type":23,"value":55},"Evenly or unevenly spaced time series.",{"type":17,"tag":18,"props":57,"children":59},{"id":58},"_12-why-python-for-data-analysis",[60],{"type":23,"value":61},"1.2 Why Python for Data Analysis?",{"type":17,"tag":26,"props":63,"children":64},{},[65],{"type":23,"value":66},"Everyone has likely heard of Python to some extent in their daily life or studies, and may even be required to learn Python in school. The reason for this is that Python, as a \"glue language\", can easily integrate C, C++ and FORTRAN code in scientific computing. It can be simply understood as a popular language.",{"type":17,"tag":18,"props":68,"children":70},{"id":69},"_13-essential-python-libraries",[71],{"type":23,"value":72},"1.3 Essential Python Libraries",{"type":17,"tag":26,"props":74,"children":75},{},[76,78,85,87,93],{"type":23,"value":77},"The most important are ",{"type":17,"tag":79,"props":80,"children":82},"code",{"className":81},[],[83],{"type":23,"value":84},"NumPy",{"type":23,"value":86}," and ",{"type":17,"tag":79,"props":88,"children":90},{"className":89},[],[91],{"type":23,"value":92},"Pandas",{"type":23,"value":94},", which we primarily focus on for our explanations.",{"type":17,"tag":96,"props":97,"children":99},"h3",{"id":98},"numpy",[100],{"type":23,"value":84},{"type":17,"tag":26,"props":102,"children":103},{},[104,112],{"type":17,"tag":105,"props":106,"children":110},"a",{"href":107,"rel":108},"https://numpy.org/",[109],"nofollow",[111],{"type":23,"value":84},{"type":23,"value":113},"，short for Numerical Python, has long been the foundation for numerical computing in Python. It provides the data structures, algorithms, and library glue needed for most scientific applications involving numerical data in Python.",{"type":17,"tag":96,"props":115,"children":117},{"id":116},"pandas",[118],{"type":23,"value":116},{"type":17,"tag":26,"props":120,"children":121},{},[122,128],{"type":17,"tag":105,"props":123,"children":126},{"href":124,"rel":125},"https://pandas.pydata.org/",[109],[127],{"type":23,"value":116},{"type":23,"value":129}," provides high-level data structures and functions designed to make working with structured or tabular data intuitive and flexible. Since its emergence in 2010, it has helped make Python a powerful and productive environment for data analysis. The primary objects in pandas that we'll focus on are the DataFrame, a tabular, column-oriented data structure with both row and column labels, and the Series, a one-dimensional labeled array object.",{"type":17,"tag":96,"props":131,"children":133},{"id":132},"matplotlib",[134],{"type":23,"value":132},{"type":17,"tag":26,"props":136,"children":137},{},[138,144],{"type":17,"tag":105,"props":139,"children":142},{"href":140,"rel":141},"https://matplotlib.org/",[109],[143],{"type":23,"value":132},{"type":23,"value":145},"  is the most popular Python library for producing plots and other two-dimensional data visualizations. It was originally created by John D. Hunter and is now maintained by a large team of developers. It's designed for creating publication-quality plots. While there are other visualization libraries available to Python programmers, matplotlib is still the most widely used and is well-integrated with the rest of the ecosystem. I think it's a safe choice as the default visualization tool.",{"type":17,"tag":96,"props":147,"children":149},{"id":148},"ipython-和-jupyter",[150],{"type":23,"value":151},"IPython 和 Jupyter",{"type":17,"tag":26,"props":153,"children":154},{},[155,162],{"type":17,"tag":105,"props":156,"children":159},{"href":157,"rel":158},"https://ipython.org/",[109],[160],{"type":23,"value":161},"IPython",{"type":23,"value":163}," The IPython project began in 2001 as Fernando Pérez's side project to make a better interactive Python interpreter. In the subsequent 20 years, it has become one of the most important tools in the modern Python data stack. In 2014, Fernando and the IPython team announced the Jupyter project, a broader initiative to design language-agnostic interactive computing tools. The IPython web notebook became the Jupyter notebook, which now supports over 40 programming languages. The IPython system can now be used as a kernel (programming language mode) for using Python with Jupyter.",{"type":17,"tag":96,"props":165,"children":167},{"id":166},"scipy",[168],{"type":23,"value":169},"SciPy",{"type":17,"tag":26,"props":171,"children":172},{},[173,179],{"type":17,"tag":105,"props":174,"children":177},{"href":175,"rel":176},"https://scipy.org/",[109],[178],{"type":23,"value":169},{"type":23,"value":180}," is a collection of packages addressing a number of different standard problem domains in scientific computing.",{"type":17,"tag":96,"props":182,"children":184},{"id":183},"scikit-learn",[185],{"type":23,"value":183},{"type":17,"tag":26,"props":187,"children":188},{},[189,195],{"type":17,"tag":105,"props":190,"children":193},{"href":191,"rel":192},"https://scikit-learn.org/",[109],[194],{"type":23,"value":183},{"type":23,"value":196}," has become the premier general-purpose machine learning toolkit for Python programmers since its inception in 2007.",{"type":17,"tag":96,"props":198,"children":200},{"id":199},"statsmodels",[201],{"type":23,"value":199},{"type":17,"tag":26,"props":203,"children":204},{},[205,211],{"type":17,"tag":105,"props":206,"children":209},{"href":207,"rel":208},"https://statsmodels.org/",[109],[210],{"type":23,"value":199},{"type":23,"value":212}," is a statistical analysis package that was seeded by work done by Stanford statistics professor Jonathan Taylor, who implemented a number of regression analysis models popular in R.",{"type":17,"tag":18,"props":214,"children":216},{"id":215},"_14-python-beginners",[217],{"type":23,"value":218},"1.4 Python Beginners",{"type":17,"tag":26,"props":220,"children":221},{},[222],{"type":23,"value":223},"If you are completely new to Python or programming, you may need to spend some time reading Chapter 2: Python Language Basics, IPython, and Jupyter Notebooks and Chapter 3: Built-in Data Structures, Functions, and Files, where I have placed a condensed tutorial on the Python language features, IPython shell, and Jupyter notebooks. This material is essential knowledge for the rest of the book. If you already have Python experience, you may wish to skim or skip these sections.",{"type":17,"tag":26,"props":225,"children":226},{},[227],{"type":23,"value":228},"Next, I give a short introduction to NumPy's key features, then I move on to pandas.",{"type":17,"tag":26,"props":230,"children":231},{},[232],{"type":23,"value":233},"People may learn Python for different purposes, but generally it can be divided into these parts:",{"type":17,"tag":235,"props":236,"children":237},"ul",{},[238,243,248,253,258],{"type":17,"tag":36,"props":239,"children":240},{},[241],{"type":23,"value":242},"Interacting with the outside world",{"type":17,"tag":36,"props":244,"children":245},{},[246],{"type":23,"value":247},"Preparation of data: cleaning, munging, combining, normalizing, reshaping, slicing and dicing, and transforming data for analysis",{"type":17,"tag":36,"props":249,"children":250},{},[251],{"type":23,"value":252},"Transformation of data: applying mathematical and statistical operations to groups of datasets to derive new datasets (e.g., aggregating a large table by group variables)",{"type":17,"tag":36,"props":254,"children":255},{},[256],{"type":23,"value":257},"Modeling and computation: connecting your data to statistical models, machine learning algorithms, or other computational tools",{"type":17,"tag":36,"props":259,"children":260},{},[261],{"type":23,"value":262},"Presentation: creating interactive or static graphical visualizations or textual summaries",{"type":17,"tag":96,"props":264,"children":266},{"id":265},"code-examples",[267],{"type":23,"value":268},"Code Examples",{"type":17,"tag":26,"props":270,"children":271},{},[272],{"type":23,"value":273},"Most of the code examples in the book show input and output, like when executed in an IPython shell or Jupyter notebook:",{"type":17,"tag":275,"props":276,"children":278},"pre",{"code":277},"In [5]: CODE EXAMPLE\nOut[5]: OUTPUT\n\n",[279],{"type":17,"tag":79,"props":280,"children":281},{"__ignoreMap":8},[282],{"type":23,"value":277},{"type":17,"tag":26,"props":284,"children":285},{},[286,288,294,296,302],{"type":23,"value":287},"When you see a code example like this, the intention is for you to type the example code into the ",{"type":17,"tag":79,"props":289,"children":291},{"className":290},[],[292],{"type":23,"value":293},"In",{"type":23,"value":295}," block in your coding environment, and execute it by pressing Enter (or Shift-Enter in Jupyter). You should see output similar to what is displayed in the ",{"type":17,"tag":79,"props":297,"children":299},{"className":298},[],[300],{"type":23,"value":301},"Out",{"type":23,"value":303}," block.",{"type":17,"tag":26,"props":305,"children":306},{},[307],{"type":23,"value":308},"You can execute the following Python code before running the code example:",{"type":17,"tag":275,"props":310,"children":312},{"code":311},"import numpy as np\nimport pandas as pd\npd.options.display.max_columns = 20\npd.options.display.max_rows = 20\npd.options.display.max_colwidth = 80\nnp.set_printoptions(precision=4, suppress=True)\n\n",[313],{"type":17,"tag":79,"props":314,"children":315},{"__ignoreMap":8},[316],{"type":23,"value":311},{"type":17,"tag":96,"props":318,"children":320},{"id":319},"example-data",[321],{"type":23,"value":322},"Example Data",{"type":17,"tag":26,"props":324,"children":325},{},[326,328,335,337,344,346,353],{"type":23,"value":327},"Each chapter's example dataset is hosted on ",{"type":17,"tag":105,"props":329,"children":332},{"href":330,"rel":331},"https://github.com/wesm/pydata-book",[109],[333],{"type":23,"value":334},"GitHub",{"type":23,"value":336}," (if GitHub is inaccessible, there is a ",{"type":17,"tag":105,"props":338,"children":341},{"href":339,"rel":340},"https://gitee.com/wesmckinn/pydata-book",[109],[342],{"type":23,"value":343},"mirror on Gitee",{"type":23,"value":345},"). You can download these data by using the Git version control system in the command line, or by downloading the zip file of the repository from the website. If you encounter any issues, please refer to the ",{"type":17,"tag":105,"props":347,"children":350},{"href":348,"rel":349},"https://wesmckinney.com/book",[109],[351],{"type":23,"value":352},"book website",{"type":23,"value":354}," for the latest instructions on obtaining the book materials.",{"type":17,"tag":26,"props":356,"children":357},{},[358],{"type":23,"value":359},"If you download the zip file containing the example dataset, you must fully extract the contents of the zip file to a directory, and then navigate to that directory in the terminal before continuing to run the code examples in the book:",{"type":17,"tag":275,"props":361,"children":363},{"code":362},"$ pwd\n/home/jack/book-materials\n\n$ ls\nappa.ipynb  ch05.ipynb  ch09.ipynb  ch13.ipynb  README.md\nch02.ipynb  ch06.ipynb  ch10.ipynb  COPYING     requirements.txt\nch03.ipynb  ch07.ipynb  ch11.ipynb  datasets\nch04.ipynb  ch08.ipynb  ch12.ipynb  examples\n",[364],{"type":17,"tag":79,"props":365,"children":366},{"__ignoreMap":8},[367],{"type":23,"value":362},{"title":8,"searchDepth":11,"depth":11,"links":369},[370,371,372,382],{"id":20,"depth":11,"text":24},{"id":58,"depth":11,"text":61},{"id":69,"depth":11,"text":72,"children":373},[374,376,377,378,379,380,381],{"id":98,"depth":375,"text":84},3,{"id":116,"depth":375,"text":116},{"id":132,"depth":375,"text":132},{"id":148,"depth":375,"text":151},{"id":166,"depth":375,"text":169},{"id":183,"depth":375,"text":183},{"id":199,"depth":375,"text":199},{"id":215,"depth":11,"text":218,"children":383},[384,385],{"id":265,"depth":375,"text":268},{"id":319,"depth":375,"text":322},"markdown","content:python-basic:1.Preliminaries.md","content","python-basic/1.Preliminaries.md","python-basic/1.Preliminaries","md",{"_path":393,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":394,"description":395,"navigation":396,"index":375,"icon":12,"body":397,"_type":386,"_id":1852,"_source":388,"_file":1853,"_stem":1854,"_extension":391},"/python-basic/1python_basic","2.1 Python Language Basics, IPython, and Jupyter Notebooks","Notes for Python beginners",null,{"type":14,"children":398,"toc":1833},[399,411,416,422,435,443,472,498,506,517,533,539,544,550,563,571,576,584,604,631,639,645,664,683,691,710,719,724,732,738,751,759,771,779,784,792,798,804,862,868,889,989,1015,1021,1034,1046,1072,1111,1127,1151,1155,1167,1192,1204,1210,1420,1425,1431,1436,1484,1490,1518,1523,1528,1537,1542,1560,1567,1576,1590,1599,1603,1609,1623,1631,1643,1651,1713,1726,1732,1742,1750,1759,1767,1808],{"type":17,"tag":26,"props":400,"children":401},{},[402,404],{"type":23,"value":403},"As we mentioned earlier, Python is excellent for data processing, so we'll provide an overview of Python's built-in data structures and libraries from a data manipulation perspective. But as the saying goes, \"sharpening your axe won't delay your woodcutting,\" so before we start learning, we must have a good \"tool\" at hand. It's highly recommended that everyone install Anaconda. You can install it from the following link ",{"type":17,"tag":105,"props":405,"children":408},{"href":406,"rel":407},"https://mirror.tuna.tsinghua.edu.cn/help/anaconda/",[109],[409],{"type":23,"value":410},"Anaconda China Mirror",{"type":17,"tag":26,"props":412,"children":413},{},[414],{"type":23,"value":415},"And it's highly recommended that everyone manually types the code in IPython or Jupyter during the exploration learning process, and follows the examples to experiment and try different things.",{"type":17,"tag":18,"props":417,"children":419},{"id":418},"_21-running-the-first-command",[420],{"type":23,"value":421},"2.1 Running the First Command",{"type":17,"tag":26,"props":423,"children":424},{},[425,427,433],{"type":23,"value":426},"Python is an interpreted language. The Python interpreter runs a program by executing each line of the program. The standard interactive Python interpreter can be invoked using the ",{"type":17,"tag":79,"props":428,"children":430},{"className":429},[],[431],{"type":23,"value":432},"python",{"type":23,"value":434}," command in the terminal:",{"type":17,"tag":275,"props":436,"children":438},{"code":437},"$ python\nPython 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57)\n[GCC 10.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> a = 5\n>>> print(a)\n5\n\n",[439],{"type":17,"tag":79,"props":440,"children":441},{"__ignoreMap":8},[442],{"type":23,"value":437},{"type":17,"tag":26,"props":444,"children":445},{},[446,448,454,456,462,464,470],{"type":23,"value":447},"You see the ",{"type":17,"tag":79,"props":449,"children":451},{"className":450},[],[452],{"type":23,"value":453},">>>",{"type":23,"value":455}," is the ",{"type":17,"tag":457,"props":458,"children":459},"em",{},[460],{"type":23,"value":461},"prompt",{"type":23,"value":463}," where you will input the code expression. To exit the Python interpreter, you can input ",{"type":17,"tag":79,"props":465,"children":467},{"className":466},[],[468],{"type":23,"value":469},"exit()",{"type":23,"value":471}," or press Ctrl-D (only for Linux and macOS).",{"type":17,"tag":26,"props":473,"children":474},{},[475,477,482,484,489,491,496],{"type":23,"value":476},"Running a Python program is as simple as calling ",{"type":17,"tag":79,"props":478,"children":480},{"className":479},[],[481],{"type":23,"value":432},{"type":23,"value":483}," and passing the ",{"type":17,"tag":457,"props":485,"children":486},{},[487],{"type":23,"value":488},".py",{"type":23,"value":490}," file as the first argument. Suppose we have created a ",{"type":17,"tag":457,"props":492,"children":493},{},[494],{"type":23,"value":495},"hello_world.py",{"type":23,"value":497}," file containing the following:",{"type":17,"tag":275,"props":499,"children":501},{"code":500},"print(\"Hello world\")\n\n",[502],{"type":17,"tag":79,"props":503,"children":504},{"__ignoreMap":8},[505],{"type":23,"value":500},{"type":17,"tag":26,"props":507,"children":508},{},[509,511,515],{"type":23,"value":510},"You can run it by executing the following command (the ",{"type":17,"tag":457,"props":512,"children":513},{},[514],{"type":23,"value":495},{"type":23,"value":516}," file must be in your current working terminal directory):",{"type":17,"tag":518,"props":519,"children":522},"code-mirror-run",{":editable":520,":show-in-col":520,"max-height":521},"true","20rem",[523],{"type":17,"tag":275,"props":524,"children":528},{"code":525,"language":432,"meta":8,"className":526},"  print(\"Hello world\")\n",[527],"language-python",[529],{"type":17,"tag":79,"props":530,"children":531},{"__ignoreMap":8},[532],{"type":23,"value":525},{"type":17,"tag":18,"props":534,"children":536},{"id":535},"_22-ipython-basics",[537],{"type":23,"value":538},"2.2 IPython Basics",{"type":17,"tag":26,"props":540,"children":541},{},[542],{"type":23,"value":543},"In this section, I will quickly introduce you to the IPython shell and Jupyter notebooks, and introduce some basic concepts.",{"type":17,"tag":96,"props":545,"children":547},{"id":546},"running-ipython-shell",[548],{"type":23,"value":549},"Running IPython Shell",{"type":17,"tag":26,"props":551,"children":552},{},[553,555,561],{"type":23,"value":554},"You can start the IPython shell in the terminal just like starting a regular Python interpreter, using the ",{"type":17,"tag":79,"props":556,"children":558},{"className":557},[],[559],{"type":23,"value":560},"ipython",{"type":23,"value":562}," command:",{"type":17,"tag":275,"props":564,"children":566},{"code":565},"$ ipython\nPython 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57)\nType 'copyright', 'credits' or 'license' for more information\nIPython 7.31.1 -- An enhanced Interactive Python. Type '?' for help.\n\nIn [1]: a = 5\n\nIn [2]: a\nOut[2]: 5\n\n",[567],{"type":17,"tag":79,"props":568,"children":569},{"__ignoreMap":8},[570],{"type":23,"value":565},{"type":17,"tag":26,"props":572,"children":573},{},[574],{"type":23,"value":575},"You can execute any Python statement by typing the Python statement and pressing Enter (or Enter key). When you only input a variable, IPython will present the object's string representation:",{"type":17,"tag":275,"props":577,"children":579},{"code":578},"In [5]: import numpy as np\n\nIn [6]: data = [np.random.standard_normal() for i in range(7)]\n\nIn [7]: data\nOut[7]:\n[-0.20470765948471295,\n 0.47894333805754824,\n -0.5194387150567381,\n -0.55573030434749,\n 1.9657805725027142,\n 1.3934058329729904,\n 0.09290787674371767]\n\n",[580],{"type":17,"tag":79,"props":581,"children":582},{"__ignoreMap":8},[583],{"type":23,"value":578},{"type":17,"tag":26,"props":585,"children":586},{},[587,589,595,597,602],{"type":23,"value":588},"The first two lines are Python code statements; the second statement creates a variable named ",{"type":17,"tag":79,"props":590,"children":592},{"className":591},[],[593],{"type":23,"value":594},"data",{"type":23,"value":596}," pointing to a newly created list. The last line prints the value of ",{"type":17,"tag":79,"props":598,"children":600},{"className":599},[],[601],{"type":23,"value":594},{"type":23,"value":603}," to the console.",{"type":17,"tag":26,"props":605,"children":606},{},[607,609,614,616,622,624,629],{"type":23,"value":608},"Many kinds of Python objects are formatted for readability or ",{"type":17,"tag":457,"props":610,"children":611},{},[612],{"type":23,"value":613},"pretty printing",{"type":23,"value":615},", which is different from normal printing using ",{"type":17,"tag":79,"props":617,"children":619},{"className":618},[],[620],{"type":23,"value":621},"print",{"type":23,"value":623},". If you print the above ",{"type":17,"tag":79,"props":625,"children":627},{"className":626},[],[628],{"type":23,"value":594},{"type":23,"value":630}," variable in a standard Python interpreter, it will be less readable:",{"type":17,"tag":275,"props":632,"children":634},{"code":633},">>> import numpy as np\n>>> data = [np.random.standard_normal() for i in range(7)]\n>>> print(data)\n>>> data\n[-0.5767699931966723, -0.1010317773535111, -1.7841005313329152,\n-1.524392126408841, 0.22191374220117385, -1.9835710588082562,\n-1.6081963964963528]\n\n",[635],{"type":17,"tag":79,"props":636,"children":637},{"__ignoreMap":8},[638],{"type":23,"value":633},{"type":17,"tag":96,"props":640,"children":642},{"id":641},"_23-running-jupyter-notebook-in-the-terminal",[643],{"type":23,"value":644},"2.3 Running Jupyter Notebook in the Terminal",{"type":17,"tag":26,"props":646,"children":647},{},[648,650,655,657,662],{"type":23,"value":649},"One of the main components of the Jupyter project is the ",{"type":17,"tag":457,"props":651,"children":652},{},[653],{"type":23,"value":654},"notebook",{"type":23,"value":656},", an interactive document for code, text (including Markdown), data visualizations, and other outputs. Jupyter notebooks interact with ",{"type":17,"tag":457,"props":658,"children":659},{},[660],{"type":23,"value":661},"kernels",{"type":23,"value":663},", which are implementations of the Jupyter interactive computing protocol for different programming languages. The Python Jupyter kernel uses the IPython system as its underlying behavior.",{"type":17,"tag":26,"props":665,"children":666},{},[667,669,675,677,682],{"type":23,"value":668},"To start Jupyter, run the ",{"type":17,"tag":79,"props":670,"children":672},{"className":671},[],[673],{"type":23,"value":674},"jupyter",{"type":23,"value":676}," ",{"type":17,"tag":79,"props":678,"children":680},{"className":679},[],[681],{"type":23,"value":654},{"type":23,"value":434},{"type":17,"tag":275,"props":684,"children":686},{"code":685},"$ jupyter notebook\n[I 15:20:52.739 NotebookApp] Serving notebooks from local directory:\n/home/wesm/code/pydata-book\n[I 15:20:52.739 NotebookApp] 0 active kernels\n[I 15:20:52.739 NotebookApp] The Jupyter Notebook is running at:\nhttp://localhost:8888/?token=0a77b52fefe52ab83e3c35dff8de121e4bb443a63f2d...\n[I 15:20:52.740 NotebookApp] Use Control-C to stop this server and shut down\nall kernels (twice to skip confirmation).\nCreated new window in existing browser session.\n    To access the notebook, open this file in a browser:\n        file:///home/wesm/.local/share/jupyter/runtime/nbserver-185259-open.html\n    Or copy and paste one of these URLs:\n        http://localhost:8888/?token=0a77b52fefe52ab83e3c35dff8de121e4...\n     or http://127.0.0.1:8888/?token=0a77b52fefe52ab83e3c35dff8de121e4...\n\n",[687],{"type":17,"tag":79,"props":688,"children":689},{"__ignoreMap":8},[690],{"type":23,"value":685},{"type":17,"tag":26,"props":692,"children":693},{},[694,696,702,704],{"type":23,"value":695},"On many platforms, Jupyter will automatically open in your default web browser (unless you start with ",{"type":17,"tag":79,"props":697,"children":699},{"className":698},[],[700],{"type":23,"value":701},"--no-browser",{"type":23,"value":703},"). Otherwise, you can navigate to the HTTP address printed when you started the notebook, such as ",{"type":17,"tag":79,"props":705,"children":707},{"className":706},[],[708],{"type":23,"value":709},"http://localhost:8888/?token=0a77b52fefe52ab83e3c35dff8de121e4bb443a63f2d3055",{"type":17,"tag":26,"props":711,"children":712},{},[713],{"type":17,"tag":714,"props":715,"children":718},"img",{"alt":716,"src":717},"Jupyter Notebook Homepage","https://img-blog.csdnimg.cn/img_convert/200aaf1140ee7ca4bfeea2d34e01bec7.png",[],{"type":17,"tag":26,"props":720,"children":721},{},[722],{"type":23,"value":723},"To create a new notebook, click the \"New\" button and select the \"Python 3\" option. As shown in the figure above. If this is your first time trying it, try clicking on the empty \"cell\" and entering a single line of Python code. Then press Shift-Enter to execute it.",{"type":17,"tag":26,"props":725,"children":726},{},[727],{"type":17,"tag":714,"props":728,"children":731},{"alt":729,"src":730},"Jupyter New Notebook View","https://img-blog.csdnimg.cn/img_convert/16ce5e835bb38071f55a886120798194.png",[],{"type":17,"tag":96,"props":733,"children":735},{"id":734},"built-in-search",[736],{"type":23,"value":737},"Built-in Search",{"type":17,"tag":26,"props":739,"children":740},{},[741,743,749],{"type":23,"value":742},"Using the question mark (",{"type":17,"tag":79,"props":744,"children":746},{"className":745},[],[747],{"type":23,"value":748},"?",{"type":23,"value":750},") before or after a variable will display some general information about the object:",{"type":17,"tag":275,"props":752,"children":754},{"code":753},"In [1]: b = [1, 2, 3]\n\nIn [2]: b?\nType:        list\nString form: [1, 2, 3]\nLength:      3\nDocstring:\nBuilt-in mutable sequence.\n\nIf no argument is given, the constructor creates a new empty list.\nThe argument must be an iterable if specified.\n\nIn [3]: print?\nDocstring:\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\nType:      builtin_function_or_method\n\n",[755],{"type":17,"tag":79,"props":756,"children":757},{"__ignoreMap":8},[758],{"type":23,"value":753},{"type":17,"tag":26,"props":760,"children":761},{},[762,764,769],{"type":23,"value":763},"This is called ",{"type":17,"tag":457,"props":765,"children":766},{},[767],{"type":23,"value":768},"object introspection",{"type":23,"value":770},". If the object is a function or instance method, it will also display if a docstring is defined. Suppose we wrote the following function (you can reproduce it in IPython or Jupyter):",{"type":17,"tag":275,"props":772,"children":774},{"code":773},"def add_numbers(a, b):\n \"\"\"\n Add two numbers together\n\n Returns\n -------\n the_sum : type of arguments\n \"\"\"\n return a + b\n\n",[775],{"type":17,"tag":79,"props":776,"children":777},{"__ignoreMap":8},[778],{"type":23,"value":773},{"type":17,"tag":26,"props":780,"children":781},{},[782],{"type":23,"value":783},"Then use ? to display the docstring:",{"type":17,"tag":275,"props":785,"children":787},{"code":786},"In [6]: add_numbers?\nSignature: add_numbers(a, b)\nDocstring:\nAdd two numbers together\nReturns\n-------\nthe_sum : type of arguments\nFile:      \u003Cipython-input-9-6a548a216e27>\nType:      function\n\n",[788],{"type":17,"tag":79,"props":789,"children":790},{"__ignoreMap":8},[791],{"type":23,"value":786},{"type":17,"tag":18,"props":793,"children":795},{"id":794},"_23-python-language-basics",[796],{"type":23,"value":797},"2.3 Python Language Basics",{"type":17,"tag":96,"props":799,"children":801},{"id":800},"installing-python-libraries-in-pyodide",[802],{"type":23,"value":803},"Installing Python Libraries in Pyodide",{"type":17,"tag":518,"props":805,"children":806},{":editable":520,":show-in-col":520,"max-height":521},[807,812,821,826,835],{"type":17,"tag":26,"props":808,"children":809},{},[810],{"type":23,"value":811},"\u003C\u003C\u003C\u003C\u003C\u003C\u003C HEAD",{"type":17,"tag":275,"props":813,"children":816},{"code":814,"language":432,"meta":8,"className":815},"  import pyodide_js\n  await pyodide_js.loadPackage(\"micropip\")\n\n  import micropip\n  await micropip.install(\"numpy\")\n",[527],[817],{"type":17,"tag":79,"props":818,"children":819},{"__ignoreMap":8},[820],{"type":23,"value":814},{"type":17,"tag":26,"props":822,"children":823},{},[824],{"type":23,"value":825},"=======",{"type":17,"tag":275,"props":827,"children":830},{"code":828,"language":432,"meta":8,"className":829},"    import pyodide_js\n    await pyodide_js.loadPackage(\"micropip\")\n\n    import micropip\n    await micropip.install(\"numpy\")\n",[527],[831],{"type":17,"tag":79,"props":832,"children":833},{"__ignoreMap":8},[834],{"type":23,"value":828},{"type":17,"tag":836,"props":837,"children":838},"blockquote",{},[839],{"type":17,"tag":836,"props":840,"children":841},{},[842],{"type":17,"tag":836,"props":843,"children":844},{},[845],{"type":17,"tag":836,"props":846,"children":847},{},[848],{"type":17,"tag":836,"props":849,"children":850},{},[851],{"type":17,"tag":836,"props":852,"children":853},{},[854],{"type":17,"tag":836,"props":855,"children":856},{},[857],{"type":17,"tag":26,"props":858,"children":859},{},[860],{"type":23,"value":861},"8254bcc34b16895dfbf1261430415f0cc83142fc",{"type":17,"tag":96,"props":863,"children":865},{"id":864},"indentation",[866],{"type":23,"value":867},"Indentation",{"type":17,"tag":26,"props":869,"children":870},{},[871,873,879,881,887],{"type":23,"value":872},"Python uses spaces to represent indentation to structure your code. Especially in ",{"type":17,"tag":79,"props":874,"children":876},{"className":875},[],[877],{"type":23,"value":878},"define",{"type":23,"value":880}," or ",{"type":17,"tag":79,"props":882,"children":884},{"className":883},[],[885],{"type":23,"value":886},"for loop",{"type":23,"value":888}," statements,",{"type":17,"tag":518,"props":890,"children":891},{":editable":520,":show-in-col":520,"max-height":521},[892,896,905,910,930,936,971],{"type":17,"tag":26,"props":893,"children":894},{},[895],{"type":23,"value":811},{"type":17,"tag":275,"props":897,"children":900},{"code":898,"language":432,"meta":8,"className":899},"=======\n\n````python\n>>>>>>> 8254bcc34b16895dfbf1261430415f0cc83142fc\n  import micropip\n  await micropip.install('numpy')\n\n  import numpy as np\n  # Create NumPy array\n  array = np.array([1, 2, 3, 4, 5])\n  # Choose pivot\n  pivot = 3\n  # Create two lists to store elements less than pivot and greater than or equal to pivot\n  less = []\n  greater = []\n\n  for x in array:\n    if x \u003C pivot:\n      less.append(x)\n    else:\n      greater.append(x)\n  print(\"Elements less than pivot:\", less)\n  print(\"Elements greater than or equal to pivot:\", greater)\n",[527],[901],{"type":17,"tag":79,"props":902,"children":903},{"__ignoreMap":8},[904],{"type":23,"value":898},{"type":17,"tag":26,"props":906,"children":907},{},[908],{"type":23,"value":909},"::",{"type":17,"tag":26,"props":911,"children":912},{},[913,915,921,923,928],{"type":23,"value":914},"Colon (",{"type":17,"tag":79,"props":916,"children":918},{"className":917},[],[919],{"type":23,"value":920},":",{"type":23,"value":922},") indicates the start of a code block, and all code within the block must be indented by the same amount until the block ends. Four spaces are generally used as the default indentation. You will find that when you type ",{"type":17,"tag":79,"props":924,"children":926},{"className":925},[],[927],{"type":23,"value":920},{"type":23,"value":929}," and press Enter, Jupyter will automatically indent for you.",{"type":17,"tag":96,"props":931,"children":933},{"id":932},"comments",[934],{"type":23,"value":935},"Comments",{"type":17,"tag":26,"props":937,"children":938},{},[939,941,947,949,954,956,962,963,969],{"type":23,"value":940},"Any text preceded by a hash (",{"type":17,"tag":79,"props":942,"children":944},{"className":943},[],[945],{"type":23,"value":946},"#",{"type":23,"value":948},") will be ignored by the Python interpreter. This is often used to add comments to the code. Sometimes you may also want to exclude certain code blocks without deleting them. One solution is to ",{"type":17,"tag":457,"props":950,"children":951},{},[952],{"type":23,"value":953},"comment out",{"type":23,"value":955}," the code:\nThe second method is to use ",{"type":17,"tag":79,"props":957,"children":959},{"className":958},[],[960],{"type":23,"value":961},"\"\"\"",{"type":23,"value":880},{"type":17,"tag":79,"props":964,"children":966},{"className":965},[],[967],{"type":23,"value":968},"'''",{"type":23,"value":970}," to comment multiple lines of code.",{"type":17,"tag":518,"props":972,"children":973},{":editable":520,":show-in-col":520,"max-height":521},[974,983],{"type":17,"tag":275,"props":975,"children":978},{"code":976,"language":432,"meta":8,"className":977},"# This is a simple calculator function\ndef calculator(a, b, operation):\n  \"\"\"\n  Performs basic arithmetic operations.\n\n  Parameters:\n  a (float): The first number\n  b (float): The second number\n  operation (str): Type of operation ('+', '-', '*', '/')\n\n  Returns:\n  float: The result of the calculation\n  \"\"\"\n  if operation == '+':\n      return a + b\n  elif operation == '-':\n      return a - b\n  elif operation == '*':\n      return a * b\n  elif operation == '/':\n      # TODO: Add error handling for division by zero\n      return a / b\n  else:\n      raise ValueError(\"Unsupported operation\")\n\n# Test the calculator function\nprint(calculator(5, 3, '+'))  # Should output 8\nprint(calculator(10, 2, '*'))  # Should output 20\n\n# print(calculator(10, 0, '/'))  # This line would cause an error, temporarily commented out\n",[527],[979],{"type":17,"tag":79,"props":980,"children":981},{"__ignoreMap":8},[982],{"type":23,"value":976},{"type":17,"tag":984,"props":985,"children":987},"h1",{"id":986},"head",[988],{"type":23,"value":811},{"type":17,"tag":836,"props":990,"children":991},{},[992],{"type":17,"tag":836,"props":993,"children":994},{},[995],{"type":17,"tag":836,"props":996,"children":997},{},[998],{"type":17,"tag":836,"props":999,"children":1000},{},[1001],{"type":17,"tag":836,"props":1002,"children":1003},{},[1004],{"type":17,"tag":836,"props":1005,"children":1006},{},[1007],{"type":17,"tag":836,"props":1008,"children":1009},{},[1010],{"type":17,"tag":26,"props":1011,"children":1012},{},[1013],{"type":23,"value":1014},"8254bcc34b16895dfbf1261430415f0cc83142fc\nThis will skip the commented parts and run the code below. Comments are very useful and a good habit, both to help you review later and to make it easier for others to understand your code.",{"type":17,"tag":96,"props":1016,"children":1018},{"id":1017},"variables-and-parameter-passing",[1019],{"type":23,"value":1020},"Variables and Parameter Passing",{"type":17,"tag":26,"props":1022,"children":1023},{},[1024,1026,1032],{"type":23,"value":1025},"In Python, we use ",{"type":17,"tag":79,"props":1027,"children":1029},{"className":1028},[],[1030],{"type":23,"value":1031},"=",{"type":23,"value":1033}," to create variables and assign values, as follows:",{"type":17,"tag":518,"props":1035,"children":1036},{":editable":520,":show-in-col":520,"max-height":521},[1037],{"type":17,"tag":275,"props":1038,"children":1041},{"code":1039,"language":432,"meta":8,"className":1040},"  a = [1, 2, 3]\n  a\n",[527],[1042],{"type":17,"tag":79,"props":1043,"children":1044},{"__ignoreMap":8},[1045],{"type":23,"value":1039},{"type":17,"tag":26,"props":1047,"children":1048},{},[1049,1051,1056,1058,1063,1065,1071],{"type":23,"value":1050},"Here, variable ",{"type":17,"tag":79,"props":1052,"children":1054},{"className":1053},[],[1055],{"type":23,"value":105},{"type":23,"value":1057}," is an integer list, and suppose we assign ",{"type":17,"tag":79,"props":1059,"children":1061},{"className":1060},[],[1062],{"type":23,"value":105},{"type":23,"value":1064}," to a new variable ",{"type":17,"tag":79,"props":1066,"children":1068},{"className":1067},[],[1069],{"type":23,"value":1070},"b",{"type":23,"value":920},{"type":17,"tag":26,"props":1073,"children":1074},{},[1075,1077,1082,1083,1088,1090,1096,1098,1103,1105,1110],{"type":23,"value":1076},"In Python, ",{"type":17,"tag":79,"props":1078,"children":1080},{"className":1079},[],[1081],{"type":23,"value":105},{"type":23,"value":86},{"type":17,"tag":79,"props":1084,"children":1086},{"className":1085},[],[1087],{"type":23,"value":1070},{"type":23,"value":1089}," now point to the same object, which is the original list ",{"type":17,"tag":79,"props":1091,"children":1093},{"className":1092},[],[1094],{"type":23,"value":1095},"[1, 2, 3]",{"type":23,"value":1097},". You can prove this by appending an element to ",{"type":17,"tag":79,"props":1099,"children":1101},{"className":1100},[],[1102],{"type":23,"value":105},{"type":23,"value":1104}," and then checking ",{"type":17,"tag":79,"props":1106,"children":1108},{"className":1107},[],[1109],{"type":23,"value":1070},{"type":23,"value":920},{"type":17,"tag":518,"props":1112,"children":1113},{":editable":520,":show-in-col":520,"max-height":521},[1114,1123],{"type":17,"tag":275,"props":1115,"children":1118},{"code":1116,"language":432,"meta":8,"className":1117},"  a = [1, 2, 3]\n  b = a\n  a.append(4)\n  print(\"a =\", a)\n  print(\"b =\", b)\n",[527],[1119],{"type":17,"tag":79,"props":1120,"children":1121},{"__ignoreMap":8},[1122],{"type":23,"value":1116},{"type":17,"tag":26,"props":1124,"children":1125},{},[1126],{"type":23,"value":811},{"type":17,"tag":836,"props":1128,"children":1129},{},[1130],{"type":17,"tag":26,"props":1131,"children":1132},{},[1133,1135,1141,1143,1149],{"type":23,"value":1134},"💡 ",{"type":17,"tag":1136,"props":1137,"children":1138},"strong",{},[1139],{"type":23,"value":1140},"Tip:",{"type":23,"value":1142}," We generally use English words or letters to name variables, and cannot use numbers, or some keywords and function names like ",{"type":17,"tag":79,"props":1144,"children":1146},{"className":1145},[],[1147],{"type":23,"value":1148},"if, while, print, def",{"type":23,"value":1150}," etc.\n=======",{"type":17,"tag":26,"props":1152,"children":1153},{},[1154],{"type":23,"value":909},{"type":17,"tag":26,"props":1156,"children":1157},{},[1158,1160,1165],{"type":23,"value":1159},"Tips: We generally use English words or letters to name variables, and cannot use numbers, or some keywords and function names like ",{"type":17,"tag":79,"props":1161,"children":1163},{"className":1162},[],[1164],{"type":23,"value":1148},{"type":23,"value":1166}," etc.",{"type":17,"tag":836,"props":1168,"children":1169},{},[1170],{"type":17,"tag":836,"props":1171,"children":1172},{},[1173],{"type":17,"tag":836,"props":1174,"children":1175},{},[1176],{"type":17,"tag":836,"props":1177,"children":1178},{},[1179],{"type":17,"tag":836,"props":1180,"children":1181},{},[1182],{"type":17,"tag":836,"props":1183,"children":1184},{},[1185],{"type":17,"tag":836,"props":1186,"children":1187},{},[1188],{"type":17,"tag":26,"props":1189,"children":1190},{},[1191],{"type":23,"value":861},{"type":17,"tag":518,"props":1193,"children":1194},{":editable":520,":show-in-col":520,"max-height":521},[1195],{"type":17,"tag":275,"props":1196,"children":1199},{"code":1197,"language":432,"meta":8,"className":1198},"  # Incorrect example\n  print = 5  # Attempting to use the built-in function 'print' as a variable name\n\n  # This will raise a TypeError at runtime\n  print(\"Hello, World!\")  # This line of code will cause an error\n",[527],[1200],{"type":17,"tag":79,"props":1201,"children":1202},{"__ignoreMap":8},[1203],{"type":23,"value":1197},{"type":17,"tag":96,"props":1205,"children":1207},{"id":1206},"binary-operators",[1208],{"type":23,"value":1209},"Binary Operators",{"type":17,"tag":1211,"props":1212,"children":1213},"table",{},[1214,1233],{"type":17,"tag":1215,"props":1216,"children":1217},"thead",{},[1218],{"type":17,"tag":1219,"props":1220,"children":1221},"tr",{},[1222,1228],{"type":17,"tag":1223,"props":1224,"children":1225},"th",{},[1226],{"type":23,"value":1227},"Operation",{"type":17,"tag":1223,"props":1229,"children":1230},{},[1231],{"type":23,"value":1232},"Description",{"type":17,"tag":1234,"props":1235,"children":1236},"tbody",{},[1237,1251,1264,1277,1290,1303,1316,1329,1342,1355,1368,1381,1394,1407],{"type":17,"tag":1219,"props":1238,"children":1239},{},[1240,1246],{"type":17,"tag":1241,"props":1242,"children":1243},"td",{},[1244],{"type":23,"value":1245},"a + b",{"type":17,"tag":1241,"props":1247,"children":1248},{},[1249],{"type":23,"value":1250},"Add a and b",{"type":17,"tag":1219,"props":1252,"children":1253},{},[1254,1259],{"type":17,"tag":1241,"props":1255,"children":1256},{},[1257],{"type":23,"value":1258},"a - b",{"type":17,"tag":1241,"props":1260,"children":1261},{},[1262],{"type":23,"value":1263},"Subtract b from a",{"type":17,"tag":1219,"props":1265,"children":1266},{},[1267,1272],{"type":17,"tag":1241,"props":1268,"children":1269},{},[1270],{"type":23,"value":1271},"a* b",{"type":17,"tag":1241,"props":1273,"children":1274},{},[1275],{"type":23,"value":1276},"Multiply a by b",{"type":17,"tag":1219,"props":1278,"children":1279},{},[1280,1285],{"type":17,"tag":1241,"props":1281,"children":1282},{},[1283],{"type":23,"value":1284},"a / b",{"type":17,"tag":1241,"props":1286,"children":1287},{},[1288],{"type":23,"value":1289},"Divide a by b",{"type":17,"tag":1219,"props":1291,"children":1292},{},[1293,1298],{"type":17,"tag":1241,"props":1294,"children":1295},{},[1296],{"type":23,"value":1297},"a // b",{"type":17,"tag":1241,"props":1299,"children":1300},{},[1301],{"type":23,"value":1302},"Floor division by b, removing any decimal remainder",{"type":17,"tag":1219,"props":1304,"children":1305},{},[1306,1311],{"type":17,"tag":1241,"props":1307,"children":1308},{},[1309],{"type":23,"value":1310},"a** b",{"type":17,"tag":1241,"props":1312,"children":1313},{},[1314],{"type":23,"value":1315},"Raise a to the power of b",{"type":17,"tag":1219,"props":1317,"children":1318},{},[1319,1324],{"type":17,"tag":1241,"props":1320,"children":1321},{},[1322],{"type":23,"value":1323},"a & b",{"type":17,"tag":1241,"props":1325,"children":1326},{},[1327],{"type":23,"value":1328},"True if both a and b are True; for integers, bitwise AND",{"type":17,"tag":1219,"props":1330,"children":1331},{},[1332,1337],{"type":17,"tag":1241,"props":1333,"children":1334},{},[1335],{"type":23,"value":1336},"a ^ b",{"type":17,"tag":1241,"props":1338,"children":1339},{},[1340],{"type":23,"value":1341},"For booleans, True if a or b is True, but not both; for integers, bitwise XOR",{"type":17,"tag":1219,"props":1343,"children":1344},{},[1345,1350],{"type":17,"tag":1241,"props":1346,"children":1347},{},[1348],{"type":23,"value":1349},"a == b",{"type":17,"tag":1241,"props":1351,"children":1352},{},[1353],{"type":23,"value":1354},"True if a equals b",{"type":17,"tag":1219,"props":1356,"children":1357},{},[1358,1363],{"type":17,"tag":1241,"props":1359,"children":1360},{},[1361],{"type":23,"value":1362},"a != b",{"type":17,"tag":1241,"props":1364,"children":1365},{},[1366],{"type":23,"value":1367},"True if a is not equal to b",{"type":17,"tag":1219,"props":1369,"children":1370},{},[1371,1376],{"type":17,"tag":1241,"props":1372,"children":1373},{},[1374],{"type":23,"value":1375},"a \u003C b, a \u003C= b",{"type":17,"tag":1241,"props":1377,"children":1378},{},[1379],{"type":23,"value":1380},"True if a is less than (less than or equal to) b",{"type":17,"tag":1219,"props":1382,"children":1383},{},[1384,1389],{"type":17,"tag":1241,"props":1385,"children":1386},{},[1387],{"type":23,"value":1388},"a > b, a >= b",{"type":17,"tag":1241,"props":1390,"children":1391},{},[1392],{"type":23,"value":1393},"True if a is greater than (greater than or equal to) b",{"type":17,"tag":1219,"props":1395,"children":1396},{},[1397,1402],{"type":17,"tag":1241,"props":1398,"children":1399},{},[1400],{"type":23,"value":1401},"a is b",{"type":17,"tag":1241,"props":1403,"children":1404},{},[1405],{"type":23,"value":1406},"True if a and b refer to the same Python object",{"type":17,"tag":1219,"props":1408,"children":1409},{},[1410,1415],{"type":17,"tag":1241,"props":1411,"children":1412},{},[1413],{"type":23,"value":1414},"a is not b",{"type":17,"tag":1241,"props":1416,"children":1417},{},[1418],{"type":23,"value":1419},"True if a and b refer to different Python objects",{"type":17,"tag":26,"props":1421,"children":1422},{},[1423],{"type":23,"value":1424},"The table above shows some simple addition, subtraction, multiplication, division, comparisons, etc., which are often used in logical judgments.",{"type":17,"tag":96,"props":1426,"children":1428},{"id":1427},"data-types",[1429],{"type":23,"value":1430},"Data Types",{"type":17,"tag":26,"props":1432,"children":1433},{},[1434],{"type":23,"value":1435},"In Python, there are the following data types:",{"type":17,"tag":235,"props":1437,"children":1438},{},[1439,1444,1449,1454,1459,1464,1469,1474,1479],{"type":17,"tag":36,"props":1440,"children":1441},{},[1442],{"type":23,"value":1443},"Integer (int)",{"type":17,"tag":36,"props":1445,"children":1446},{},[1447],{"type":23,"value":1448},"Float (float)",{"type":17,"tag":36,"props":1450,"children":1451},{},[1452],{"type":23,"value":1453},"String (str)",{"type":17,"tag":36,"props":1455,"children":1456},{},[1457],{"type":23,"value":1458},"Boolean (bool)",{"type":17,"tag":36,"props":1460,"children":1461},{},[1462],{"type":23,"value":1463},"List (list)",{"type":17,"tag":36,"props":1465,"children":1466},{},[1467],{"type":23,"value":1468},"Tuple (tuple)",{"type":17,"tag":36,"props":1470,"children":1471},{},[1472],{"type":23,"value":1473},"Dictionary (dict)",{"type":17,"tag":36,"props":1475,"children":1476},{},[1477],{"type":23,"value":1478},"Set (set)",{"type":17,"tag":36,"props":1480,"children":1481},{},[1482],{"type":23,"value":1483},"Date and Time (datetime)",{"type":17,"tag":96,"props":1485,"children":1487},{"id":1486},"dictionary",[1488],{"type":23,"value":1489},"Dictionary",{"type":17,"tag":26,"props":1491,"children":1492},{},[1493,1495,1501,1503,1508,1510,1516],{"type":23,"value":1494},"A dictionary is another important data type in Python that allows us to store key-value pairs. Dictionaries are defined using curly braces ",{"type":17,"tag":79,"props":1496,"children":1498},{"className":1497},[],[1499],{"type":23,"value":1500},"{}",{"type":23,"value":1502},", with each key-value pair separated by a colon ",{"type":17,"tag":79,"props":1504,"children":1506},{"className":1505},[],[1507],{"type":23,"value":920},{"type":23,"value":1509},", and different pairs separated by commas ",{"type":17,"tag":79,"props":1511,"children":1513},{"className":1512},[],[1514],{"type":23,"value":1515},",",{"type":23,"value":1517},".",{"type":17,"tag":26,"props":1519,"children":1520},{},[1521],{"type":23,"value":1522},"Let's understand dictionaries through a practical example:",{"type":17,"tag":26,"props":1524,"children":1525},{},[1526],{"type":23,"value":1527},"Suppose we want to record a student's basic information:",{"type":17,"tag":275,"props":1529,"children":1532},{"code":1530,"language":432,"meta":8,"className":1531},"student = {\n    \"name\": \"John\",\n    \"age\": 20,\n    \"grades\": [85, 92, 78],\n    \"is_active\": True\n}\n",[527],[1533],{"type":17,"tag":79,"props":1534,"children":1535},{"__ignoreMap":8},[1536],{"type":23,"value":1530},{"type":17,"tag":26,"props":1538,"children":1539},{},[1540],{"type":23,"value":1541},"This example demonstrates several important features of dictionaries:",{"type":17,"tag":235,"props":1543,"children":1544},{},[1545,1550,1555],{"type":17,"tag":36,"props":1546,"children":1547},{},[1548],{"type":23,"value":1549},"Keys must be unique",{"type":17,"tag":36,"props":1551,"children":1552},{},[1553],{"type":23,"value":1554},"Values can be of any data type (strings, numbers, lists, booleans, etc.)",{"type":17,"tag":36,"props":1556,"children":1557},{},[1558],{"type":23,"value":1559},"Dictionaries are mutable, meaning we can add, modify, or delete key-value pairs",{"type":17,"tag":1561,"props":1562,"children":1564},"h4",{"id":1563},"common-dictionary-operations",[1565],{"type":23,"value":1566},"Common Dictionary Operations",{"type":17,"tag":275,"props":1568,"children":1571},{"code":1569,"language":432,"meta":8,"className":1570},"# Accessing values\nprint(student[\"name\"])  # Output: John\n\n# Modifying values\nstudent[\"age\"] = 21\n\n# Adding new key-value pairs\nstudent[\"class\"] = \"Python Class\"\n\n# Deleting key-value pairs\ndel student[\"is_active\"]\n\n# Getting all keys\nprint(student.keys())\n\n# Getting all values\nprint(student.values())\n",[527],[1572],{"type":17,"tag":79,"props":1573,"children":1574},{"__ignoreMap":8},[1575],{"type":23,"value":1569},{"type":17,"tag":836,"props":1577,"children":1578},{},[1579],{"type":17,"tag":26,"props":1580,"children":1581},{},[1582,1583,1588],{"type":23,"value":1134},{"type":17,"tag":1136,"props":1584,"children":1585},{},[1586],{"type":23,"value":1587},"Real-world Application Example",{"type":23,"value":1589},"\nIn real development, dictionaries are frequently used for handling configuration information, API response data, or database query results. For example, product information in an e-commerce system can be represented using a dictionary:",{"type":17,"tag":275,"props":1591,"children":1594},{"code":1592,"language":432,"meta":8,"className":1593},"product = {\n    \"id\": \"P001\",\n    \"name\": \"Mechanical Keyboard\",\n    \"price\": 299.99,\n    \"stock\": 50,\n    \"specifications\": {\n        \"brand\": \"Cherry\",\n        \"type\": \"Mechanical Switch\",\n        \"color\": \"Black\"\n    }\n}\n",[527],[1595],{"type":17,"tag":79,"props":1596,"children":1597},{"__ignoreMap":8},[1598],{"type":23,"value":1592},{"type":17,"tag":26,"props":1600,"children":1601},{},[1602],{"type":23,"value":811},{"type":17,"tag":96,"props":1604,"children":1606},{"id":1605},"exercise-school-grade-calculator",[1607],{"type":23,"value":1608},"Exercise: School Grade Calculator",{"type":17,"tag":26,"props":1610,"children":1611},{},[1612,1617,1621],{"type":17,"tag":1136,"props":1613,"children":1614},{},[1615],{"type":23,"value":1616},"Description:",{"type":17,"tag":1618,"props":1619,"children":1620},"br",{},[],{"type":23,"value":1622},"\nCreate a simple grade calculator that stores student scores and calculates their average using operators and a dictionary.",{"type":17,"tag":26,"props":1624,"children":1625},{},[1626],{"type":17,"tag":1136,"props":1627,"children":1628},{},[1629],{"type":23,"value":1630},"Solution:",{"type":17,"tag":518,"props":1632,"children":1633},{":editable":520,":show-in-col":520,"max-height":521},[1634],{"type":17,"tag":275,"props":1635,"children":1638},{"code":1636,"language":432,"meta":8,"className":1637},"# Create a dictionary to store student scores\nstudent_scores = {\n    \"Math\": 85,\n    \"Science\": 92,\n    \"English\": 78,\n    \"History\": 95\n}\n\n# Calculate total score using operators\ntotal_score = student_scores[\"Math\"] + student_scores[\"Science\"] + \\\n              student_scores[\"English\"] + student_scores[\"History\"]\n\n# Calculate average score using division operator\nnumber_of_subjects = len(student_scores)\naverage_score = total_score / number_of_subjects\n\n# Print results\nprint(\"Individual Scores:\", student_scores)\nprint(\"Total Score:\", total_score)\nprint(\"Average Score:\", average_score)\n\n# Check if the student passed (average > 80)\npassed = average_score > 80\nprint(\"Student Passed:\", passed)\n",[527],[1639],{"type":17,"tag":79,"props":1640,"children":1641},{"__ignoreMap":8},[1642],{"type":23,"value":1636},{"type":17,"tag":26,"props":1644,"children":1645},{},[1646],{"type":17,"tag":1136,"props":1647,"children":1648},{},[1649],{"type":23,"value":1650},"Key Concepts:",{"type":17,"tag":32,"props":1652,"children":1653},{},[1654,1666,1687,1700],{"type":17,"tag":36,"props":1655,"children":1656},{},[1657,1659,1664],{"type":23,"value":1658},"Dictionary Creation: Using ",{"type":17,"tag":79,"props":1660,"children":1662},{"className":1661},[],[1663],{"type":23,"value":1500},{"type":23,"value":1665}," to create a dictionary with subjects and scores",{"type":17,"tag":36,"props":1667,"children":1668},{},[1669,1671,1677,1679,1685],{"type":23,"value":1670},"Arithmetic Operators: ",{"type":17,"tag":79,"props":1672,"children":1674},{"className":1673},[],[1675],{"type":23,"value":1676},"+",{"type":23,"value":1678}," for addition, ",{"type":17,"tag":79,"props":1680,"children":1682},{"className":1681},[],[1683],{"type":23,"value":1684},"/",{"type":23,"value":1686}," for division",{"type":17,"tag":36,"props":1688,"children":1689},{},[1690,1692,1698],{"type":23,"value":1691},"Dictionary Access: Using ",{"type":17,"tag":79,"props":1693,"children":1695},{"className":1694},[],[1696],{"type":23,"value":1697},"dict[\"key\"]",{"type":23,"value":1699}," to get values",{"type":17,"tag":36,"props":1701,"children":1702},{},[1703,1705,1711],{"type":23,"value":1704},"Comparison Operator: ",{"type":17,"tag":79,"props":1706,"children":1708},{"className":1707},[],[1709],{"type":23,"value":1710},">",{"type":23,"value":1712}," to check if average is above passing grade",{"type":17,"tag":836,"props":1714,"children":1715},{},[1716],{"type":17,"tag":26,"props":1717,"children":1718},{},[1719,1720,1724],{"type":23,"value":1134},{"type":17,"tag":1136,"props":1721,"children":1722},{},[1723],{"type":23,"value":1140},{"type":23,"value":1725}," Think of a dictionary like a student's report card - each subject (key) has its corresponding score (value)!\n=======",{"type":17,"tag":96,"props":1727,"children":1729},{"id":1728},"练习题四大名著作者查询系统",[1730],{"type":23,"value":1731},"练习题：四大名著作者查询系统",{"type":17,"tag":26,"props":1733,"children":1734},{},[1735,1740],{"type":17,"tag":1136,"props":1736,"children":1737},{},[1738],{"type":23,"value":1739},"题目描述：",{"type":23,"value":1741},"\n请创建一个字典来存储四大名著及其作者信息，然后编写代码实现查询功能。",{"type":17,"tag":26,"props":1743,"children":1744},{},[1745],{"type":17,"tag":1136,"props":1746,"children":1747},{},[1748],{"type":23,"value":1749},"参考解答：",{"type":17,"tag":275,"props":1751,"children":1754},{"code":1752,"language":432,"meta":8,"className":1753},"# 创建存储四大名著信息的字典\nfamous_novels = {\n    \"水浒传\": \"施耐庵\",\n    \"三国演义\": \"罗贯中\",\n    \"西游记\": \"吴承恩\",\n    \"红楼梦\": \"曹雪芹\"\n}\n\n# 查询示例\ndef query_author(book_name):\n    if book_name in famous_novels:\n        return f\"{book_name}的作者是：{famous_novels[book_name]}\"\n    else:\n        return \"未找到该书籍信息\"\n\n# 测试代码\nprint(query_author(\"西游记\"))  # 输出：西游记的作者是：吴承恩\nprint(query_author(\"水浒传\"))  # 输出：水浒传的作者是：施耐庵\nprint(query_author(\"聊斋志异\"))  # 输出：未找到该书籍信息\n",[527],[1755],{"type":17,"tag":79,"props":1756,"children":1757},{"__ignoreMap":8},[1758],{"type":23,"value":1752},{"type":17,"tag":26,"props":1760,"children":1761},{},[1762],{"type":17,"tag":1136,"props":1763,"children":1764},{},[1765],{"type":23,"value":1766},"知识点解释：",{"type":17,"tag":32,"props":1768,"children":1769},{},[1770,1782,1795],{"type":17,"tag":36,"props":1771,"children":1772},{},[1773,1775,1780],{"type":23,"value":1774},"字典的创建：使用 ",{"type":17,"tag":79,"props":1776,"children":1778},{"className":1777},[],[1779],{"type":23,"value":1500},{"type":23,"value":1781}," 创建字典，键是书名，值是作者名",{"type":17,"tag":36,"props":1783,"children":1784},{},[1785,1787,1793],{"type":23,"value":1786},"字典的查询：使用 ",{"type":17,"tag":79,"props":1788,"children":1790},{"className":1789},[],[1791],{"type":23,"value":1792},"in",{"type":23,"value":1794}," 关键字检查键是否存在",{"type":17,"tag":36,"props":1796,"children":1797},{},[1798,1800,1806],{"type":23,"value":1799},"字典的访问：使用 ",{"type":17,"tag":79,"props":1801,"children":1803},{"className":1802},[],[1804],{"type":23,"value":1805},"dict[key]",{"type":23,"value":1807}," 获取对应的值",{"type":17,"tag":836,"props":1809,"children":1810},{},[1811],{"type":17,"tag":836,"props":1812,"children":1813},{},[1814],{"type":17,"tag":836,"props":1815,"children":1816},{},[1817],{"type":17,"tag":836,"props":1818,"children":1819},{},[1820],{"type":17,"tag":836,"props":1821,"children":1822},{},[1823],{"type":17,"tag":836,"props":1824,"children":1825},{},[1826],{"type":17,"tag":836,"props":1827,"children":1828},{},[1829],{"type":17,"tag":26,"props":1830,"children":1831},{},[1832],{"type":23,"value":861},{"title":8,"searchDepth":11,"depth":11,"links":1834},[1835,1836,1841],{"id":418,"depth":11,"text":421},{"id":535,"depth":11,"text":538,"children":1837},[1838,1839,1840],{"id":546,"depth":375,"text":549},{"id":641,"depth":375,"text":644},{"id":734,"depth":375,"text":737},{"id":794,"depth":11,"text":797,"children":1842},[1843,1844,1845,1846,1847,1848,1849,1850,1851],{"id":800,"depth":375,"text":803},{"id":864,"depth":375,"text":867},{"id":932,"depth":375,"text":935},{"id":1017,"depth":375,"text":1020},{"id":1206,"depth":375,"text":1209},{"id":1427,"depth":375,"text":1430},{"id":1486,"depth":375,"text":1489},{"id":1605,"depth":375,"text":1608},{"id":1728,"depth":375,"text":1731},"content:python-basic:2.1python_basic.md","python-basic/2.1python_basic.md","python-basic/2.1python_basic",{"_path":1856,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":1857,"description":395,"navigation":396,"index":1858,"icon":12,"body":1859,"_type":386,"_id":6393,"_source":388,"_file":6394,"_stem":6395,"_extension":391},"/python-basic/2python_basic_ii","2.2 Data Types and Variables",4,{"type":14,"children":1860,"toc":6366},[1861,1867,1872,2013,2056,2069,2081,2087,2112,2124,2129,2191,2210,2231,2243,2248,2260,2294,2306,2312,2371,2383,2388,2400,2427,2439,2501,2514,2526,2538,2543,2616,2621,2642,2654,2673,2685,2749,2761,2767,2772,2784,2852,2894,2906,2919,2931,2986,2998,3004,3023,3035,3055,3067,3110,3122,3141,3167,3179,3184,3256,3262,3290,3316,3349,3354,3366,3391,3396,3408,3432,3444,3456,3487,3519,3531,3549,3615,3621,3658,3709,3714,3720,3740,3752,3757,3769,3774,3793,3805,3832,3844,3856,3868,3873,3885,3906,3918,3924,3941,3946,3951,3963,3968,3980,3985,3997,4009,4021,4027,4044,4049,4054,4066,4078,4090,4102,4121,4133,4138,4150,4169,4174,4186,4220,4248,4260,4266,4290,4295,4300,4347,4408,4413,4466,4471,4480,4485,4490,4499,4566,4571,4576,4588,4601,4613,4625,4637,4665,4677,4682,4694,4699,4711,4716,4722,4728,4769,4781,4806,4811,4823,4878,4898,4903,4909,4914,4926,4947,4967,4972,4984,5025,5037,5049,5077,5083,5088,5094,5099,5104,5116,5137,5142,5148,5153,5158,5170,5189,5195,5215,5228,5246,5255,5317,5329,5341,5389,5401,5410,5422,5434,5459,5471,5480,5519,5529,5541,5560,5572,5584,5615,5634,5646,5673,5682,5745,5763,5775,5795,5807,5819,5830,5842,5847,5859,5886,5905,5917,5923,5928,5964,5975,5987,6034,6044,6056,6099,6109,6121,6157,6163,6168,6188,6200,6240,6271,6276,6288,6315,6320,6332],{"type":17,"tag":96,"props":1862,"children":1864},{"id":1863},"_11-data-types",[1865],{"type":23,"value":1866},"1.1 Data Types",{"type":17,"tag":26,"props":1868,"children":1869},{},[1870],{"type":23,"value":1871},"Python supports multiple data types, with the four most basic being:",{"type":17,"tag":235,"props":1873,"children":1874},{},[1875,1916,1955,1987],{"type":17,"tag":36,"props":1876,"children":1877},{},[1878,1880,1886,1888,1894,1896,1902,1903,1909,1910],{"type":23,"value":1879},"Integer: ",{"type":17,"tag":79,"props":1881,"children":1883},{"className":1882},[],[1884],{"type":23,"value":1885},"int",{"type":23,"value":1887},", e.g., ",{"type":17,"tag":79,"props":1889,"children":1891},{"className":1890},[],[1892],{"type":23,"value":1893},"1",{"type":23,"value":1895},", ",{"type":17,"tag":79,"props":1897,"children":1899},{"className":1898},[],[1900],{"type":23,"value":1901},"100",{"type":23,"value":1895},{"type":17,"tag":79,"props":1904,"children":1906},{"className":1905},[],[1907],{"type":23,"value":1908},"-8080",{"type":23,"value":1895},{"type":17,"tag":79,"props":1911,"children":1913},{"className":1912},[],[1914],{"type":23,"value":1915},"0",{"type":17,"tag":36,"props":1917,"children":1918},{},[1919,1921,1927,1928,1934,1935,1941,1942,1948,1949],{"type":23,"value":1920},"Float: ",{"type":17,"tag":79,"props":1922,"children":1924},{"className":1923},[],[1925],{"type":23,"value":1926},"float",{"type":23,"value":1887},{"type":17,"tag":79,"props":1929,"children":1931},{"className":1930},[],[1932],{"type":23,"value":1933},"1.23",{"type":23,"value":1895},{"type":17,"tag":79,"props":1936,"children":1938},{"className":1937},[],[1939],{"type":23,"value":1940},"-9.01",{"type":23,"value":1895},{"type":17,"tag":79,"props":1943,"children":1945},{"className":1944},[],[1946],{"type":23,"value":1947},"1.23e9",{"type":23,"value":1895},{"type":17,"tag":79,"props":1950,"children":1952},{"className":1951},[],[1953],{"type":23,"value":1954},"3.14e-10",{"type":17,"tag":36,"props":1956,"children":1957},{},[1958,1960,1966,1967,1973,1974,1980,1981],{"type":23,"value":1959},"String: ",{"type":17,"tag":79,"props":1961,"children":1963},{"className":1962},[],[1964],{"type":23,"value":1965},"str",{"type":23,"value":1887},{"type":17,"tag":79,"props":1968,"children":1970},{"className":1969},[],[1971],{"type":23,"value":1972},"'abc'",{"type":23,"value":1895},{"type":17,"tag":79,"props":1975,"children":1977},{"className":1976},[],[1978],{"type":23,"value":1979},"'xyz'",{"type":23,"value":1895},{"type":17,"tag":79,"props":1982,"children":1984},{"className":1983},[],[1985],{"type":23,"value":1986},"'123'",{"type":17,"tag":36,"props":1988,"children":1989},{},[1990,1992,1998,2000,2006,2007],{"type":23,"value":1991},"Boolean: ",{"type":17,"tag":79,"props":1993,"children":1995},{"className":1994},[],[1996],{"type":23,"value":1997},"bool",{"type":23,"value":1999},", including ",{"type":17,"tag":79,"props":2001,"children":2003},{"className":2002},[],[2004],{"type":23,"value":2005},"True",{"type":23,"value":86},{"type":17,"tag":79,"props":2008,"children":2010},{"className":2009},[],[2011],{"type":23,"value":2012},"False",{"type":17,"tag":836,"props":2014,"children":2015},{},[2016],{"type":17,"tag":26,"props":2017,"children":2018},{},[2019,2025,2027,2033,2035,2041,2043,2048,2050,2055],{"type":17,"tag":2020,"props":2021,"children":2022},"span",{},[2023],{"type":23,"value":2024},"!Note",{"type":23,"value":2026},"\nIn Python, when expressing strings, you need to enclose the string content with single quotes ",{"type":17,"tag":79,"props":2028,"children":2030},{"className":2029},[],[2031],{"type":23,"value":2032},"'",{"type":23,"value":2034}," or double quotes ",{"type":17,"tag":79,"props":2036,"children":2038},{"className":2037},[],[2039],{"type":23,"value":2040},"\"",{"type":23,"value":2042},". Additionally, for multi-line strings, you can use triple single quotes ",{"type":17,"tag":79,"props":2044,"children":2046},{"className":2045},[],[2047],{"type":23,"value":968},{"type":23,"value":2049}," or triple double quotes ",{"type":17,"tag":79,"props":2051,"children":2053},{"className":2052},[],[2054],{"type":23,"value":961},{"type":23,"value":1517},{"type":17,"tag":26,"props":2057,"children":2058},{},[2059,2061,2067],{"type":23,"value":2060},"To check the data type, you can use the ",{"type":17,"tag":79,"props":2062,"children":2064},{"className":2063},[],[2065],{"type":23,"value":2066},"type()",{"type":23,"value":2068}," function:",{"type":17,"tag":518,"props":2070,"children":2071},{":editable":520,":show-in-col":520,"max-height":521},[2072],{"type":17,"tag":275,"props":2073,"children":2076},{"className":2074,"code":2075,"language":432,"meta":8},[527],"print(type(1))\nprint(type(1.23))\nprint(type('hello'))\nprint(type(True))\n",[2077],{"type":17,"tag":79,"props":2078,"children":2079},{"__ignoreMap":8},[2080],{"type":23,"value":2075},{"type":17,"tag":96,"props":2082,"children":2084},{"id":2083},"_12-variables",[2085],{"type":23,"value":2086},"1.2 Variables",{"type":17,"tag":26,"props":2088,"children":2089},{},[2090,2092,2097,2099,2104,2106,2111],{"type":23,"value":2091},"In Python, variables are used to store data, and variable names are labels for the data. You can think of variables as boxes that hold things, with the box's name being the variable name and the contents being the data. In Python, we use ",{"type":17,"tag":79,"props":2093,"children":2095},{"className":2094},[],[2096],{"type":23,"value":1031},{"type":23,"value":2098}," to assign values to variables, i.e., store the data on the right side of ",{"type":17,"tag":79,"props":2100,"children":2102},{"className":2101},[],[2103],{"type":23,"value":1031},{"type":23,"value":2105}," into the variable on the left side of ",{"type":17,"tag":79,"props":2107,"children":2109},{"className":2108},[],[2110],{"type":23,"value":1031},{"type":23,"value":1517},{"type":17,"tag":518,"props":2113,"children":2114},{":editable":520,":show-in-col":520,"max-height":521},[2115],{"type":17,"tag":275,"props":2116,"children":2119},{"className":2117,"code":2118,"language":432,"meta":8},[527],"a = 1\nb = 1.23\nc = 'hello'\nd = True\n\nprint(a)\nprint(b)\nprint(c)\nprint(d)\n",[2120],{"type":17,"tag":79,"props":2121,"children":2122},{"__ignoreMap":8},[2123],{"type":23,"value":2118},{"type":17,"tag":26,"props":2125,"children":2126},{},[2127],{"type":23,"value":2128},"When naming variables, you need to follow these rules:",{"type":17,"tag":235,"props":2130,"children":2131},{},[2132,2145,2172],{"type":17,"tag":36,"props":2133,"children":2134},{},[2135,2137,2143],{"type":23,"value":2136},"Variable names can only contain letters, numbers, and underscores ",{"type":17,"tag":79,"props":2138,"children":2140},{"className":2139},[],[2141],{"type":23,"value":2142},"_",{"type":23,"value":2144},", and cannot start with a number.",{"type":17,"tag":36,"props":2146,"children":2147},{},[2148,2150,2156,2157,2163,2164,2170],{"type":23,"value":2149},"Variable names cannot contain spaces and cannot use Python's keywords, such as ",{"type":17,"tag":79,"props":2151,"children":2153},{"className":2152},[],[2154],{"type":23,"value":2155},"if",{"type":23,"value":1895},{"type":17,"tag":79,"props":2158,"children":2160},{"className":2159},[],[2161],{"type":23,"value":2162},"else",{"type":23,"value":1895},{"type":17,"tag":79,"props":2165,"children":2167},{"className":2166},[],[2168],{"type":23,"value":2169},"for",{"type":23,"value":2171},", etc.",{"type":17,"tag":36,"props":2173,"children":2174},{},[2175,2177,2182,2183,2189],{"type":23,"value":2176},"Variable names are case-sensitive, e.g., ",{"type":17,"tag":79,"props":2178,"children":2180},{"className":2179},[],[2181],{"type":23,"value":105},{"type":23,"value":86},{"type":17,"tag":79,"props":2184,"children":2186},{"className":2185},[],[2187],{"type":23,"value":2188},"A",{"type":23,"value":2190}," are two different variables.",{"type":17,"tag":26,"props":2192,"children":2193},{},[2194,2196,2202,2204,2209],{"type":23,"value":2195},"Additionally, to develop good programming habits, variable names should be descriptive to understand the purpose of the variable. For example, if we want to store a person's age, we can use the variable name ",{"type":17,"tag":79,"props":2197,"children":2199},{"className":2198},[],[2200],{"type":23,"value":2201},"age",{"type":23,"value":2203}," instead of ",{"type":17,"tag":79,"props":2205,"children":2207},{"className":2206},[],[2208],{"type":23,"value":105},{"type":23,"value":1517},{"type":17,"tag":26,"props":2211,"children":2212},{},[2213,2215,2221,2223,2229],{"type":23,"value":2214},"You may have noticed that when defining variables, we are not flexible enough. For example, we want each user to enter their name and then output ",{"type":17,"tag":79,"props":2216,"children":2218},{"className":2217},[],[2219],{"type":23,"value":2220},"Hello, xxx",{"type":23,"value":2222},". At this point, we need to use the ",{"type":17,"tag":79,"props":2224,"children":2226},{"className":2225},[],[2227],{"type":23,"value":2228},"input()",{"type":23,"value":2230}," function (functions will be introduced in detail later) to receive the user's input.",{"type":17,"tag":518,"props":2232,"children":2233},{":editable":520,":show-in-col":520,"max-height":521},[2234],{"type":17,"tag":275,"props":2235,"children":2238},{"className":2236,"code":2237,"language":432,"meta":8},[527],"input('What is your name? ')\nprint('Hello,')\n",[2239],{"type":17,"tag":79,"props":2240,"children":2241},{"__ignoreMap":8},[2242],{"type":23,"value":2237},{"type":17,"tag":26,"props":2244,"children":2245},{},[2246],{"type":23,"value":2247},"Did you notice that we entered the name but did not output the name? This is because we did not store the user's input into a variable. We need to store the user's input into a variable and then output it.",{"type":17,"tag":518,"props":2249,"children":2250},{":editable":520,":show-in-col":520,"max-height":521},[2251],{"type":17,"tag":275,"props":2252,"children":2255},{"className":2253,"code":2254,"language":432,"meta":8},[527],"name = input('What is your name? ')\nprint('Hello,', name)\n",[2256],{"type":17,"tag":79,"props":2257,"children":2258},{"__ignoreMap":8},[2259],{"type":23,"value":2254},{"type":17,"tag":26,"props":2261,"children":2262},{},[2263,2265,2271,2273,2278,2280,2285,2287,2292],{"type":23,"value":2264},"Observing the above example, it is easy to see that when using the ",{"type":17,"tag":79,"props":2266,"children":2268},{"className":2267},[],[2269],{"type":23,"value":2270},"print()",{"type":23,"value":2272}," function to output, we can output multiple contents at once, just separate them with a comma ",{"type":17,"tag":79,"props":2274,"children":2276},{"className":2275},[],[2277],{"type":23,"value":1515},{"type":23,"value":2279},". In fact, besides using ",{"type":17,"tag":79,"props":2281,"children":2283},{"className":2282},[],[2284],{"type":23,"value":1515},{"type":23,"value":2286},", we can also use ",{"type":17,"tag":79,"props":2288,"children":2290},{"className":2289},[],[2291],{"type":23,"value":1676},{"type":23,"value":2293}," to concatenate multiple strings.",{"type":17,"tag":518,"props":2295,"children":2296},{":editable":520,":show-in-col":520,"max-height":521},[2297],{"type":17,"tag":275,"props":2298,"children":2301},{"className":2299,"code":2300,"language":432,"meta":8},[527],"first_name = input('What is your first name? ')\nlast_name = input('What is your last name? ')\nprint('Hello,', first_name, last_name)\nprint('Hello, ' + first_name + ' ' + last_name)\n",[2302],{"type":17,"tag":79,"props":2303,"children":2304},{"__ignoreMap":8},[2305],{"type":23,"value":2300},{"type":17,"tag":96,"props":2307,"children":2309},{"id":2308},"_13-operators",[2310],{"type":23,"value":2311},"1.3 Operators",{"type":17,"tag":26,"props":2313,"children":2314},{},[2315,2317,2322,2324,2330,2332,2338,2340,2345,2347,2353,2355,2361,2363,2369],{"type":23,"value":2316},"Python supports multiple operators that can be used to manipulate various data types. First, let's look at arithmetic operators, including addition ",{"type":17,"tag":79,"props":2318,"children":2320},{"className":2319},[],[2321],{"type":23,"value":1676},{"type":23,"value":2323},", subtraction ",{"type":17,"tag":79,"props":2325,"children":2327},{"className":2326},[],[2328],{"type":23,"value":2329},"-",{"type":23,"value":2331},", multiplication ",{"type":17,"tag":79,"props":2333,"children":2335},{"className":2334},[],[2336],{"type":23,"value":2337},"*",{"type":23,"value":2339},", division ",{"type":17,"tag":79,"props":2341,"children":2343},{"className":2342},[],[2344],{"type":23,"value":1684},{"type":23,"value":2346},", modulus ",{"type":17,"tag":79,"props":2348,"children":2350},{"className":2349},[],[2351],{"type":23,"value":2352},"%",{"type":23,"value":2354},", exponentiation ",{"type":17,"tag":79,"props":2356,"children":2358},{"className":2357},[],[2359],{"type":23,"value":2360},"**",{"type":23,"value":2362},", and floor division ",{"type":17,"tag":79,"props":2364,"children":2366},{"className":2365},[],[2367],{"type":23,"value":2368},"//",{"type":23,"value":2370},". These operators function and are used the same way as in mathematics.",{"type":17,"tag":518,"props":2372,"children":2373},{":editable":520,":show-in-col":520,"max-height":521},[2374],{"type":17,"tag":275,"props":2375,"children":2378},{"className":2376,"code":2377,"language":432,"meta":8},[527],"print(1 + 2)\n",[2379],{"type":17,"tag":79,"props":2380,"children":2381},{"__ignoreMap":8},[2382],{"type":23,"value":2377},{"type":17,"tag":26,"props":2384,"children":2385},{},[2386],{"type":23,"value":2387},"Besides directly operating on numbers, we can also operate on variables.",{"type":17,"tag":518,"props":2389,"children":2390},{":editable":520,":show-in-col":520,"max-height":521},[2391],{"type":17,"tag":275,"props":2392,"children":2395},{"className":2393,"code":2394,"language":432,"meta":8},[527],"a = 1\nb = 2\nc = a + b\nprint(a, '+', b, '=', c)\n",[2396],{"type":17,"tag":79,"props":2397,"children":2398},{"__ignoreMap":8},[2399],{"type":23,"value":2394},{"type":17,"tag":26,"props":2401,"children":2402},{},[2403,2405,2411,2413,2418,2420,2426],{"type":23,"value":2404},"In Python, we can also use operators to modify the value of a variable. For example, if we have a variable ",{"type":17,"tag":79,"props":2406,"children":2408},{"className":2407},[],[2409],{"type":23,"value":2410},"x",{"type":23,"value":2412}," and we want to add 1 to the value of ",{"type":17,"tag":79,"props":2414,"children":2416},{"className":2415},[],[2417],{"type":23,"value":2410},{"type":23,"value":2419},", we can use ",{"type":17,"tag":79,"props":2421,"children":2423},{"className":2422},[],[2424],{"type":23,"value":2425},"x = x + 1",{"type":23,"value":1517},{"type":17,"tag":518,"props":2428,"children":2429},{":editable":520,":show-in-col":520,"max-height":521},[2430],{"type":17,"tag":275,"props":2431,"children":2434},{"className":2432,"code":2433,"language":432,"meta":8},[527],"x = 1\nx = x + 1\nprint(x)\n",[2435],{"type":17,"tag":79,"props":2436,"children":2437},{"__ignoreMap":8},[2438],{"type":23,"value":2433},{"type":17,"tag":26,"props":2440,"children":2441},{},[2442,2444,2449,2451,2457,2459,2465,2466,2472,2473,2479,2480,2486,2487,2493,2494,2500],{"type":23,"value":2443},"In the above code, ",{"type":17,"tag":79,"props":2445,"children":2447},{"className":2446},[],[2448],{"type":23,"value":2425},{"type":23,"value":2450}," can be abbreviated as ",{"type":17,"tag":79,"props":2452,"children":2454},{"className":2453},[],[2455],{"type":23,"value":2456},"x += 1",{"type":23,"value":2458},", which is a shorthand provided by Python. This shorthand applies to all operators, such as ",{"type":17,"tag":79,"props":2460,"children":2462},{"className":2461},[],[2463],{"type":23,"value":2464},"x -= 1",{"type":23,"value":1895},{"type":17,"tag":79,"props":2467,"children":2469},{"className":2468},[],[2470],{"type":23,"value":2471},"x *= 1",{"type":23,"value":1895},{"type":17,"tag":79,"props":2474,"children":2476},{"className":2475},[],[2477],{"type":23,"value":2478},"x /= 1",{"type":23,"value":1895},{"type":17,"tag":79,"props":2481,"children":2483},{"className":2482},[],[2484],{"type":23,"value":2485},"x %= 1",{"type":23,"value":1895},{"type":17,"tag":79,"props":2488,"children":2490},{"className":2489},[],[2491],{"type":23,"value":2492},"x **= 1",{"type":23,"value":1895},{"type":17,"tag":79,"props":2495,"children":2497},{"className":2496},[],[2498],{"type":23,"value":2499},"x //= 1",{"type":23,"value":1517},{"type":17,"tag":26,"props":2502,"children":2503},{},[2504,2506,2512],{"type":23,"value":2505},"The precedence of these operators is the same as in mathematics, i.e., multiplication and division before addition and subtraction. If there are multiple operators, you can use parentheses ",{"type":17,"tag":79,"props":2507,"children":2509},{"className":2508},[],[2510],{"type":23,"value":2511},"()",{"type":23,"value":2513}," to change the order of operations.",{"type":17,"tag":26,"props":2515,"children":2516},{},[2517,2519,2524],{"type":23,"value":2518},"Similarly to mathematical calculations, we can use the ",{"type":17,"tag":79,"props":2520,"children":2522},{"className":2521},[],[2523],{"type":23,"value":2352},{"type":23,"value":2525}," operator to determine whether a number is even or odd. If a number divided by 2 has a remainder of 0, it is even; otherwise, it is odd.",{"type":17,"tag":518,"props":2527,"children":2528},{":editable":520,":show-in-col":520,"max-height":521},[2529],{"type":17,"tag":275,"props":2530,"children":2533},{"className":2531,"code":2532,"language":432,"meta":8},[527],"x = 10\nif x % 2 == 0:\n    print('The number is even.')\nelse:\n    print('The number is odd.')\n",[2534],{"type":17,"tag":79,"props":2535,"children":2536},{"__ignoreMap":8},[2537],{"type":23,"value":2532},{"type":17,"tag":26,"props":2539,"children":2540},{},[2541],{"type":23,"value":2542},"Modifying the above program, we can create an interesting little exercise: a lazy calculator that accepts three inputs:",{"type":17,"tag":235,"props":2544,"children":2545},{},[2546,2562],{"type":17,"tag":36,"props":2547,"children":2548},{},[2549,2551,2556,2557],{"type":23,"value":2550},"Two numbers ",{"type":17,"tag":79,"props":2552,"children":2554},{"className":2553},[],[2555],{"type":23,"value":105},{"type":23,"value":86},{"type":17,"tag":79,"props":2558,"children":2560},{"className":2559},[],[2561],{"type":23,"value":1070},{"type":17,"tag":36,"props":2563,"children":2564},{},[2565,2567,2573,2575,2580,2581,2586,2587,2592,2593,2598,2599,2604,2605,2610,2611],{"type":23,"value":2566},"An operator ",{"type":17,"tag":79,"props":2568,"children":2570},{"className":2569},[],[2571],{"type":23,"value":2572},"op",{"type":23,"value":2574},", which can be ",{"type":17,"tag":79,"props":2576,"children":2578},{"className":2577},[],[2579],{"type":23,"value":1676},{"type":23,"value":1895},{"type":17,"tag":79,"props":2582,"children":2584},{"className":2583},[],[2585],{"type":23,"value":2329},{"type":23,"value":1895},{"type":17,"tag":79,"props":2588,"children":2590},{"className":2589},[],[2591],{"type":23,"value":2337},{"type":23,"value":1895},{"type":17,"tag":79,"props":2594,"children":2596},{"className":2595},[],[2597],{"type":23,"value":1684},{"type":23,"value":1895},{"type":17,"tag":79,"props":2600,"children":2602},{"className":2601},[],[2603],{"type":23,"value":2352},{"type":23,"value":1895},{"type":17,"tag":79,"props":2606,"children":2608},{"className":2607},[],[2609],{"type":23,"value":2360},{"type":23,"value":1895},{"type":17,"tag":79,"props":2612,"children":2614},{"className":2613},[],[2615],{"type":23,"value":2368},{"type":17,"tag":26,"props":2617,"children":2618},{},[2619],{"type":23,"value":2620},"The lazy calculator has some conditions:",{"type":17,"tag":235,"props":2622,"children":2623},{},[2624],{"type":17,"tag":36,"props":2625,"children":2626},{},[2627,2629,2634,2635,2640],{"type":23,"value":2628},"It can only perform calculations if both ",{"type":17,"tag":79,"props":2630,"children":2632},{"className":2631},[],[2633],{"type":23,"value":105},{"type":23,"value":86},{"type":17,"tag":79,"props":2636,"children":2638},{"className":2637},[],[2639],{"type":23,"value":1070},{"type":23,"value":2641}," are even numbers between 1 and 9; otherwise, it will complain: \"This calculation is too difficult for me.\"",{"type":17,"tag":518,"props":2643,"children":2644},{":editable":520,":show-in-col":520,"max-height":521},[2645],{"type":17,"tag":275,"props":2646,"children":2649},{"className":2647,"code":2648,"language":432,"meta":8},[527],"a = int(input(\"Enter Number a: \"))\nb = int(input(\"Enter Number b: \"))\noperand = input(\"Enter operand\")\n\nif a \u003C 1 or a > 9:\n    print(\"This is too complicated for me\")\n\nelif operand == \"+\":\n    print(a + b)\n\nelif operand == \"-\":\n    print(a - b)\n\nelif operand == \"%\":\n    print(a % b)\n\nelif operand == \"/\":\n    print(a / b)\n\nelse:\n    print(\"Invalid operand\")\n",[2650],{"type":17,"tag":79,"props":2651,"children":2652},{"__ignoreMap":8},[2653],{"type":23,"value":2648},{"type":17,"tag":26,"props":2655,"children":2656},{},[2657,2659,2664,2666,2671],{"type":23,"value":2658},"Additionally, the addition and multiplication operators in arithmetic operations have a special use, i.e., string concatenation. In Python, we can use the ",{"type":17,"tag":79,"props":2660,"children":2662},{"className":2661},[],[2663],{"type":23,"value":1676},{"type":23,"value":2665}," operator to concatenate strings and the ",{"type":17,"tag":79,"props":2667,"children":2669},{"className":2668},[],[2670],{"type":23,"value":2337},{"type":23,"value":2672}," operator to repeat strings.",{"type":17,"tag":518,"props":2674,"children":2675},{":editable":520,":show-in-col":520,"max-height":521},[2676],{"type":17,"tag":275,"props":2677,"children":2680},{"className":2678,"code":2679,"language":432,"meta":8},[527],"print('hello' + 'world')\nprint('hello' * 3)\n",[2681],{"type":17,"tag":79,"props":2682,"children":2683},{"__ignoreMap":8},[2684],{"type":23,"value":2679},{"type":17,"tag":26,"props":2686,"children":2687},{},[2688,2690,2696,2698,2704,2706,2711,2713,2719,2721,2727,2729,2735,2737,2742,2743,2748],{"type":23,"value":2689},"In addition to arithmetic operators, Python also supports comparison operators, including equal ",{"type":17,"tag":79,"props":2691,"children":2693},{"className":2692},[],[2694],{"type":23,"value":2695},"==",{"type":23,"value":2697},", not equal ",{"type":17,"tag":79,"props":2699,"children":2701},{"className":2700},[],[2702],{"type":23,"value":2703},"!=",{"type":23,"value":2705},", greater than ",{"type":17,"tag":79,"props":2707,"children":2709},{"className":2708},[],[2710],{"type":23,"value":1710},{"type":23,"value":2712},", less than ",{"type":17,"tag":79,"props":2714,"children":2716},{"className":2715},[],[2717],{"type":23,"value":2718},"\u003C",{"type":23,"value":2720},", greater than or equal to ",{"type":17,"tag":79,"props":2722,"children":2724},{"className":2723},[],[2725],{"type":23,"value":2726},">=",{"type":23,"value":2728},", and less than or equal to ",{"type":17,"tag":79,"props":2730,"children":2732},{"className":2731},[],[2733],{"type":23,"value":2734},"\u003C=",{"type":23,"value":2736},". These operators are used to compare the size of two values, and the result is a boolean value, either ",{"type":17,"tag":79,"props":2738,"children":2740},{"className":2739},[],[2741],{"type":23,"value":2005},{"type":23,"value":880},{"type":17,"tag":79,"props":2744,"children":2746},{"className":2745},[],[2747],{"type":23,"value":2012},{"type":23,"value":1517},{"type":17,"tag":518,"props":2750,"children":2751},{":editable":520,":show-in-col":520,"max-height":521},[2752],{"type":17,"tag":275,"props":2753,"children":2756},{"className":2754,"code":2755,"language":432,"meta":8},[527],"print(1 == 2)\nprint(1 != 2)\nprint(1 > 2)\nprint(1 \u003C 2)\nprint(1 >= 2)\nprint(1 \u003C= 2)\n",[2757],{"type":17,"tag":79,"props":2758,"children":2759},{"__ignoreMap":8},[2760],{"type":23,"value":2755},{"type":17,"tag":96,"props":2762,"children":2764},{"id":2763},"_14-type-conversion",[2765],{"type":23,"value":2766},"1.4 Type Conversion",{"type":17,"tag":26,"props":2768,"children":2769},{},[2770],{"type":23,"value":2771},"Sometimes, the data type of a variable is not what we want, and we need to convert the data type of the variable to the desired data type, which may cause some issues.",{"type":17,"tag":518,"props":2773,"children":2774},{":editable":520,":show-in-col":520,"max-height":521},[2775],{"type":17,"tag":275,"props":2776,"children":2779},{"className":2777,"code":2778,"language":432,"meta":8},[527],"a = '1'\nb = '2'\nprint(a + b)\n",[2780],{"type":17,"tag":79,"props":2781,"children":2782},{"__ignoreMap":8},[2783],{"type":23,"value":2778},{"type":17,"tag":26,"props":2785,"children":2786},{},[2787,2789,2795,2797,2803,2805,2810,2811,2817,2819,2824,2825,2830,2832,2837,2839,2844,2845,2850],{"type":23,"value":2788},"In the above example, the result of ",{"type":17,"tag":79,"props":2790,"children":2792},{"className":2791},[],[2793],{"type":23,"value":2794},"1 + 2",{"type":23,"value":2796}," is ",{"type":17,"tag":79,"props":2798,"children":2800},{"className":2799},[],[2801],{"type":23,"value":2802},"3",{"type":23,"value":2804},", but the result of ",{"type":17,"tag":79,"props":2806,"children":2808},{"className":2807},[],[2809],{"type":23,"value":1245},{"type":23,"value":2796},{"type":17,"tag":79,"props":2812,"children":2814},{"className":2813},[],[2815],{"type":23,"value":2816},"12",{"type":23,"value":2818}," because the data type of ",{"type":17,"tag":79,"props":2820,"children":2822},{"className":2821},[],[2823],{"type":23,"value":105},{"type":23,"value":86},{"type":17,"tag":79,"props":2826,"children":2828},{"className":2827},[],[2829],{"type":23,"value":1070},{"type":23,"value":2831}," is string, and the ",{"type":17,"tag":79,"props":2833,"children":2835},{"className":2834},[],[2836],{"type":23,"value":1676},{"type":23,"value":2838}," operator concatenates strings. To solve this problem, we need to convert the data type of ",{"type":17,"tag":79,"props":2840,"children":2842},{"className":2841},[],[2843],{"type":23,"value":105},{"type":23,"value":86},{"type":17,"tag":79,"props":2846,"children":2848},{"className":2847},[],[2849],{"type":23,"value":1070},{"type":23,"value":2851}," to integers.",{"type":17,"tag":26,"props":2853,"children":2854},{},[2855,2857,2863,2865,2871,2873,2879,2881,2886,2887,2892],{"type":23,"value":2856},"In Python, we can use the ",{"type":17,"tag":79,"props":2858,"children":2860},{"className":2859},[],[2861],{"type":23,"value":2862},"int()",{"type":23,"value":2864}," function to convert an object to an integer, the ",{"type":17,"tag":79,"props":2866,"children":2868},{"className":2867},[],[2869],{"type":23,"value":2870},"float()",{"type":23,"value":2872}," function to convert an object to a float, and the ",{"type":17,"tag":79,"props":2874,"children":2876},{"className":2875},[],[2877],{"type":23,"value":2878},"str()",{"type":23,"value":2880}," function to convert an object to a string. For the above example, we can convert ",{"type":17,"tag":79,"props":2882,"children":2884},{"className":2883},[],[2885],{"type":23,"value":105},{"type":23,"value":86},{"type":17,"tag":79,"props":2888,"children":2890},{"className":2889},[],[2891],{"type":23,"value":1070},{"type":23,"value":2893}," to integers and then perform the operation.",{"type":17,"tag":518,"props":2895,"children":2896},{":editable":520,":show-in-col":520,"max-height":521},[2897],{"type":17,"tag":275,"props":2898,"children":2901},{"className":2899,"code":2900,"language":432,"meta":8},[527],"a = '1'\nb = '2'\nprint(int(a) + int(b))\n",[2902],{"type":17,"tag":79,"props":2903,"children":2904},{"__ignoreMap":8},[2905],{"type":23,"value":2900},{"type":17,"tag":26,"props":2907,"children":2908},{},[2909,2911,2917],{"type":23,"value":2910},"When performing type conversion, note that if the object cannot be converted to the specified data type, an exception will be raised. For example, if we convert the string ",{"type":17,"tag":79,"props":2912,"children":2914},{"className":2913},[],[2915],{"type":23,"value":2916},"'hello'",{"type":23,"value":2918}," to an integer, an exception will be raised.",{"type":17,"tag":518,"props":2920,"children":2921},{":editable":520,":show-in-col":520,"max-height":521},[2922],{"type":17,"tag":275,"props":2923,"children":2926},{"className":2924,"code":2925,"language":432,"meta":8},[527],"a = 'hello'\nprint(int(a))\n",[2927],{"type":17,"tag":79,"props":2928,"children":2929},{"__ignoreMap":8},[2930],{"type":23,"value":2925},{"type":17,"tag":836,"props":2932,"children":2933},{},[2934,2943],{"type":17,"tag":26,"props":2935,"children":2936},{},[2937,2941],{"type":17,"tag":2020,"props":2938,"children":2939},{},[2940],{"type":23,"value":2024},{"type":23,"value":2942},"\nFloat",{"type":17,"tag":26,"props":2944,"children":2945},{},[2946,2948,2953,2954,2960,2962,2968,2970,2976,2978,2984],{"type":23,"value":2947},"A float is a real number with a decimal point. For example, ",{"type":17,"tag":79,"props":2949,"children":2951},{"className":2950},[],[2952],{"type":23,"value":1933},{"type":23,"value":86},{"type":17,"tag":79,"props":2955,"children":2957},{"className":2956},[],[2958],{"type":23,"value":2959},"3.14",{"type":23,"value":2961}," are floats. Floats support arithmetic operations like integers, but float operations may have errors because the internal representation of floats in a computer is not precise. For example, the result of ",{"type":17,"tag":79,"props":2963,"children":2965},{"className":2964},[],[2966],{"type":23,"value":2967},"0.1 + 0.2",{"type":23,"value":2969}," is not ",{"type":17,"tag":79,"props":2971,"children":2973},{"className":2972},[],[2974],{"type":23,"value":2975},"0.3",{"type":23,"value":2977}," but an approximate value. Therefore, when performing operations on floats, we can use the ",{"type":17,"tag":79,"props":2979,"children":2981},{"className":2980},[],[2982],{"type":23,"value":2983},"round()",{"type":23,"value":2985}," function to round the result.",{"type":17,"tag":518,"props":2987,"children":2988},{":editable":520,":show-in-col":520,"max-height":521},[2989],{"type":17,"tag":275,"props":2990,"children":2993},{"className":2991,"code":2992,"language":432,"meta":8},[527],"a = (2/3)\nprint(a)\nprint(round(a))\nprint(round(a, 2))\n",[2994],{"type":17,"tag":79,"props":2995,"children":2996},{"__ignoreMap":8},[2997],{"type":23,"value":2992},{"type":17,"tag":18,"props":2999,"children":3001},{"id":3000},"_2-conditional-statements",[3002],{"type":23,"value":3003},"2. Conditional Statements",{"type":17,"tag":26,"props":3005,"children":3006},{},[3007,3009,3014,3016,3021],{"type":23,"value":3008},"In programming, we often need to execute different code based on conditions, which requires conditional statements. The most basic conditional statement in Python is the ",{"type":17,"tag":79,"props":3010,"children":3012},{"className":3011},[],[3013],{"type":23,"value":2155},{"type":23,"value":3015}," statement, which is used to determine whether a condition is true. If it is true, the code block in the ",{"type":17,"tag":79,"props":3017,"children":3019},{"className":3018},[],[3020],{"type":23,"value":2155},{"type":23,"value":3022}," statement is executed; otherwise, it is not executed.",{"type":17,"tag":518,"props":3024,"children":3025},{":editable":520,":show-in-col":520,"max-height":521},[3026],{"type":17,"tag":275,"props":3027,"children":3030},{"className":3028,"code":3029,"language":432,"meta":8},[527],"x = int(input('Please enter an integer: '))\nif x > 0:\n    print('The number is positive.')\n",[3031],{"type":17,"tag":79,"props":3032,"children":3033},{"__ignoreMap":8},[3034],{"type":23,"value":3029},{"type":17,"tag":26,"props":3036,"children":3037},{},[3038,3040,3045,3047,3053],{"type":23,"value":3039},"In the above example, we use the ",{"type":17,"tag":79,"props":3041,"children":3043},{"className":3042},[],[3044],{"type":23,"value":2228},{"type":23,"value":3046}," function to receive an integer input from the user and then determine whether the integer is greater than 0. If it is greater than 0, it outputs ",{"type":17,"tag":79,"props":3048,"children":3050},{"className":3049},[],[3051],{"type":23,"value":3052},"The number is positive.",{"type":23,"value":3054},". Now, let's look at a more complex example to determine whether an integer is positive, negative, or zero.",{"type":17,"tag":518,"props":3056,"children":3057},{":editable":520,":show-in-col":520,"max-height":521},[3058],{"type":17,"tag":275,"props":3059,"children":3062},{"className":3060,"code":3061,"language":432,"meta":8},[527],"x = int(input('Please enter an integer: '))\nif x > 0:\n    print('The number is positive.')\nif x \u003C 0:\n    print('The number is negative.')\nif x == 0:\n    print('The number is zero.')\n",[3063],{"type":17,"tag":79,"props":3064,"children":3065},{"__ignoreMap":8},[3066],{"type":23,"value":3061},{"type":17,"tag":26,"props":3068,"children":3069},{},[3070,3072,3077,3079,3084,3086,3092,3094,3100,3102,3108],{"type":23,"value":3071},"In the above example, we use three ",{"type":17,"tag":79,"props":3073,"children":3075},{"className":3074},[],[3076],{"type":23,"value":2155},{"type":23,"value":3078}," statements to determine whether the integer ",{"type":17,"tag":79,"props":3080,"children":3082},{"className":3081},[],[3083],{"type":23,"value":2410},{"type":23,"value":3085}," is greater than 0, less than 0, or equal to 0. Although this meets our needs, the code is redundant because an integer cannot be both greater than 0 and less than 0. To solve this problem, we can use the ",{"type":17,"tag":79,"props":3087,"children":3089},{"className":3088},[],[3090],{"type":23,"value":3091},"if-elif",{"type":23,"value":3093}," statement. ",{"type":17,"tag":79,"props":3095,"children":3097},{"className":3096},[],[3098],{"type":23,"value":3099},"elif",{"type":23,"value":3101}," is short for ",{"type":17,"tag":79,"props":3103,"children":3105},{"className":3104},[],[3106],{"type":23,"value":3107},"else if",{"type":23,"value":3109}," and is used to determine multiple conditions.",{"type":17,"tag":518,"props":3111,"children":3112},{":editable":520,":show-in-col":520,"max-height":521},[3113],{"type":17,"tag":275,"props":3114,"children":3117},{"className":3115,"code":3116,"language":432,"meta":8},[527],"x = int(input('Please enter an integer: '))\nif x > 0:\n    print('The number is positive.')\nelif x \u003C 0:\n    print('The number is negative.')\nelif x == 0:\n    print('The number is zero.')\n",[3118],{"type":17,"tag":79,"props":3119,"children":3120},{"__ignoreMap":8},[3121],{"type":23,"value":3116},{"type":17,"tag":26,"props":3123,"children":3124},{},[3125,3127,3132,3134,3139],{"type":23,"value":3126},"In the ",{"type":17,"tag":79,"props":3128,"children":3130},{"className":3129},[],[3131],{"type":23,"value":3091},{"type":23,"value":3133}," statement, when the first condition is true, the corresponding code block is executed, and the entire ",{"type":17,"tag":79,"props":3135,"children":3137},{"className":3136},[],[3138],{"type":23,"value":3091},{"type":23,"value":3140}," statement is exited, without executing the subsequent conditions. If the first condition is false, the next condition is checked until a true condition is found, and the corresponding code block is executed. If all conditions are false, no code block is executed. If multiple conditions are true, only the code block of the first true condition is executed.",{"type":17,"tag":26,"props":3142,"children":3143},{},[3144,3146,3151,3153,3159,3160,3165],{"type":23,"value":3145},"For the above example, we also find that there is no need to perform the third check because when the integer ",{"type":17,"tag":79,"props":3147,"children":3149},{"className":3148},[],[3150],{"type":23,"value":2410},{"type":23,"value":3152}," is greater than 0, it cannot be less than 0 or equal to 0. To further simplify the code, we can use the ",{"type":17,"tag":79,"props":3154,"children":3156},{"className":3155},[],[3157],{"type":23,"value":3158},"if-elif-else",{"type":23,"value":3093},{"type":17,"tag":79,"props":3161,"children":3163},{"className":3162},[],[3164],{"type":23,"value":2162},{"type":23,"value":3166}," is used to handle all other cases.",{"type":17,"tag":518,"props":3168,"children":3169},{":editable":520,":show-in-col":520,"max-height":521},[3170],{"type":17,"tag":275,"props":3171,"children":3174},{"className":3172,"code":3173,"language":432,"meta":8},[527],"x = int(input('Please enter an integer: '))\nif x > 0:\n    print('The number is positive.')\nelif x \u003C 0:\n    print('The number is negative.')\nelse:\n    print('The number is zero.')\n",[3175],{"type":17,"tag":79,"props":3176,"children":3177},{"__ignoreMap":8},[3178],{"type":23,"value":3173},{"type":17,"tag":26,"props":3180,"children":3181},{},[3182],{"type":23,"value":3183},"From the above example, we can summarize the following rules:",{"type":17,"tag":235,"props":3185,"children":3186},{},[3187,3206,3218,3237],{"type":17,"tag":36,"props":3188,"children":3189},{},[3190,3192,3197,3199,3204],{"type":23,"value":3191},"The ",{"type":17,"tag":79,"props":3193,"children":3195},{"className":3194},[],[3196],{"type":23,"value":2155},{"type":23,"value":3198}," statement is used to determine whether a condition is true. If it is true, the code block in the ",{"type":17,"tag":79,"props":3200,"children":3202},{"className":3201},[],[3203],{"type":23,"value":2155},{"type":23,"value":3205}," statement is executed.",{"type":17,"tag":36,"props":3207,"children":3208},{},[3209,3211,3216],{"type":23,"value":3210},"There can be multiple ",{"type":17,"tag":79,"props":3212,"children":3214},{"className":3213},[],[3215],{"type":23,"value":3099},{"type":23,"value":3217}," statements to determine multiple conditions.",{"type":17,"tag":36,"props":3219,"children":3220},{},[3221,3223,3228,3230,3235],{"type":23,"value":3222},"If all conditions are false, the ",{"type":17,"tag":79,"props":3224,"children":3226},{"className":3225},[],[3227],{"type":23,"value":2162},{"type":23,"value":3229}," statement can be used to execute the code block in the ",{"type":17,"tag":79,"props":3231,"children":3233},{"className":3232},[],[3234],{"type":23,"value":2162},{"type":23,"value":3236}," statement.",{"type":17,"tag":36,"props":3238,"children":3239},{},[3240,3242,3247,3249,3254],{"type":23,"value":3241},"If each condition to be checked is unrelated, multiple ",{"type":17,"tag":79,"props":3243,"children":3245},{"className":3244},[],[3246],{"type":23,"value":2155},{"type":23,"value":3248}," statements can be used; if the conditions are mutually exclusive, the ",{"type":17,"tag":79,"props":3250,"children":3252},{"className":3251},[],[3253],{"type":23,"value":3158},{"type":23,"value":3255}," statement can be used.",{"type":17,"tag":18,"props":3257,"children":3259},{"id":3258},"_3-logical-operators",[3260],{"type":23,"value":3261},"3. Logical Operators",{"type":17,"tag":26,"props":3263,"children":3264},{},[3265,3267,3273,3274,3280,3282,3288],{"type":23,"value":3266},"In conditional statements, we often need to determine multiple conditions, which requires logical operators. Python has three logical operators: ",{"type":17,"tag":79,"props":3268,"children":3270},{"className":3269},[],[3271],{"type":23,"value":3272},"and",{"type":23,"value":1895},{"type":17,"tag":79,"props":3275,"children":3277},{"className":3276},[],[3278],{"type":23,"value":3279},"or",{"type":23,"value":3281},", and ",{"type":17,"tag":79,"props":3283,"children":3285},{"className":3284},[],[3286],{"type":23,"value":3287},"not",{"type":23,"value":3289},". These operators are used to combine multiple conditions.",{"type":17,"tag":26,"props":3291,"children":3292},{},[3293,3295,3300,3302,3307,3309,3314],{"type":23,"value":3294},"Semantically, ",{"type":17,"tag":79,"props":3296,"children":3298},{"className":3297},[],[3299],{"type":23,"value":3272},{"type":23,"value":3301}," means \"and\", ",{"type":17,"tag":79,"props":3303,"children":3305},{"className":3304},[],[3306],{"type":23,"value":3279},{"type":23,"value":3308}," means \"or\", and ",{"type":17,"tag":79,"props":3310,"children":3312},{"className":3311},[],[3313],{"type":23,"value":3287},{"type":23,"value":3315}," means \"not\". Logical operators are usually used in conditional statements to determine multiple conditions.",{"type":17,"tag":235,"props":3317,"children":3318},{},[3319,3329,3339],{"type":17,"tag":36,"props":3320,"children":3321},{},[3322,3327],{"type":17,"tag":79,"props":3323,"children":3325},{"className":3324},[],[3326],{"type":23,"value":3272},{"type":23,"value":3328}," operator: The result is true if both conditions are true; otherwise, it is false.",{"type":17,"tag":36,"props":3330,"children":3331},{},[3332,3337],{"type":17,"tag":79,"props":3333,"children":3335},{"className":3334},[],[3336],{"type":23,"value":3279},{"type":23,"value":3338}," operator: The result is true if at least one of the conditions is true; otherwise, it is false.",{"type":17,"tag":36,"props":3340,"children":3341},{},[3342,3347],{"type":17,"tag":79,"props":3343,"children":3345},{"className":3344},[],[3346],{"type":23,"value":3287},{"type":23,"value":3348}," operator: The result is false if the condition is true; the result is true if the condition is false.",{"type":17,"tag":26,"props":3350,"children":3351},{},[3352],{"type":23,"value":3353},"Let's look at an example to determine whether an integer is greater than 0 and less than 10.",{"type":17,"tag":518,"props":3355,"children":3356},{":editable":520,":show-in-col":520,"max-height":521},[3357],{"type":17,"tag":275,"props":3358,"children":3361},{"className":3359,"code":3360,"language":432,"meta":8},[527],"x = int(input('Please enter an integer: '))\nif x > 0 and x \u003C 10:\n    print('The number is between 0 and 10.')\nelse:\n    print('The number is not between 0 and 10.')\n",[3362],{"type":17,"tag":79,"props":3363,"children":3364},{"__ignoreMap":8},[3365],{"type":23,"value":3360},{"type":17,"tag":26,"props":3367,"children":3368},{},[3369,3371,3376,3378,3383,3385,3390],{"type":23,"value":3370},"Here, we use the ",{"type":17,"tag":79,"props":3372,"children":3374},{"className":3373},[],[3375],{"type":23,"value":3272},{"type":23,"value":3377}," operator to combine two conditions. Only when both conditions are true is the result true. If ",{"type":17,"tag":79,"props":3379,"children":3381},{"className":3380},[],[3382],{"type":23,"value":2410},{"type":23,"value":3384}," does not satisfy either of these conditions, the code block in the ",{"type":17,"tag":79,"props":3386,"children":3388},{"className":3387},[],[3389],{"type":23,"value":2162},{"type":23,"value":3205},{"type":17,"tag":26,"props":3392,"children":3393},{},[3394],{"type":23,"value":3395},"Let's slightly modify the above example to determine whether an integer is less than 0 or greater than 10.",{"type":17,"tag":518,"props":3397,"children":3398},{":editable":520,":show-in-col":520,"max-height":521},[3399],{"type":17,"tag":275,"props":3400,"children":3403},{"className":3401,"code":3402,"language":432,"meta":8},[527],"x = int(input('Please enter an integer: '))\nif x \u003C 0 or x > 10:\n    print('The number is less than 0 or greater than 10.')\nelse:\n    print('The number is between 0 and 10.')\n",[3404],{"type":17,"tag":79,"props":3405,"children":3406},{"__ignoreMap":8},[3407],{"type":23,"value":3402},{"type":17,"tag":26,"props":3409,"children":3410},{},[3411,3412,3417,3419,3424,3426,3431],{"type":23,"value":3370},{"type":17,"tag":79,"props":3413,"children":3415},{"className":3414},[],[3416],{"type":23,"value":3279},{"type":23,"value":3418}," operator to combine two conditions. As long as at least one of the conditions is true, the result is true. If ",{"type":17,"tag":79,"props":3420,"children":3422},{"className":3421},[],[3423],{"type":23,"value":2410},{"type":23,"value":3425}," satisfies either of these conditions, the code block in the ",{"type":17,"tag":79,"props":3427,"children":3429},{"className":3428},[],[3430],{"type":23,"value":2155},{"type":23,"value":3205},{"type":17,"tag":26,"props":3433,"children":3434},{},[3435,3437,3442],{"type":23,"value":3436},"Finally, let's look at an example using the ",{"type":17,"tag":79,"props":3438,"children":3440},{"className":3439},[],[3441],{"type":23,"value":3287},{"type":23,"value":3443}," operator to determine whether an integer is not equal to 0.",{"type":17,"tag":518,"props":3445,"children":3446},{":editable":520,":show-in-col":520,"max-height":521},[3447],{"type":17,"tag":275,"props":3448,"children":3451},{"className":3449,"code":3450,"language":432,"meta":8},[527],"x = int(input('Please enter an integer: '))\nif not x == 0:\n    print('The number is not zero.')\nelse:\n    print('The number is zero.')\n",[3452],{"type":17,"tag":79,"props":3453,"children":3454},{"__ignoreMap":8},[3455],{"type":23,"value":3450},{"type":17,"tag":26,"props":3457,"children":3458},{},[3459,3460,3465,3467,3472,3474,3479,3481,3486],{"type":23,"value":3370},{"type":17,"tag":79,"props":3461,"children":3463},{"className":3462},[],[3464],{"type":23,"value":3287},{"type":23,"value":3466}," operator to negate the condition, i.e., when the condition is true, the result is false; when the condition is false, the result is true. If ",{"type":17,"tag":79,"props":3468,"children":3470},{"className":3469},[],[3471],{"type":23,"value":2410},{"type":23,"value":3473}," is not equal to 0, the code block in the ",{"type":17,"tag":79,"props":3475,"children":3477},{"className":3476},[],[3478],{"type":23,"value":2155},{"type":23,"value":3480}," statement is executed; otherwise, the code block in the ",{"type":17,"tag":79,"props":3482,"children":3484},{"className":3483},[],[3485],{"type":23,"value":2162},{"type":23,"value":3205},{"type":17,"tag":26,"props":3488,"children":3489},{},[3490,3492,3497,3499,3504,3505,3510,3512,3517],{"type":23,"value":3491},"The precedence of these operators is ",{"type":17,"tag":79,"props":3493,"children":3495},{"className":3494},[],[3496],{"type":23,"value":3287},{"type":23,"value":3498}," > ",{"type":17,"tag":79,"props":3500,"children":3502},{"className":3501},[],[3503],{"type":23,"value":3272},{"type":23,"value":3498},{"type":17,"tag":79,"props":3506,"children":3508},{"className":3507},[],[3509],{"type":23,"value":3279},{"type":23,"value":3511},". If there are multiple logical operators, parentheses ",{"type":17,"tag":79,"props":3513,"children":3515},{"className":3514},[],[3516],{"type":23,"value":2511},{"type":23,"value":3518}," can be used to change the order of operations.",{"type":17,"tag":518,"props":3520,"children":3521},{":editable":520,":show-in-col":520,"max-height":521},[3522],{"type":17,"tag":275,"props":3523,"children":3526},{"className":3524,"code":3525,"language":432,"meta":8},[527],"x = -5\ny = 10\nz = 5\n\n# Without parentheses\nif x > 0 and y > 0 or z > 0:\n    print('Condition without parentheses is True.')\nelse:\n    print('Condition without parentheses is False.')\n\n# With parentheses\nif x > 0 and (y > 0 or z > 0):\n    print('Condition with parentheses is True.')\nelse:\n    print('Condition with parentheses is False.')\n",[3527],{"type":17,"tag":79,"props":3528,"children":3529},{"__ignoreMap":8},[3530],{"type":23,"value":3525},{"type":17,"tag":26,"props":3532,"children":3533},{},[3534,3536,3541,3542,3547],{"type":23,"value":3535},"In the above example, we use ",{"type":17,"tag":79,"props":3537,"children":3539},{"className":3538},[],[3540],{"type":23,"value":3272},{"type":23,"value":86},{"type":17,"tag":79,"props":3543,"children":3545},{"className":3544},[],[3546],{"type":23,"value":3279},{"type":23,"value":3548}," operators to combine multiple conditions:",{"type":17,"tag":235,"props":3550,"children":3551},{},[3552,3594],{"type":17,"tag":36,"props":3553,"children":3554},{},[3555,3557,3562,3564,3569,3570,3576,3578,3584,3586,3592],{"type":23,"value":3556},"Without parentheses: Since ",{"type":17,"tag":79,"props":3558,"children":3560},{"className":3559},[],[3561],{"type":23,"value":3272},{"type":23,"value":3563}," has a higher precedence than ",{"type":17,"tag":79,"props":3565,"children":3567},{"className":3566},[],[3568],{"type":23,"value":3279},{"type":23,"value":1895},{"type":17,"tag":79,"props":3571,"children":3573},{"className":3572},[],[3574],{"type":23,"value":3575},"x > 0 and y > 0",{"type":23,"value":3577}," is evaluated first, resulting in False. Then ",{"type":17,"tag":79,"props":3579,"children":3581},{"className":3580},[],[3582],{"type":23,"value":3583},"False or z > 0",{"type":23,"value":3585}," is evaluated, and since ",{"type":17,"tag":79,"props":3587,"children":3589},{"className":3588},[],[3590],{"type":23,"value":3591},"z > 0",{"type":23,"value":3593}," is True, the entire condition is True.",{"type":17,"tag":36,"props":3595,"children":3596},{},[3597,3599,3605,3607,3613],{"type":23,"value":3598},"With parentheses: The condition inside the parentheses is evaluated first, i.e., ",{"type":17,"tag":79,"props":3600,"children":3602},{"className":3601},[],[3603],{"type":23,"value":3604},"y > 0 or z > 0",{"type":23,"value":3606},", which is True. Then ",{"type":17,"tag":79,"props":3608,"children":3610},{"className":3609},[],[3611],{"type":23,"value":3612},"x > 0 and True",{"type":23,"value":3614}," is evaluated, resulting in False. So the entire condition is False.",{"type":17,"tag":18,"props":3616,"children":3618},{"id":3617},"_4-data-structures",[3619],{"type":23,"value":3620},"4. Data Structures",{"type":17,"tag":26,"props":3622,"children":3623},{},[3624,3626,3632,3634,3640,3642,3648,3650,3656],{"type":23,"value":3625},"When we need to store multiple pieces of data, a good way is to use data structures. Python has four basic data structures: lists (",{"type":17,"tag":79,"props":3627,"children":3629},{"className":3628},[],[3630],{"type":23,"value":3631},"list",{"type":23,"value":3633},"), tuples (",{"type":17,"tag":79,"props":3635,"children":3637},{"className":3636},[],[3638],{"type":23,"value":3639},"tuple",{"type":23,"value":3641},"), sets (",{"type":17,"tag":79,"props":3643,"children":3645},{"className":3644},[],[3646],{"type":23,"value":3647},"set",{"type":23,"value":3649},"), and dictionaries (",{"type":17,"tag":79,"props":3651,"children":3653},{"className":3652},[],[3654],{"type":23,"value":3655},"dict",{"type":23,"value":3657},"). They have two basic properties: whether they are ordered and whether they are mutable. Ordered means that the elements in the data structure are arranged in a certain order, and each object has a clear position. For ordered data structures, we can refer to the objects as the first, second, third, etc. Mutable means that the elements in the data structure can be modified. If they can be modified, we call the data structure mutable; if not, we call it immutable.",{"type":17,"tag":235,"props":3659,"children":3660},{},[3661,3673,3685,3697],{"type":17,"tag":36,"props":3662,"children":3663},{},[3664,3666,3671],{"type":23,"value":3665},"List (",{"type":17,"tag":79,"props":3667,"children":3669},{"className":3668},[],[3670],{"type":23,"value":3631},{"type":23,"value":3672},"): Ordered, mutable, used to store multiple ordered elements.",{"type":17,"tag":36,"props":3674,"children":3675},{},[3676,3678,3683],{"type":23,"value":3677},"Tuple (",{"type":17,"tag":79,"props":3679,"children":3681},{"className":3680},[],[3682],{"type":23,"value":3639},{"type":23,"value":3684},"): Ordered, immutable, used to store multiple ordered elements.",{"type":17,"tag":36,"props":3686,"children":3687},{},[3688,3690,3695],{"type":23,"value":3689},"Set (",{"type":17,"tag":79,"props":3691,"children":3693},{"className":3692},[],[3694],{"type":23,"value":3647},{"type":23,"value":3696},"): Unordered, mutable, used to store multiple unordered elements.",{"type":17,"tag":36,"props":3698,"children":3699},{},[3700,3702,3707],{"type":23,"value":3701},"Dictionary (",{"type":17,"tag":79,"props":3703,"children":3705},{"className":3704},[],[3706],{"type":23,"value":3655},{"type":23,"value":3708},"): Unordered, mutable, used to store multiple key-value pairs.",{"type":17,"tag":26,"props":3710,"children":3711},{},[3712],{"type":23,"value":3713},"Typically, we use lists to store multiple elements, tuples to store multiple immutable elements, sets to store multiple unique elements, and dictionaries to store multiple key-value pairs.",{"type":17,"tag":96,"props":3715,"children":3717},{"id":3716},"_41-lists",[3718],{"type":23,"value":3719},"4.1 Lists",{"type":17,"tag":26,"props":3721,"children":3722},{},[3723,3725,3731,3733,3738],{"type":23,"value":3724},"Lists are the most commonly used data structure in Python, used to store multiple ordered elements. Lists are represented by square brackets ",{"type":17,"tag":79,"props":3726,"children":3728},{"className":3727},[],[3729],{"type":23,"value":3730},"[]",{"type":23,"value":3732},", with elements separated by commas ",{"type":17,"tag":79,"props":3734,"children":3736},{"className":3735},[],[3737],{"type":23,"value":1515},{"type":23,"value":3739},". The elements in a list can be of any data type, including integers, floats, strings, booleans, and even other lists.",{"type":17,"tag":836,"props":3741,"children":3742},{},[3743],{"type":17,"tag":26,"props":3744,"children":3745},{},[3746,3750],{"type":17,"tag":2020,"props":3747,"children":3748},{},[3749],{"type":23,"value":2024},{"type":23,"value":3751},"\nAlthough lists support storing elements of different types, it is generally not recommended to store different types of elements in a list, as it makes the code difficult to understand.",{"type":17,"tag":26,"props":3753,"children":3754},{},[3755],{"type":23,"value":3756},"Here is a simple example of a list.",{"type":17,"tag":518,"props":3758,"children":3759},{":editable":520,":show-in-col":520,"max-height":521},[3760],{"type":17,"tag":275,"props":3761,"children":3764},{"className":3762,"code":3763,"language":432,"meta":8},[527],"numbers = [1, 2, 3, 4, 5]\nprint(numbers)\nprint(type(numbers))\nprint()\nmy_list = [1, 2.3, 'hello', True, [1, 2, 3]]\nprint(my_list)\nprint(type(my_list))\n",[3765],{"type":17,"tag":79,"props":3766,"children":3767},{"__ignoreMap":8},[3768],{"type":23,"value":3763},{"type":17,"tag":26,"props":3770,"children":3771},{},[3772],{"type":23,"value":3773},"Since lists are an ordered data structure, we can use indexing to access elements in the list. In Python, indexing starts from 0, i.e., the index of the first element is 0, the index of the second element is 1, and so on. Additionally, we can use negative indexing to access elements from the end of the list, i.e., the index of the last element is -1, the index of the second last element is -2, and so on.",{"type":17,"tag":26,"props":3775,"children":3776},{},[3777,3779,3784,3786,3792],{"type":23,"value":3778},"To use indexing, add square brackets ",{"type":17,"tag":79,"props":3780,"children":3782},{"className":3781},[],[3783],{"type":23,"value":3730},{"type":23,"value":3785}," after the list name and fill in the index value, i.e., ",{"type":17,"tag":79,"props":3787,"children":3789},{"className":3788},[],[3790],{"type":23,"value":3791},"list[index]",{"type":23,"value":1517},{"type":17,"tag":518,"props":3794,"children":3795},{":editable":520,":show-in-col":520,"max-height":521},[3796],{"type":17,"tag":275,"props":3797,"children":3800},{"className":3798,"code":3799,"language":432,"meta":8},[527],"my_list = ['apple', 'banana', 'cherry', 'date', 'elderberry']\nprint(my_list[0])\nprint(my_list[1])\nprint(my_list[-1])\n",[3801],{"type":17,"tag":79,"props":3802,"children":3803},{"__ignoreMap":8},[3804],{"type":23,"value":3799},{"type":17,"tag":26,"props":3806,"children":3807},{},[3808,3810,3815,3817,3822,3824,3830],{"type":23,"value":3809},"In Python, we can also use slicing to access multiple elements in a list. To use slicing, add square brackets ",{"type":17,"tag":79,"props":3811,"children":3813},{"className":3812},[],[3814],{"type":23,"value":3730},{"type":23,"value":3816}," after the list name and fill in the start index, end index, and step (step defaults to 1 and can be omitted), separated by colons ",{"type":17,"tag":79,"props":3818,"children":3820},{"className":3819},[],[3821],{"type":23,"value":920},{"type":23,"value":3823},", i.e., ",{"type":17,"tag":79,"props":3825,"children":3827},{"className":3826},[],[3828],{"type":23,"value":3829},"list[start:end:step]",{"type":23,"value":3831},". Slicing returns a new list containing all elements from the start index to the end index, but not including the end index.",{"type":17,"tag":518,"props":3833,"children":3834},{":editable":520,":show-in-col":520,"max-height":521},[3835],{"type":17,"tag":275,"props":3836,"children":3839},{"className":3837,"code":3838,"language":432,"meta":8},[527],"my_list = ['apple', 'banana', 'cherry', 'date', 'elderberry']\nprint(my_list[1:3])\nprint(my_list[:3])\nprint(my_list[3:])\nprint(my_list[1:4:2])\n",[3840],{"type":17,"tag":79,"props":3841,"children":3842},{"__ignoreMap":8},[3843],{"type":23,"value":3838},{"type":17,"tag":26,"props":3845,"children":3846},{},[3847,3849,3855],{"type":23,"value":3848},"Additionally, since lists are mutable, we can modify elements in the list using indexing and assignment statements, i.e., ",{"type":17,"tag":79,"props":3850,"children":3852},{"className":3851},[],[3853],{"type":23,"value":3854},"list[index] = value",{"type":23,"value":1517},{"type":17,"tag":518,"props":3857,"children":3858},{":editable":520,":show-in-col":520,"max-height":521},[3859],{"type":17,"tag":275,"props":3860,"children":3863},{"className":3861,"code":3862,"language":432,"meta":8},[527],"my_list = ['apple', 'banana', 'cherry', 'date', 'elderberry']\nmy_list[1] = 'blueberry'\nprint(my_list)\n",[3864],{"type":17,"tag":79,"props":3865,"children":3866},{"__ignoreMap":8},[3867],{"type":23,"value":3862},{"type":17,"tag":26,"props":3869,"children":3870},{},[3871],{"type":23,"value":3872},"By flexibly using list indexing, we can swap two elements in a list.",{"type":17,"tag":518,"props":3874,"children":3875},{":editable":520,":show-in-col":520,"max-height":521},[3876],{"type":17,"tag":275,"props":3877,"children":3880},{"className":3878,"code":3879,"language":432,"meta":8},[527],"my_list = ['apple', 'banana', 'cherry', 'date', 'elderberry']\nmy_list[1], my_list[2] = my_list[2], my_list[1]\nprint(my_list)\n",[3881],{"type":17,"tag":79,"props":3882,"children":3883},{"__ignoreMap":8},[3884],{"type":23,"value":3879},{"type":17,"tag":26,"props":3886,"children":3887},{},[3888,3890,3896,3898,3904],{"type":23,"value":3889},"Additionally, we can use the ",{"type":17,"tag":79,"props":3891,"children":3893},{"className":3892},[],[3894],{"type":23,"value":3895},"append()",{"type":23,"value":3897}," method to add new elements to the list and the ",{"type":17,"tag":79,"props":3899,"children":3901},{"className":3900},[],[3902],{"type":23,"value":3903},"remove()",{"type":23,"value":3905}," method to remove specified elements.",{"type":17,"tag":518,"props":3907,"children":3908},{":editable":520,":show-in-col":520,"max-height":521},[3909],{"type":17,"tag":275,"props":3910,"children":3913},{"className":3911,"code":3912,"language":432,"meta":8},[527],"my_list = ['apple', 'banana', 'cherry', 'date', 'elderberry']\nmy_list.append('fig')\nprint(my_list)\nmy_list.remove('banana')\nprint(my_list)\n",[3914],{"type":17,"tag":79,"props":3915,"children":3916},{"__ignoreMap":8},[3917],{"type":23,"value":3912},{"type":17,"tag":96,"props":3919,"children":3921},{"id":3920},"_42-tuples",[3922],{"type":23,"value":3923},"4.2 Tuples",{"type":17,"tag":26,"props":3925,"children":3926},{},[3927,3929,3934,3935,3940],{"type":23,"value":3928},"Tuples are another ordered data structure in Python. The biggest difference from lists is that tuples are immutable, i.e., the elements in a tuple cannot be modified. Tuples are represented by parentheses ",{"type":17,"tag":79,"props":3930,"children":3932},{"className":3931},[],[3933],{"type":23,"value":2511},{"type":23,"value":3732},{"type":17,"tag":79,"props":3936,"children":3938},{"className":3937},[],[3939],{"type":23,"value":1515},{"type":23,"value":1517},{"type":17,"tag":26,"props":3942,"children":3943},{},[3944],{"type":23,"value":3945},"The usage of tuples is similar to lists. We can use indexing and slicing to access elements in a tuple, but we cannot modify the elements in a tuple.",{"type":17,"tag":26,"props":3947,"children":3948},{},[3949],{"type":23,"value":3950},"Here is a simple example of a tuple.",{"type":17,"tag":518,"props":3952,"children":3953},{":editable":520,":show-in-col":520,"max-height":521},[3954],{"type":17,"tag":275,"props":3955,"children":3958},{"className":3956,"code":3957,"language":432,"meta":8},[527],"my_tuple = (1, 2, 3, 4, 5)\nprint(my_tuple)\nprint(type(my_tuple))\n",[3959],{"type":17,"tag":79,"props":3960,"children":3961},{"__ignoreMap":8},[3962],{"type":23,"value":3957},{"type":17,"tag":26,"props":3964,"children":3965},{},[3966],{"type":23,"value":3967},"Similar to lists, we can use indexing and slicing to access elements in a tuple.",{"type":17,"tag":518,"props":3969,"children":3970},{":editable":520,":show-in-col":520,"max-height":521},[3971],{"type":17,"tag":275,"props":3972,"children":3975},{"className":3973,"code":3974,"language":432,"meta":8},[527],"my_tuple = ('apple', 'banana', 'cherry', 'date', 'elderberry')\nprint(my_tuple[0])\nprint(my_tuple[1])\nprint(my_tuple[-1])\nprint(my_tuple[1:3])\n",[3976],{"type":17,"tag":79,"props":3977,"children":3978},{"__ignoreMap":8},[3979],{"type":23,"value":3974},{"type":17,"tag":26,"props":3981,"children":3982},{},[3983],{"type":23,"value":3984},"However, we cannot modify elements in a tuple, otherwise an exception will be raised.",{"type":17,"tag":518,"props":3986,"children":3987},{":editable":520,":show-in-col":520,"max-height":521},[3988],{"type":17,"tag":275,"props":3989,"children":3992},{"className":3990,"code":3991,"language":432,"meta":8},[527],"my_tuple = ('apple', 'banana', 'cherry', 'date', 'elderberry')\nmy_tuple[1] = 'blueberry'\n",[3993],{"type":17,"tag":79,"props":3994,"children":3995},{"__ignoreMap":8},[3996],{"type":23,"value":3991},{"type":17,"tag":836,"props":3998,"children":3999},{},[4000],{"type":17,"tag":26,"props":4001,"children":4002},{},[4003,4007],{"type":17,"tag":2020,"props":4004,"children":4005},{},[4006],{"type":23,"value":2024},{"type":23,"value":4008},"\nIn Python, strings can be considered a special type of tuple, i.e., strings are immutable ordered sequences. Therefore, strings also support indexing and slicing operations, but characters in a string cannot be modified.",{"type":17,"tag":518,"props":4010,"children":4011},{":editable":520,":show-in-col":520,"max-height":521},[4012],{"type":17,"tag":275,"props":4013,"children":4016},{"className":4014,"code":4015,"language":432,"meta":8},[527],"my_string = 'hello'\nprint(my_string[0])\nprint(my_string[1:3])\n",[4017],{"type":17,"tag":79,"props":4018,"children":4019},{"__ignoreMap":8},[4020],{"type":23,"value":4015},{"type":17,"tag":96,"props":4022,"children":4024},{"id":4023},"_43-sets",[4025],{"type":23,"value":4026},"4.3 Sets",{"type":17,"tag":26,"props":4028,"children":4029},{},[4030,4032,4037,4038,4043],{"type":23,"value":4031},"Sets are an unordered data structure in Python, used to store multiple unique elements. Sets are represented by curly braces ",{"type":17,"tag":79,"props":4033,"children":4035},{"className":4034},[],[4036],{"type":23,"value":1500},{"type":23,"value":3732},{"type":17,"tag":79,"props":4039,"children":4041},{"className":4040},[],[4042],{"type":23,"value":1515},{"type":23,"value":1517},{"type":17,"tag":26,"props":4045,"children":4046},{},[4047],{"type":23,"value":4048},"An important feature of sets is that the elements in a set are unique, i.e., duplicate elements are not allowed in a set.",{"type":17,"tag":26,"props":4050,"children":4051},{},[4052],{"type":23,"value":4053},"Here is a simple example of a set.",{"type":17,"tag":518,"props":4055,"children":4056},{":editable":520,":show-in-col":520,"max-height":521},[4057],{"type":17,"tag":275,"props":4058,"children":4061},{"className":4059,"code":4060,"language":432,"meta":8},[527],"my_set = {1, 2, 3, 4, 5}\nprint(my_set)\nprint(type(my_set))\n",[4062],{"type":17,"tag":79,"props":4063,"children":4064},{"__ignoreMap":8},[4065],{"type":23,"value":4060},{"type":17,"tag":26,"props":4067,"children":4068},{},[4069,4071,4076],{"type":23,"value":4070},"Unlike lists and tuples, sets are unordered, so we cannot use indexing and slicing to access elements in a set. However, we can use the ",{"type":17,"tag":79,"props":4072,"children":4074},{"className":4073},[],[4075],{"type":23,"value":1792},{"type":23,"value":4077}," operator to check if an element is in the set.",{"type":17,"tag":518,"props":4079,"children":4080},{":editable":520,":show-in-col":520,"max-height":521},[4081],{"type":17,"tag":275,"props":4082,"children":4085},{"className":4083,"code":4084,"language":432,"meta":8},[527],"my_set = {1, 2, 3, 4, 5}\nprint(1 in my_set)\nprint(6 in my_set)\n",[4086],{"type":17,"tag":79,"props":4087,"children":4088},{"__ignoreMap":8},[4089],{"type":23,"value":4084},{"type":17,"tag":518,"props":4091,"children":4092},{":editable":520,":show-in-col":520,"max-height":521},[4093],{"type":17,"tag":275,"props":4094,"children":4097},{"className":4095,"code":4096,"language":432,"meta":8},[527],"my_set = {1, 2, 3, 4, 5}\nprint(my_set[0])\n",[4098],{"type":17,"tag":79,"props":4099,"children":4100},{"__ignoreMap":8},[4101],{"type":23,"value":4096},{"type":17,"tag":26,"props":4103,"children":4104},{},[4105,4107,4113,4115,4120],{"type":23,"value":4106},"We can use the ",{"type":17,"tag":79,"props":4108,"children":4110},{"className":4109},[],[4111],{"type":23,"value":4112},"add()",{"type":23,"value":4114}," method to add new elements to the set and the ",{"type":17,"tag":79,"props":4116,"children":4118},{"className":4117},[],[4119],{"type":23,"value":3903},{"type":23,"value":3905},{"type":17,"tag":518,"props":4122,"children":4123},{":editable":520,":show-in-col":520,"max-height":521},[4124],{"type":17,"tag":275,"props":4125,"children":4128},{"className":4126,"code":4127,"language":432,"meta":8},[527],"my_set = {1, 2, 3, 4, 5}\nmy_set.add(6)\nprint(my_set)\nmy_set.remove(6)\nprint(my_set)\n",[4129],{"type":17,"tag":79,"props":4130,"children":4131},{"__ignoreMap":8},[4132],{"type":23,"value":4127},{"type":17,"tag":26,"props":4134,"children":4135},{},[4136],{"type":23,"value":4137},"Since the elements in a set are unique, adding duplicate elements to the set will have no effect.",{"type":17,"tag":518,"props":4139,"children":4140},{":editable":520,":show-in-col":520,"max-height":521},[4141],{"type":17,"tag":275,"props":4142,"children":4145},{"className":4143,"code":4144,"language":432,"meta":8},[527],"my_set = {1, 2, 3, 4, 5}\nmy_set.add(6)\nprint(my_set)\nmy_set.add(6)\nprint(my_set)\n",[4146],{"type":17,"tag":79,"props":4147,"children":4148},{"__ignoreMap":8},[4149],{"type":23,"value":4144},{"type":17,"tag":26,"props":4151,"children":4152},{},[4153,4155,4161,4163,4168],{"type":23,"value":4154},"As you can see, adding the element ",{"type":17,"tag":79,"props":4156,"children":4158},{"className":4157},[],[4159],{"type":23,"value":4160},"6",{"type":23,"value":4162}," a second time does not add a new element to the set because the set already contains the element ",{"type":17,"tag":79,"props":4164,"children":4166},{"className":4165},[],[4167],{"type":23,"value":4160},{"type":23,"value":1517},{"type":17,"tag":26,"props":4170,"children":4171},{},[4172],{"type":23,"value":4173},"We can use the characteristics of sets to remove duplicates from a list, i.e., remove duplicate elements from a list.",{"type":17,"tag":518,"props":4175,"children":4176},{":editable":520,":show-in-col":520,"max-height":521},[4177],{"type":17,"tag":275,"props":4178,"children":4181},{"className":4179,"code":4180,"language":432,"meta":8},[527],"my_list = [1, 2, 3, 4, 5, 1, 2, 3, 4, 5]\nmy_set = set(my_list)\nprint(my_set)\n",[4182],{"type":17,"tag":79,"props":4183,"children":4184},{"__ignoreMap":8},[4185],{"type":23,"value":4180},{"type":17,"tag":836,"props":4187,"children":4188},{},[4189],{"type":17,"tag":26,"props":4190,"children":4191},{},[4192,4196,4198,4204,4205,4211,4212,4218],{"type":17,"tag":2020,"props":4193,"children":4194},{},[4195],{"type":23,"value":2024},{"type":23,"value":4197},"\nYou may have noticed that lists, tuples, and sets can be converted to each other, i.e., we can use the ",{"type":17,"tag":79,"props":4199,"children":4201},{"className":4200},[],[4202],{"type":23,"value":4203},"list()",{"type":23,"value":1895},{"type":17,"tag":79,"props":4206,"children":4208},{"className":4207},[],[4209],{"type":23,"value":4210},"tuple()",{"type":23,"value":3281},{"type":17,"tag":79,"props":4213,"children":4215},{"className":4214},[],[4216],{"type":23,"value":4217},"set()",{"type":23,"value":4219}," functions to convert a list, tuple, or set to another list, tuple, or set. However, note that the converted data structure may lose some information. For example, sets are unordered, so converting to a list or tuple may change the order of elements and lose duplicate elements.",{"type":17,"tag":26,"props":4221,"children":4222},{},[4223,4224,4230,4232,4238,4240,4246],{"type":23,"value":3889},{"type":17,"tag":79,"props":4225,"children":4227},{"className":4226},[],[4228],{"type":23,"value":4229},"union()",{"type":23,"value":4231}," method to find the union of two sets, the ",{"type":17,"tag":79,"props":4233,"children":4235},{"className":4234},[],[4236],{"type":23,"value":4237},"intersection()",{"type":23,"value":4239}," method to find the intersection of two sets, and the ",{"type":17,"tag":79,"props":4241,"children":4243},{"className":4242},[],[4244],{"type":23,"value":4245},"difference()",{"type":23,"value":4247}," method to find the difference between two sets.",{"type":17,"tag":518,"props":4249,"children":4250},{":editable":520,":show-in-col":520,"max-height":521},[4251],{"type":17,"tag":275,"props":4252,"children":4255},{"className":4253,"code":4254,"language":432,"meta":8},[527],"set1 = {1, 2, 3, 4, 5}\nset2 = {4, 5, 6, 7, 8}\nprint(set1.union(set2))\nprint(set1.intersection(set2))\nprint(set1.difference(set2))\n",[4256],{"type":17,"tag":79,"props":4257,"children":4258},{"__ignoreMap":8},[4259],{"type":23,"value":4254},{"type":17,"tag":96,"props":4261,"children":4263},{"id":4262},"_44-dictionaries",[4264],{"type":23,"value":4265},"4.4 Dictionaries",{"type":17,"tag":26,"props":4267,"children":4268},{},[4269,4271,4276,4277,4282,4284,4289],{"type":23,"value":4270},"Dictionaries are an unordered data structure in Python used to store multiple key-value pairs. Dictionaries are represented by curly braces ",{"type":17,"tag":79,"props":4272,"children":4274},{"className":4273},[],[4275],{"type":23,"value":1500},{"type":23,"value":1502},{"type":17,"tag":79,"props":4278,"children":4280},{"className":4279},[],[4281],{"type":23,"value":920},{"type":23,"value":4283},", and key-value pairs separated by commas ",{"type":17,"tag":79,"props":4285,"children":4287},{"className":4286},[],[4288],{"type":23,"value":1515},{"type":23,"value":1517},{"type":17,"tag":26,"props":4291,"children":4292},{},[4293],{"type":23,"value":4294},"You can imagine a scenario where you have an English-Chinese dictionary, and you can look up the Chinese meaning by the English word. In this scenario, the English word is the key, and the Chinese meaning is the value. This is the basic structure of a dictionary.",{"type":17,"tag":26,"props":4296,"children":4297},{},[4298],{"type":23,"value":4299},"To further understand the concept of key-value pairs, consider the following table:",{"type":17,"tag":1211,"props":4301,"children":4302},{},[4303,4319],{"type":17,"tag":1215,"props":4304,"children":4305},{},[4306],{"type":17,"tag":1219,"props":4307,"children":4308},{},[4309,4314],{"type":17,"tag":1223,"props":4310,"children":4311},{},[4312],{"type":23,"value":4313},"Key",{"type":17,"tag":1223,"props":4315,"children":4316},{},[4317],{"type":23,"value":4318},"Value",{"type":17,"tag":1234,"props":4320,"children":4321},{},[4322,4335],{"type":17,"tag":1219,"props":4323,"children":4324},{},[4325,4330],{"type":17,"tag":1241,"props":4326,"children":4327},{},[4328],{"type":23,"value":4329},"name",{"type":17,"tag":1241,"props":4331,"children":4332},{},[4333],{"type":23,"value":4334},"Alice, Bob, Charlie",{"type":17,"tag":1219,"props":4336,"children":4337},{},[4338,4342],{"type":17,"tag":1241,"props":4339,"children":4340},{},[4341],{"type":23,"value":2201},{"type":17,"tag":1241,"props":4343,"children":4344},{},[4345],{"type":23,"value":4346},"18, 19, 20",{"type":17,"tag":26,"props":4348,"children":4349},{},[4350,4352,4357,4358,4363,4365,4371,4372,4378,4379,4385,4386,4392,4393,4399,4400,4406],{"type":23,"value":4351},"In this example, ",{"type":17,"tag":79,"props":4353,"children":4355},{"className":4354},[],[4356],{"type":23,"value":4329},{"type":23,"value":86},{"type":17,"tag":79,"props":4359,"children":4361},{"className":4360},[],[4362],{"type":23,"value":2201},{"type":23,"value":4364}," are keys, and ",{"type":17,"tag":79,"props":4366,"children":4368},{"className":4367},[],[4369],{"type":23,"value":4370},"Alice",{"type":23,"value":1895},{"type":17,"tag":79,"props":4373,"children":4375},{"className":4374},[],[4376],{"type":23,"value":4377},"Bob",{"type":23,"value":1895},{"type":17,"tag":79,"props":4380,"children":4382},{"className":4381},[],[4383],{"type":23,"value":4384},"Charlie",{"type":23,"value":1895},{"type":17,"tag":79,"props":4387,"children":4389},{"className":4388},[],[4390],{"type":23,"value":4391},"18",{"type":23,"value":1895},{"type":17,"tag":79,"props":4394,"children":4396},{"className":4395},[],[4397],{"type":23,"value":4398},"19",{"type":23,"value":3281},{"type":17,"tag":79,"props":4401,"children":4403},{"className":4402},[],[4404],{"type":23,"value":4405},"20",{"type":23,"value":4407}," are values. A key-value pair is an element in a dictionary, and a dictionary can have multiple key-value pairs.",{"type":17,"tag":26,"props":4409,"children":4410},{},[4411],{"type":23,"value":4412},"Let's look at a simple scenario where we represent the following table using Python data structures:",{"type":17,"tag":1211,"props":4414,"children":4415},{},[4416,4442],{"type":17,"tag":1215,"props":4417,"children":4418},{},[4419],{"type":17,"tag":1219,"props":4420,"children":4421},{},[4422,4427,4432,4437],{"type":17,"tag":1223,"props":4423,"children":4424},{},[4425],{"type":23,"value":4426},"Hermione",{"type":17,"tag":1223,"props":4428,"children":4429},{},[4430],{"type":23,"value":4431},"Harry",{"type":17,"tag":1223,"props":4433,"children":4434},{},[4435],{"type":23,"value":4436},"Ron",{"type":17,"tag":1223,"props":4438,"children":4439},{},[4440],{"type":23,"value":4441},"Draco",{"type":17,"tag":1234,"props":4443,"children":4444},{},[4445],{"type":17,"tag":1219,"props":4446,"children":4447},{},[4448,4453,4457,4461],{"type":17,"tag":1241,"props":4449,"children":4450},{},[4451],{"type":23,"value":4452},"Gryffindor",{"type":17,"tag":1241,"props":4454,"children":4455},{},[4456],{"type":23,"value":4452},{"type":17,"tag":1241,"props":4458,"children":4459},{},[4460],{"type":23,"value":4452},{"type":17,"tag":1241,"props":4462,"children":4463},{},[4464],{"type":23,"value":4465},"Slytherin",{"type":17,"tag":26,"props":4467,"children":4468},{},[4469],{"type":23,"value":4470},"Suppose we first use lists to represent this table, we can do it like this:",{"type":17,"tag":275,"props":4472,"children":4475},{"className":4473,"code":4474,"language":432,"meta":8},[527],"students = ['Hermione', 'Harry', 'Ron', 'Draco']\nhouses = ['Gryffindor', 'Gryffindor', 'Gryffindor', 'Slytherin']\n",[4476],{"type":17,"tag":79,"props":4477,"children":4478},{"__ignoreMap":8},[4479],{"type":23,"value":4474},{"type":17,"tag":26,"props":4481,"children":4482},{},[4483],{"type":23,"value":4484},"We can see that using lists to represent this table can represent the content of the table, but it cannot represent the relationships in the table, i.e., it cannot show that Hermione corresponds to Gryffindor, Harry corresponds to Gryffindor, etc. We can only use indexes to find the corresponding values. This requires us to remember the index of each student to find the corresponding house. When there are many students, this method becomes very cumbersome.",{"type":17,"tag":26,"props":4486,"children":4487},{},[4488],{"type":23,"value":4489},"To solve this problem, we can use dictionaries to represent this table, so we can look up the corresponding house by the student's name.",{"type":17,"tag":275,"props":4491,"children":4494},{"className":4492,"code":4493,"language":432,"meta":8},[527],"students = {\n    'Hermione': 'Gryffindor',\n    'Harry': 'Gryffindor',\n    'Ron': 'Gryffindor',\n    'Draco': 'Slytherin'\n}\n\nprint(students['Hermione'])\nprint(students['Harry'])\nprint(students['Ron'])\nprint(students['Draco'])\n",[4495],{"type":17,"tag":79,"props":4496,"children":4497},{"__ignoreMap":8},[4498],{"type":23,"value":4493},{"type":17,"tag":26,"props":4500,"children":4501},{},[4502,4503,4509,4511,4517,4518,4524,4525,4531,4532,4538,4539,4545,4546,4551,4552,4557,4558,4564],{"type":23,"value":4351},{"type":17,"tag":79,"props":4504,"children":4506},{"className":4505},[],[4507],{"type":23,"value":4508},"students",{"type":23,"value":4510}," is a dictionary, ",{"type":17,"tag":79,"props":4512,"children":4514},{"className":4513},[],[4515],{"type":23,"value":4516},"'Hermione'",{"type":23,"value":1895},{"type":17,"tag":79,"props":4519,"children":4521},{"className":4520},[],[4522],{"type":23,"value":4523},"'Harry'",{"type":23,"value":1895},{"type":17,"tag":79,"props":4526,"children":4528},{"className":4527},[],[4529],{"type":23,"value":4530},"'Ron'",{"type":23,"value":3281},{"type":17,"tag":79,"props":4533,"children":4535},{"className":4534},[],[4536],{"type":23,"value":4537},"'Draco'",{"type":23,"value":4364},{"type":17,"tag":79,"props":4540,"children":4542},{"className":4541},[],[4543],{"type":23,"value":4544},"'Gryffindor'",{"type":23,"value":1895},{"type":17,"tag":79,"props":4547,"children":4549},{"className":4548},[],[4550],{"type":23,"value":4544},{"type":23,"value":1895},{"type":17,"tag":79,"props":4553,"children":4555},{"className":4554},[],[4556],{"type":23,"value":4544},{"type":23,"value":3281},{"type":17,"tag":79,"props":4559,"children":4561},{"className":4560},[],[4562],{"type":23,"value":4563},"'Slytherin'",{"type":23,"value":4565}," are values. Using a dictionary, we can look up the corresponding house by the student's name.",{"type":17,"tag":26,"props":4567,"children":4568},{},[4569],{"type":23,"value":4570},"Since dictionaries are unordered, we cannot use indexing and slicing to access elements in a dictionary. However, as we see in the example above, we can use keys to access values in a dictionary. Therefore, keys in a dictionary are unique and cannot be duplicated. However, values can be duplicated, i.e., values in a dictionary can be repeated.",{"type":17,"tag":26,"props":4572,"children":4573},{},[4574],{"type":23,"value":4575},"Here is a simple example of a dictionary.",{"type":17,"tag":518,"props":4577,"children":4578},{":editable":520,":show-in-col":520,"max-height":521},[4579],{"type":17,"tag":275,"props":4580,"children":4583},{"className":4581,"code":4582,"language":432,"meta":8},[527],"my_dict = {'name': 'Alice', 'age': 18}\nprint(my_dict)\nprint(type(my_dict))\n",[4584],{"type":17,"tag":79,"props":4585,"children":4586},{"__ignoreMap":8},[4587],{"type":23,"value":4582},{"type":17,"tag":26,"props":4589,"children":4590},{},[4591,4593,4599],{"type":23,"value":4592},"In addition to directly creating dictionaries, we can also use the ",{"type":17,"tag":79,"props":4594,"children":4596},{"className":4595},[],[4597],{"type":23,"value":4598},"dict()",{"type":23,"value":4600}," function to initialize an empty dictionary and then add elements using key-value pairs.",{"type":17,"tag":518,"props":4602,"children":4603},{":editable":520,":show-in-col":520,"max-height":521},[4604],{"type":17,"tag":275,"props":4605,"children":4608},{"className":4606,"code":4607,"language":432,"meta":8},[527],"my_dict = dict()\nmy_dict['name'] = 'Alice'\nmy_dict['age'] = 18\nprint(my_dict)\n",[4609],{"type":17,"tag":79,"props":4610,"children":4611},{"__ignoreMap":8},[4612],{"type":23,"value":4607},{"type":17,"tag":26,"props":4614,"children":4615},{},[4616,4618,4624],{"type":23,"value":4617},"Additionally, since dictionaries are mutable, we can modify values in a dictionary by accessing keys and using assignment statements to assign new values to elements in the dictionary, i.e., ",{"type":17,"tag":79,"props":4619,"children":4621},{"className":4620},[],[4622],{"type":23,"value":4623},"dict[key] = value",{"type":23,"value":1517},{"type":17,"tag":518,"props":4626,"children":4627},{":editable":520,":show-in-col":520,"max-height":521},[4628],{"type":17,"tag":275,"props":4629,"children":4632},{"className":4630,"code":4631,"language":432,"meta":8},[527],"my_dict = {'name': 'Alice', 'age': 18}\nmy_dict['age'] = 19\nprint(my_dict)\n",[4633],{"type":17,"tag":79,"props":4634,"children":4635},{"__ignoreMap":8},[4636],{"type":23,"value":4631},{"type":17,"tag":26,"props":4638,"children":4639},{},[4640,4641,4647,4649,4655,4657,4663],{"type":23,"value":4106},{"type":17,"tag":79,"props":4642,"children":4644},{"className":4643},[],[4645],{"type":23,"value":4646},"keys()",{"type":23,"value":4648}," method to get all keys in a dictionary, the ",{"type":17,"tag":79,"props":4650,"children":4652},{"className":4651},[],[4653],{"type":23,"value":4654},"values()",{"type":23,"value":4656}," method to get all values in a dictionary, and the ",{"type":17,"tag":79,"props":4658,"children":4660},{"className":4659},[],[4661],{"type":23,"value":4662},"items()",{"type":23,"value":4664}," method to get all key-value pairs in a dictionary.",{"type":17,"tag":518,"props":4666,"children":4667},{":editable":520,":show-in-col":520,"max-height":521},[4668],{"type":17,"tag":275,"props":4669,"children":4672},{"className":4670,"code":4671,"language":432,"meta":8},[527],"my_dict = {'name': 'Alice', 'age': 18}\nprint(my_dict.keys())\nprint(my_dict.values())\nprint(my_dict.items())\n",[4673],{"type":17,"tag":79,"props":4674,"children":4675},{"__ignoreMap":8},[4676],{"type":23,"value":4671},{"type":17,"tag":26,"props":4678,"children":4679},{},[4680],{"type":23,"value":4681},"The keys and values in a dictionary do not have to be of the same data type. Keys can be any immutable data type, such as integers, floats, strings, tuples, and values can be any data type, such as integers, floats, strings, booleans, lists, tuples, sets, dictionaries.",{"type":17,"tag":518,"props":4683,"children":4684},{":editable":520,":show-in-col":520,"max-height":521},[4685],{"type":17,"tag":275,"props":4686,"children":4689},{"className":4687,"code":4688,"language":432,"meta":8},[527],"my_dict = {1: 'Alice', 2.3: 18, 'name': 'Alice', (1, 2): [1, 2], 'info': {'name': 'Alice', 'age': 18}} \nprint(my_dict[1])\nprint(my_dict[2.3])\nprint(my_dict['name'])\nprint(my_dict[(1, 2)])\nprint(my_dict[(1, 2)][0])\nprint(my_dict['info'])\n",[4690],{"type":17,"tag":79,"props":4691,"children":4692},{"__ignoreMap":8},[4693],{"type":23,"value":4688},{"type":17,"tag":26,"props":4695,"children":4696},{},[4697],{"type":23,"value":4698},"If we have more complex data, we can combine lists and dictionaries. For example, we can use dictionaries to represent information about a student, including name, age, and score, and then store information about multiple students in a list.",{"type":17,"tag":518,"props":4700,"children":4701},{":editable":520,":show-in-col":520,"max-height":521},[4702],{"type":17,"tag":275,"props":4703,"children":4706},{"className":4704,"code":4705,"language":432,"meta":8},[527],"students = [\n    {'name': 'Alice', 'age': 18, 'score': 90},\n    {'name': 'Bob', 'age': 19, 'score': 85},\n    {'name': 'Charlie', 'age': 20, 'score': 80}\n]\nprint(students[0]['name'])\nprint(students[1]['age'])\nprint(students[2]['score'])\n",[4707],{"type":17,"tag":79,"props":4708,"children":4709},{"__ignoreMap":8},[4710],{"type":23,"value":4705},{"type":17,"tag":26,"props":4712,"children":4713},{},[4714],{"type":23,"value":4715},"Note how we access each student's information. First, we access the student list by index, and at this point, we get a dictionary of a student. Then, we access the student's information by key.",{"type":17,"tag":18,"props":4717,"children":4719},{"id":4718},"_5-functions",[4720],{"type":23,"value":4721},"5. Functions",{"type":17,"tag":96,"props":4723,"children":4725},{"id":4724},"_51-defining-functions",[4726],{"type":23,"value":4727},"5.1 Defining Functions",{"type":17,"tag":26,"props":4729,"children":4730},{},[4731,4733,4738,4739,4744,4745,4750,4751,4756,4757,4762,4763,4768],{"type":23,"value":4732},"In Python, a function is a reusable block of code that performs a specific task. Functions can accept parameters, perform specific operations, and then return results. We have already encountered some built-in Python functions, such as ",{"type":17,"tag":79,"props":4734,"children":4736},{"className":4735},[],[4737],{"type":23,"value":2270},{"type":23,"value":1895},{"type":17,"tag":79,"props":4740,"children":4742},{"className":4741},[],[4743],{"type":23,"value":2228},{"type":23,"value":1895},{"type":17,"tag":79,"props":4746,"children":4748},{"className":4747},[],[4749],{"type":23,"value":2862},{"type":23,"value":1895},{"type":17,"tag":79,"props":4752,"children":4754},{"className":4753},[],[4755],{"type":23,"value":2870},{"type":23,"value":1895},{"type":17,"tag":79,"props":4758,"children":4760},{"className":4759},[],[4761],{"type":23,"value":2878},{"type":23,"value":1895},{"type":17,"tag":79,"props":4764,"children":4766},{"className":4765},[],[4767],{"type":23,"value":2983},{"type":23,"value":2171},{"type":17,"tag":518,"props":4770,"children":4771},{":editable":520,":show-in-col":520,"max-height":521},[4772],{"type":17,"tag":275,"props":4773,"children":4776},{"className":4774,"code":4775,"language":432,"meta":8},[527],"name = input('Please enter your name: ')\nprint('Hello, ' + name + '!')\n",[4777],{"type":17,"tag":79,"props":4778,"children":4779},{"__ignoreMap":8},[4780],{"type":23,"value":4775},{"type":17,"tag":26,"props":4782,"children":4783},{},[4784,4785,4791,4793,4798,4800,4805],{"type":23,"value":2856},{"type":17,"tag":79,"props":4786,"children":4788},{"className":4787},[],[4789],{"type":23,"value":4790},"def",{"type":23,"value":4792}," keyword to define a function, followed by the function name, parameter list, and a colon ",{"type":17,"tag":79,"props":4794,"children":4796},{"className":4795},[],[4797],{"type":23,"value":920},{"type":23,"value":4799},", and then write the function's code in the indented block. The parameter list can contain zero or more parameters, separated by commas ",{"type":17,"tag":79,"props":4801,"children":4803},{"className":4802},[],[4804],{"type":23,"value":1515},{"type":23,"value":1517},{"type":17,"tag":26,"props":4807,"children":4808},{},[4809],{"type":23,"value":4810},"Here is a simple example of a function.",{"type":17,"tag":518,"props":4812,"children":4813},{":editable":520,":show-in-col":520,"max-height":521},[4814],{"type":17,"tag":275,"props":4815,"children":4818},{"className":4816,"code":4817,"language":432,"meta":8},[527],"def greet(name):\n    print('Hello, ' + name + '!')\n\nname = input('Please enter your name: ')\ngreet(name)\n",[4819],{"type":17,"tag":79,"props":4820,"children":4821},{"__ignoreMap":8},[4822],{"type":23,"value":4817},{"type":17,"tag":26,"props":4824,"children":4825},{},[4826,4828,4834,4836,4841,4843,4848,4850,4855,4857,4863,4865,4870,4872,4877],{"type":23,"value":4827},"In the above example, we define a function ",{"type":17,"tag":79,"props":4829,"children":4831},{"className":4830},[],[4832],{"type":23,"value":4833},"greet",{"type":23,"value":4835}," immediately following the ",{"type":17,"tag":79,"props":4837,"children":4839},{"className":4838},[],[4840],{"type":23,"value":4790},{"type":23,"value":4842}," keyword. The parentheses after ",{"type":17,"tag":79,"props":4844,"children":4846},{"className":4845},[],[4847],{"type":23,"value":4833},{"type":23,"value":4849}," contain the function's parameter list, which includes one parameter ",{"type":17,"tag":79,"props":4851,"children":4853},{"className":4852},[],[4854],{"type":23,"value":4329},{"type":23,"value":4856},". The function body prints ",{"type":17,"tag":79,"props":4858,"children":4860},{"className":4859},[],[4861],{"type":23,"value":4862},"Hello, name!",{"type":23,"value":4864},". After defining the function, we call the ",{"type":17,"tag":79,"props":4866,"children":4868},{"className":4867},[],[4869],{"type":23,"value":4833},{"type":23,"value":4871}," function and pass in a parameter ",{"type":17,"tag":79,"props":4873,"children":4875},{"className":4874},[],[4876],{"type":23,"value":4329},{"type":23,"value":1517},{"type":17,"tag":26,"props":4879,"children":4880},{},[4881,4883,4889,4891,4896],{"type":23,"value":4882},"Note that the function body must be indented. For example, in the above example, ",{"type":17,"tag":79,"props":4884,"children":4886},{"className":4885},[],[4887],{"type":23,"value":4888},"print('Hello, ' + name + '!')",{"type":23,"value":4890}," is the function body of ",{"type":17,"tag":79,"props":4892,"children":4894},{"className":4893},[],[4895],{"type":23,"value":4833},{"type":23,"value":4897}," and must be indented.",{"type":17,"tag":26,"props":4899,"children":4900},{},[4901],{"type":23,"value":4902},"Typically, we use four spaces for indentation. Indentation is an important concept in Python, used to indicate the beginning and end of a code block. In Python, indentation is mandatory, and incorrect indentation will cause errors in the program.",{"type":17,"tag":96,"props":4904,"children":4906},{"id":4905},"_52-function-return-values",[4907],{"type":23,"value":4908},"5.2 Function Return Values",{"type":17,"tag":26,"props":4910,"children":4911},{},[4912],{"type":23,"value":4913},"In the example from the previous section, the function we defined simply printed a sentence and did not return any result. However, in most cases, we need the function to return a result. If the function cannot return a result, its usefulness is limited.",{"type":17,"tag":518,"props":4915,"children":4916},{":editable":520,":show-in-col":520,"max-height":521},[4917],{"type":17,"tag":275,"props":4918,"children":4921},{"className":4919,"code":4920,"language":432,"meta":8},[527],"def add_and_return(a, b):\n    return a + b\n\ndef add(a, b):\n    print(a + b)\n\nprint(f'There is a return value: {add_and_return(1, 2) + 3}')\nprint(f'There is no return value: {add(1, 2) + 3}')\n",[4922],{"type":17,"tag":79,"props":4923,"children":4924},{"__ignoreMap":8},[4925],{"type":23,"value":4920},{"type":17,"tag":26,"props":4927,"children":4928},{},[4929,4931,4937,4939,4945],{"type":23,"value":4930},"We find that the above code will report an error when it runs to the statement ",{"type":17,"tag":79,"props":4932,"children":4934},{"className":4933},[],[4935],{"type":23,"value":4936},"print(f'There is no return value: {add(1, 2) + 3}')",{"type":23,"value":4938}," because the function ",{"type":17,"tag":79,"props":4940,"children":4942},{"className":4941},[],[4943],{"type":23,"value":4944},"add",{"type":23,"value":4946}," does not have a return value, so it cannot perform the addition operation.",{"type":17,"tag":26,"props":4948,"children":4949},{},[4950,4952,4958,4960,4965],{"type":23,"value":4951},"Therefore, we need to use the ",{"type":17,"tag":79,"props":4953,"children":4955},{"className":4954},[],[4956],{"type":23,"value":4957},"return",{"type":23,"value":4959}," keyword to return the result of the function. The ",{"type":17,"tag":79,"props":4961,"children":4963},{"className":4962},[],[4964],{"type":23,"value":4957},{"type":23,"value":4966}," keyword can be followed by an expression to return the result of the function, or it can be used without an expression to end the execution of the function.",{"type":17,"tag":26,"props":4968,"children":4969},{},[4970],{"type":23,"value":4971},"Here is a simple function example.",{"type":17,"tag":518,"props":4973,"children":4974},{":editable":520,":show-in-col":520,"max-height":521},[4975],{"type":17,"tag":275,"props":4976,"children":4979},{"className":4977,"code":4978,"language":432,"meta":8},[527],"def add(a, b):\n    return a + b\n\ndef subtract(a, b):\n    return a - b\n\nresult1 = add(1, 2)\nresult2 = subtract(3, 4)\n\nprint(result1)\nprint(result2)\n",[4980],{"type":17,"tag":79,"props":4981,"children":4982},{"__ignoreMap":8},[4983],{"type":23,"value":4978},{"type":17,"tag":26,"props":4985,"children":4986},{},[4987,4989,4994,4995,5001,5003,5008,5010,5016,5017,5023],{"type":23,"value":4988},"In the above example, we defined two functions ",{"type":17,"tag":79,"props":4990,"children":4992},{"className":4991},[],[4993],{"type":23,"value":4944},{"type":23,"value":86},{"type":17,"tag":79,"props":4996,"children":4998},{"className":4997},[],[4999],{"type":23,"value":5000},"subtract",{"type":23,"value":5002}," to calculate the sum and difference of two numbers, respectively. In the function body, we use the ",{"type":17,"tag":79,"props":5004,"children":5006},{"className":5005},[],[5007],{"type":23,"value":4957},{"type":23,"value":5009}," keyword to return the calculation result. When calling the function, we assign the return value of the function to the variables ",{"type":17,"tag":79,"props":5011,"children":5013},{"className":5012},[],[5014],{"type":23,"value":5015},"result1",{"type":23,"value":86},{"type":17,"tag":79,"props":5018,"children":5020},{"className":5019},[],[5021],{"type":23,"value":5022},"result2",{"type":23,"value":5024},", and then print these two variables.",{"type":17,"tag":26,"props":5026,"children":5027},{},[5028,5030,5035],{"type":23,"value":5029},"Note that the ",{"type":17,"tag":79,"props":5031,"children":5033},{"className":5032},[],[5034],{"type":23,"value":4957},{"type":23,"value":5036}," keyword can only return one value. If you need to return multiple values, you can use data structures such as tuples, lists, or dictionaries.",{"type":17,"tag":518,"props":5038,"children":5039},{":editable":520,":show-in-col":520,"max-height":521},[5040],{"type":17,"tag":275,"props":5041,"children":5044},{"className":5042,"code":5043,"language":432,"meta":8},[527],"def add_and_subtract(a, b):\n    return a + b, a - b\n\nresult = add_and_subtract(1, 2)\nprint(result)\n",[5045],{"type":17,"tag":79,"props":5046,"children":5047},{"__ignoreMap":8},[5048],{"type":23,"value":5043},{"type":17,"tag":26,"props":5050,"children":5051},{},[5052,5054,5060,5062,5067,5069,5075],{"type":23,"value":5053},"In the above example, we defined a function ",{"type":17,"tag":79,"props":5055,"children":5057},{"className":5056},[],[5058],{"type":23,"value":5059},"add_and_subtract",{"type":23,"value":5061}," to calculate the sum and difference of two numbers. In the function body, we use the ",{"type":17,"tag":79,"props":5063,"children":5065},{"className":5064},[],[5066],{"type":23,"value":4957},{"type":23,"value":5068}," keyword to return a tuple containing two values. When calling the function, we assign the return value of the function to the variable ",{"type":17,"tag":79,"props":5070,"children":5072},{"className":5071},[],[5073],{"type":23,"value":5074},"result",{"type":23,"value":5076}," and then print this variable.",{"type":17,"tag":96,"props":5078,"children":5080},{"id":5079},"_53-function-parameters",[5081],{"type":23,"value":5082},"5.3 Function Parameters",{"type":17,"tag":26,"props":5084,"children":5085},{},[5086],{"type":23,"value":5087},"In Python, function parameters are mainly divided into two types: positional parameters and keyword parameters. Positional parameters are passed based on the position of the parameters when calling the function, while keyword parameters are passed based on the name of the parameters when calling the function.",{"type":17,"tag":1561,"props":5089,"children":5091},{"id":5090},"_531-positional-parameters",[5092],{"type":23,"value":5093},"5.3.1 Positional Parameters",{"type":17,"tag":26,"props":5095,"children":5096},{},[5097],{"type":23,"value":5098},"Positional parameters are the parameters declared when defining the function. When calling the function, you need to pass the parameters according to their positions. The number and order of positional parameters must match the parameters declared when defining the function.",{"type":17,"tag":26,"props":5100,"children":5101},{},[5102],{"type":23,"value":5103},"Here is a simple example of positional parameters.",{"type":17,"tag":518,"props":5105,"children":5106},{":editable":520,":show-in-col":520,"max-height":521},[5107],{"type":17,"tag":275,"props":5108,"children":5111},{"className":5109,"code":5110,"language":432,"meta":8},[527],"def greet(name, age):\n    print(f'Hello, {name}! You are {age} years old.')\n\ngreet('Alice', 18)\ngreet(19, 'Bob')\n",[5112],{"type":17,"tag":79,"props":5113,"children":5114},{"__ignoreMap":8},[5115],{"type":23,"value":5110},{"type":17,"tag":26,"props":5117,"children":5118},{},[5119,5121,5127,5129,5135],{"type":23,"value":5120},"In the above example, we defined a function. When calling this function, we need to pass the parameters according to the order of the parameters declared when defining the function. If the number and order of the parameters are incorrect, the program will not execute as expected. For example, when we call ",{"type":17,"tag":79,"props":5122,"children":5124},{"className":5123},[],[5125],{"type":23,"value":5126},"greet(19, 'Bob')",{"type":23,"value":5128},", the program will output ",{"type":17,"tag":79,"props":5130,"children":5132},{"className":5131},[],[5133],{"type":23,"value":5134},"Hello, 19! You are Bob years old.",{"type":23,"value":5136},", which is not what we want.",{"type":17,"tag":26,"props":5138,"children":5139},{},[5140],{"type":23,"value":5141},"Therefore, although positional parameters are simple, they are prone to errors, especially when there are many parameters, making it easy to confuse the order of the parameters.",{"type":17,"tag":1561,"props":5143,"children":5145},{"id":5144},"_532-keyword-parameters",[5146],{"type":23,"value":5147},"5.3.2 Keyword Parameters",{"type":17,"tag":26,"props":5149,"children":5150},{},[5151],{"type":23,"value":5152},"Keyword parameters are passed based on the name of the parameters when calling the function. The advantage of keyword parameters is that you do not need to pass the parameters in order; you only need to specify the name of the parameters.",{"type":17,"tag":26,"props":5154,"children":5155},{},[5156],{"type":23,"value":5157},"Here is a simple example of keyword parameters.",{"type":17,"tag":518,"props":5159,"children":5160},{":editable":520,":show-in-col":520,"max-height":521},[5161],{"type":17,"tag":275,"props":5162,"children":5165},{"className":5163,"code":5164,"language":432,"meta":8},[527],"def greet(name, age):\n    print(f'Hello, {name}! You are {age} years old.')\n\ngreet(name='Alice', age=18)\ngreet(age=19, name='Bob')\n",[5166],{"type":17,"tag":79,"props":5167,"children":5168},{"__ignoreMap":8},[5169],{"type":23,"value":5164},{"type":17,"tag":26,"props":5171,"children":5172},{},[5173,5175,5180,5182,5187],{"type":23,"value":5174},"In the above example, when calling the function ",{"type":17,"tag":79,"props":5176,"children":5178},{"className":5177},[],[5179],{"type":23,"value":4833},{"type":23,"value":5181},", we used keyword parameters, i.e., we specified the name of the parameters when passing them. This way, we do not need to pass the parameters in order; we only need to specify the name of the parameters. As you can see, in the second call to ",{"type":17,"tag":79,"props":5183,"children":5185},{"className":5184},[],[5186],{"type":23,"value":4833},{"type":23,"value":5188},", we swapped the order of the parameters, but the program still executed correctly.",{"type":17,"tag":18,"props":5190,"children":5192},{"id":5191},"_6-loops",[5193],{"type":23,"value":5194},"6. Loops",{"type":17,"tag":26,"props":5196,"children":5197},{},[5198,5200,5206,5208,5213],{"type":23,"value":5199},"In programming, loops are a structure that repeatedly executes a set of statements. Loops can help us simplify code and reduce repetitive work. Python has two loop structures: ",{"type":17,"tag":79,"props":5201,"children":5203},{"className":5202},[],[5204],{"type":23,"value":5205},"while",{"type":23,"value":5207}," loops and ",{"type":17,"tag":79,"props":5209,"children":5211},{"className":5210},[],[5212],{"type":23,"value":2169},{"type":23,"value":5214}," loops.",{"type":17,"tag":96,"props":5216,"children":5218},{"id":5217},"_61-while-loop",[5219,5221,5226],{"type":23,"value":5220},"6.1 ",{"type":17,"tag":79,"props":5222,"children":5224},{"className":5223},[],[5225],{"type":23,"value":5205},{"type":23,"value":5227}," Loop",{"type":17,"tag":26,"props":5229,"children":5230},{},[5231,5232,5237,5239,5244],{"type":23,"value":3191},{"type":17,"tag":79,"props":5233,"children":5235},{"className":5234},[],[5236],{"type":23,"value":5205},{"type":23,"value":5238}," loop is used to repeatedly execute a set of statements as long as the condition is true. The syntax structure of the ",{"type":17,"tag":79,"props":5240,"children":5242},{"className":5241},[],[5243],{"type":23,"value":5205},{"type":23,"value":5245}," loop is as follows:",{"type":17,"tag":275,"props":5247,"children":5250},{"className":5248,"code":5249,"language":432,"meta":8},[527],"while condition:\n    statement1\n    statement2\n    ...\n",[5251],{"type":17,"tag":79,"props":5252,"children":5253},{"__ignoreMap":8},[5254],{"type":23,"value":5249},{"type":17,"tag":26,"props":5256,"children":5257},{},[5258,5260,5265,5267,5273,5275,5281,5282,5288,5290,5295,5297,5302,5303,5308,5310,5315],{"type":23,"value":5259},"In a ",{"type":17,"tag":79,"props":5261,"children":5263},{"className":5262},[],[5264],{"type":23,"value":5205},{"type":23,"value":5266}," loop, the ",{"type":17,"tag":79,"props":5268,"children":5270},{"className":5269},[],[5271],{"type":23,"value":5272},"condition",{"type":23,"value":5274}," is first checked. If it is true, ",{"type":17,"tag":79,"props":5276,"children":5278},{"className":5277},[],[5279],{"type":23,"value":5280},"statement1",{"type":23,"value":1895},{"type":17,"tag":79,"props":5283,"children":5285},{"className":5284},[],[5286],{"type":23,"value":5287},"statement2",{"type":23,"value":5289},", etc., are executed. Then the ",{"type":17,"tag":79,"props":5291,"children":5293},{"className":5292},[],[5294],{"type":23,"value":5272},{"type":23,"value":5296}," is checked again. If it is still true, ",{"type":17,"tag":79,"props":5298,"children":5300},{"className":5299},[],[5301],{"type":23,"value":5280},{"type":23,"value":1895},{"type":17,"tag":79,"props":5304,"children":5306},{"className":5305},[],[5307],{"type":23,"value":5287},{"type":23,"value":5309},", etc., are executed again, and so on, until the ",{"type":17,"tag":79,"props":5311,"children":5313},{"className":5312},[],[5314],{"type":23,"value":5272},{"type":23,"value":5316}," is false, and the loop ends.",{"type":17,"tag":26,"props":5318,"children":5319},{},[5320,5322,5327],{"type":23,"value":5321},"Here is a simple example of a ",{"type":17,"tag":79,"props":5323,"children":5325},{"className":5324},[],[5326],{"type":23,"value":5205},{"type":23,"value":5328}," loop.",{"type":17,"tag":518,"props":5330,"children":5331},{":editable":520,":show-in-col":520,"max-height":521},[5332],{"type":17,"tag":275,"props":5333,"children":5336},{"className":5334,"code":5335,"language":432,"meta":8},[527],"i = 0\nwhile i \u003C 5:\n    print(i)\n    i += 1\n",[5337],{"type":17,"tag":79,"props":5338,"children":5339},{"__ignoreMap":8},[5340],{"type":23,"value":5335},{"type":17,"tag":26,"props":5342,"children":5343},{},[5344,5346,5352,5354,5359,5361,5366,5368,5373,5375,5380,5382,5387],{"type":23,"value":5345},"In the above example, we defined a variable ",{"type":17,"tag":79,"props":5347,"children":5349},{"className":5348},[],[5350],{"type":23,"value":5351},"i",{"type":23,"value":5353}," and then used a ",{"type":17,"tag":79,"props":5355,"children":5357},{"className":5356},[],[5358],{"type":23,"value":5205},{"type":23,"value":5360}," loop to print the value of ",{"type":17,"tag":79,"props":5362,"children":5364},{"className":5363},[],[5365],{"type":23,"value":5351},{"type":23,"value":5367}," until the value of ",{"type":17,"tag":79,"props":5369,"children":5371},{"className":5370},[],[5372],{"type":23,"value":5351},{"type":23,"value":5374}," is greater than or equal to 5. In the loop body, we first print the value of ",{"type":17,"tag":79,"props":5376,"children":5378},{"className":5377},[],[5379],{"type":23,"value":5351},{"type":23,"value":5381}," and then increment the value of ",{"type":17,"tag":79,"props":5383,"children":5385},{"className":5384},[],[5386],{"type":23,"value":5351},{"type":23,"value":5388}," by 1.",{"type":17,"tag":26,"props":5390,"children":5391},{},[5392,5394,5399],{"type":23,"value":5393},"You may have noticed that for a ",{"type":17,"tag":79,"props":5395,"children":5397},{"className":5396},[],[5398],{"type":23,"value":5205},{"type":23,"value":5400}," loop, if the loop condition is not restricted, the loop will execute indefinitely, which is called an infinite loop.",{"type":17,"tag":275,"props":5402,"children":5405},{"className":5403,"code":5404,"language":432,"meta":8},[527],"# If you run the following code, the program may not end normally. In this case, you can click the stop button in the upper right corner to terminate the program, or use the shortcut key Ctrl + C to terminate the program.\nwhile True:\n    print('This is an infinite loop.')\n",[5406],{"type":17,"tag":79,"props":5407,"children":5408},{"__ignoreMap":8},[5409],{"type":23,"value":5404},{"type":17,"tag":26,"props":5411,"children":5412},{},[5413,5415,5420],{"type":23,"value":5414},"An infinite loop is very dangerous because it prevents the program from ending normally and may even cause the system to crash. Therefore, when using a ",{"type":17,"tag":79,"props":5416,"children":5418},{"className":5417},[],[5419],{"type":23,"value":5205},{"type":23,"value":5421}," loop, make sure that the loop condition will eventually become false to end the loop.",{"type":17,"tag":96,"props":5423,"children":5425},{"id":5424},"_62-for-loop",[5426,5428,5433],{"type":23,"value":5427},"6.2 ",{"type":17,"tag":79,"props":5429,"children":5431},{"className":5430},[],[5432],{"type":23,"value":2169},{"type":23,"value":5227},{"type":17,"tag":26,"props":5435,"children":5436},{},[5437,5439,5444,5446,5451,5453,5458],{"type":23,"value":5438},"In addition to the ",{"type":17,"tag":79,"props":5440,"children":5442},{"className":5441},[],[5443],{"type":23,"value":5205},{"type":23,"value":5445}," loop, which requires us to actively set the loop condition, Python also provides the ",{"type":17,"tag":79,"props":5447,"children":5449},{"className":5448},[],[5450],{"type":23,"value":2169},{"type":23,"value":5452}," loop, which is used to iterate over elements in a sequence (such as lists, tuples, sets, dictionaries, etc.). The syntax structure of the ",{"type":17,"tag":79,"props":5454,"children":5456},{"className":5455},[],[5457],{"type":23,"value":2169},{"type":23,"value":5245},{"type":17,"tag":836,"props":5460,"children":5461},{},[5462],{"type":17,"tag":26,"props":5463,"children":5464},{},[5465,5469],{"type":17,"tag":2020,"props":5466,"children":5467},{},[5468],{"type":23,"value":2024},{"type":23,"value":5470},"\nIteration means accessing each element in the sequence one by one. For example, for a list, iteration means accessing each element in the list one by one.",{"type":17,"tag":275,"props":5472,"children":5475},{"className":5473,"code":5474,"language":432,"meta":8},[527],"for element in sequence:\n    statement1\n    statement2\n    ...\n",[5476],{"type":17,"tag":79,"props":5477,"children":5478},{"__ignoreMap":8},[5479],{"type":23,"value":5474},{"type":17,"tag":26,"props":5481,"children":5482},{},[5483,5484,5489,5491,5497,5499,5504,5506,5511,5512,5517],{"type":23,"value":5259},{"type":17,"tag":79,"props":5485,"children":5487},{"className":5486},[],[5488],{"type":23,"value":2169},{"type":23,"value":5490}," loop, ",{"type":17,"tag":79,"props":5492,"children":5494},{"className":5493},[],[5495],{"type":23,"value":5496},"sequence",{"type":23,"value":5498}," is a sequence, ",{"type":17,"tag":79,"props":5500,"children":5502},{"className":5501},[],[5503],{"type":23,"value":17},{"type":23,"value":5505}," is each element in the sequence, and ",{"type":17,"tag":79,"props":5507,"children":5509},{"className":5508},[],[5510],{"type":23,"value":5280},{"type":23,"value":1895},{"type":17,"tag":79,"props":5513,"children":5515},{"className":5514},[],[5516],{"type":23,"value":5287},{"type":23,"value":5518},", etc., are statements that operate on each element.",{"type":17,"tag":26,"props":5520,"children":5521},{},[5522,5523,5528],{"type":23,"value":5321},{"type":17,"tag":79,"props":5524,"children":5526},{"className":5525},[],[5527],{"type":23,"value":2169},{"type":23,"value":5328},{"type":17,"tag":518,"props":5530,"children":5531},{":editable":520,":show-in-col":520,"max-height":521},[5532],{"type":17,"tag":275,"props":5533,"children":5536},{"className":5534,"code":5535,"language":432,"meta":8},[527],"my_list = [1, 2, 3, 4, 5]\nfor i in my_list:\n    print(i)\n",[5537],{"type":17,"tag":79,"props":5538,"children":5539},{"__ignoreMap":8},[5540],{"type":23,"value":5535},{"type":17,"tag":26,"props":5542,"children":5543},{},[5544,5546,5552,5553,5558],{"type":23,"value":5545},"In the above example, we defined a list ",{"type":17,"tag":79,"props":5547,"children":5549},{"className":5548},[],[5550],{"type":23,"value":5551},"my_list",{"type":23,"value":5353},{"type":17,"tag":79,"props":5554,"children":5556},{"className":5555},[],[5557],{"type":23,"value":2169},{"type":23,"value":5559}," loop to iterate over each element in the list and print the value of each element.",{"type":17,"tag":26,"props":5561,"children":5562},{},[5563,5565,5570],{"type":23,"value":5564},"With the ",{"type":17,"tag":79,"props":5566,"children":5568},{"className":5567},[],[5569],{"type":23,"value":2169},{"type":23,"value":5571}," loop, we can easily iterate over elements in sequences such as lists, tuples, sets, dictionaries, etc., and perform specific operations, such as summing the elements in a list.",{"type":17,"tag":518,"props":5573,"children":5574},{":editable":520,":show-in-col":520,"max-height":521},[5575],{"type":17,"tag":275,"props":5576,"children":5579},{"className":5577,"code":5578,"language":432,"meta":8},[527],"my_list = [1, 2, 3, 4, 5]\nsum = 0\nfor i in my_list:\n    sum = sum + i\nprint(sum)\n",[5580],{"type":17,"tag":79,"props":5581,"children":5582},{"__ignoreMap":8},[5583],{"type":23,"value":5578},{"type":17,"tag":26,"props":5585,"children":5586},{},[5587,5588,5593,5594,5599,5601,5607,5609,5614],{"type":23,"value":5545},{"type":17,"tag":79,"props":5589,"children":5591},{"className":5590},[],[5592],{"type":23,"value":5551},{"type":23,"value":5353},{"type":17,"tag":79,"props":5595,"children":5597},{"className":5596},[],[5598],{"type":23,"value":2169},{"type":23,"value":5600}," loop to iterate over each element in the list and add the value of each element to the variable ",{"type":17,"tag":79,"props":5602,"children":5604},{"className":5603},[],[5605],{"type":23,"value":5606},"sum",{"type":23,"value":5608},", and finally print the value of ",{"type":17,"tag":79,"props":5610,"children":5612},{"className":5611},[],[5613],{"type":23,"value":5606},{"type":23,"value":1517},{"type":17,"tag":26,"props":5616,"children":5617},{},[5618,5620,5625,5627,5632],{"type":23,"value":5619},"Here is a simple exercise. You can use the knowledge of the ",{"type":17,"tag":79,"props":5621,"children":5623},{"className":5622},[],[5624],{"type":23,"value":2352},{"type":23,"value":5626}," operator mentioned earlier and use a ",{"type":17,"tag":79,"props":5628,"children":5630},{"className":5629},[],[5631],{"type":23,"value":2169},{"type":23,"value":5633}," loop to print the odd numbers in the list.",{"type":17,"tag":518,"props":5635,"children":5636},{":editable":520,":show-in-col":520,"max-height":521},[5637],{"type":17,"tag":275,"props":5638,"children":5641},{"className":5639,"code":5640,"language":432,"meta":8},[527],"my_list = [1, 2, 3, 4, 5]\nfor i in my_list:\n    if i % 2 != 0:\n        print(i)\n",[5642],{"type":17,"tag":79,"props":5643,"children":5644},{"__ignoreMap":8},[5645],{"type":23,"value":5640},{"type":17,"tag":26,"props":5647,"children":5648},{},[5649,5651,5656,5658,5664,5666,5671],{"type":23,"value":5650},"Additionally, in a ",{"type":17,"tag":79,"props":5652,"children":5654},{"className":5653},[],[5655],{"type":23,"value":2169},{"type":23,"value":5657}," loop, we can use the ",{"type":17,"tag":79,"props":5659,"children":5661},{"className":5660},[],[5662],{"type":23,"value":5663},"range()",{"type":23,"value":5665}," function to generate a sequence of integers to iterate over a range of integers. The syntax structure of the ",{"type":17,"tag":79,"props":5667,"children":5669},{"className":5668},[],[5670],{"type":23,"value":5663},{"type":23,"value":5672}," function is as follows:",{"type":17,"tag":275,"props":5674,"children":5677},{"className":5675,"code":5676,"language":432,"meta":8},[527],"range(start, stop, step)\n",[5678],{"type":17,"tag":79,"props":5679,"children":5680},{"__ignoreMap":8},[5681],{"type":23,"value":5676},{"type":17,"tag":26,"props":5683,"children":5684},{},[5685,5686,5691,5693,5699,5701,5707,5709,5715,5717,5722,5724,5729,5731,5736,5738,5743],{"type":23,"value":3191},{"type":17,"tag":79,"props":5687,"children":5689},{"className":5688},[],[5690],{"type":23,"value":5663},{"type":23,"value":5692}," function generates a sequence of integers from ",{"type":17,"tag":79,"props":5694,"children":5696},{"className":5695},[],[5697],{"type":23,"value":5698},"start",{"type":23,"value":5700}," to ",{"type":17,"tag":79,"props":5702,"children":5704},{"className":5703},[],[5705],{"type":23,"value":5706},"stop",{"type":23,"value":5708},", with a step size of ",{"type":17,"tag":79,"props":5710,"children":5712},{"className":5711},[],[5713],{"type":23,"value":5714},"step",{"type":23,"value":5716},". ",{"type":17,"tag":79,"props":5718,"children":5720},{"className":5719},[],[5721],{"type":23,"value":5698},{"type":23,"value":5723}," is the starting value of the sequence, defaulting to 0; ",{"type":17,"tag":79,"props":5725,"children":5727},{"className":5726},[],[5728],{"type":23,"value":5706},{"type":23,"value":5730}," is the ending value of the sequence, but not including ",{"type":17,"tag":79,"props":5732,"children":5734},{"className":5733},[],[5735],{"type":23,"value":5706},{"type":23,"value":5737},"; ",{"type":17,"tag":79,"props":5739,"children":5741},{"className":5740},[],[5742],{"type":23,"value":5714},{"type":23,"value":5744}," is the step size of the sequence, defaulting to 1.",{"type":17,"tag":26,"props":5746,"children":5747},{},[5748,5749,5754,5756,5761],{"type":23,"value":5321},{"type":17,"tag":79,"props":5750,"children":5752},{"className":5751},[],[5753],{"type":23,"value":2169},{"type":23,"value":5755}," loop using the ",{"type":17,"tag":79,"props":5757,"children":5759},{"className":5758},[],[5760],{"type":23,"value":5663},{"type":23,"value":5762}," function.",{"type":17,"tag":518,"props":5764,"children":5765},{":editable":520,":show-in-col":520,"max-height":521},[5766],{"type":17,"tag":275,"props":5767,"children":5770},{"className":5768,"code":5769,"language":432,"meta":8},[527],"for i in range(5):\n    print(i)\n",[5771],{"type":17,"tag":79,"props":5772,"children":5773},{"__ignoreMap":8},[5774],{"type":23,"value":5769},{"type":17,"tag":26,"props":5776,"children":5777},{},[5778,5780,5786,5788,5793],{"type":23,"value":5779},"In the above example, ",{"type":17,"tag":79,"props":5781,"children":5783},{"className":5782},[],[5784],{"type":23,"value":5785},"range(5)",{"type":23,"value":5787}," generates a sequence of integers from 0 to 5, but not including 5, i.e., the sequence is 0, 1, 2, 3, 4. Then we use a ",{"type":17,"tag":79,"props":5789,"children":5791},{"className":5790},[],[5792],{"type":23,"value":2169},{"type":23,"value":5794}," loop to iterate over this sequence and print the value of each element.",{"type":17,"tag":26,"props":5796,"children":5797},{},[5798,5800,5805],{"type":23,"value":5799},"We can make the ",{"type":17,"tag":79,"props":5801,"children":5803},{"className":5802},[],[5804],{"type":23,"value":5663},{"type":23,"value":5806}," function a bit more complex, such as generating a sequence of integers from 1 to 10 with a step size of 2.",{"type":17,"tag":518,"props":5808,"children":5809},{":editable":520,":show-in-col":520,"max-height":521},[5810],{"type":17,"tag":275,"props":5811,"children":5814},{"className":5812,"code":5813,"language":432,"meta":8},[527],"for i in range(1, 10, 2):\n    print(i)\n",[5815],{"type":17,"tag":79,"props":5816,"children":5817},{"__ignoreMap":8},[5818],{"type":23,"value":5813},{"type":17,"tag":26,"props":5820,"children":5821},{},[5822,5823,5828],{"type":23,"value":3191},{"type":17,"tag":79,"props":5824,"children":5826},{"className":5825},[],[5827],{"type":23,"value":5663},{"type":23,"value":5829}," function is very useful when we want to execute a loop a certain number of times, such as when we want to execute a loop 5 times.",{"type":17,"tag":518,"props":5831,"children":5832},{":editable":520,":show-in-col":520,"max-height":521},[5833],{"type":17,"tag":275,"props":5834,"children":5837},{"className":5835,"code":5836,"language":432,"meta":8},[527],"for i in range(5):\n    print('This is the', i + 1, 'time.')\n",[5838],{"type":17,"tag":79,"props":5839,"children":5840},{"__ignoreMap":8},[5841],{"type":23,"value":5836},{"type":17,"tag":26,"props":5843,"children":5844},{},[5845],{"type":23,"value":5846},"Or when we want to iterate over the indexes of a list.",{"type":17,"tag":518,"props":5848,"children":5849},{":editable":520,":show-in-col":520,"max-height":521},[5850],{"type":17,"tag":275,"props":5851,"children":5854},{"className":5852,"code":5853,"language":432,"meta":8},[527],"my_list = ['apple', 'banana', 'cherry', 'date', 'elderberry']\n\nfor i in range(len(my_list)):\n    print(i, my_list[i])\n",[5855],{"type":17,"tag":79,"props":5856,"children":5857},{"__ignoreMap":8},[5858],{"type":23,"value":5853},{"type":17,"tag":26,"props":5860,"children":5861},{},[5862,5863,5869,5871,5877,5879,5884],{"type":23,"value":3535},{"type":17,"tag":79,"props":5864,"children":5866},{"className":5865},[],[5867],{"type":23,"value":5868},"range(len(my_list))",{"type":23,"value":5870}," to generate a sequence of integers from 0 to ",{"type":17,"tag":79,"props":5872,"children":5874},{"className":5873},[],[5875],{"type":23,"value":5876},"len(my_list)",{"type":23,"value":5878},", and then use a ",{"type":17,"tag":79,"props":5880,"children":5882},{"className":5881},[],[5883],{"type":23,"value":2169},{"type":23,"value":5885}," loop to iterate over this sequence and print the index and value of each element.",{"type":17,"tag":26,"props":5887,"children":5888},{},[5889,5891,5896,5898,5903],{"type":23,"value":5890},"Now, you can try combining the ",{"type":17,"tag":79,"props":5892,"children":5894},{"className":5893},[],[5895],{"type":23,"value":5663},{"type":23,"value":5897}," function and the ",{"type":17,"tag":79,"props":5899,"children":5901},{"className":5900},[],[5902],{"type":23,"value":2169},{"type":23,"value":5904}," loop to print the sum of the cubes of all odd numbers from 1 to 9 (inclusive).",{"type":17,"tag":518,"props":5906,"children":5907},{":editable":520,":show-in-col":520,"max-height":521},[5908],{"type":17,"tag":275,"props":5909,"children":5912},{"className":5910,"code":5911,"language":432,"meta":8},[527],"sum = 0\nfor i in range(1, 10, 2):\n    sum = sum + i ** 3\nprint(sum)\n",[5913],{"type":17,"tag":79,"props":5914,"children":5915},{"__ignoreMap":8},[5916],{"type":23,"value":5911},{"type":17,"tag":96,"props":5918,"children":5920},{"id":5919},"_63-loop-control-statements",[5921],{"type":23,"value":5922},"6.3 Loop Control Statements",{"type":17,"tag":26,"props":5924,"children":5925},{},[5926],{"type":23,"value":5927},"In loops, it is easy to encounter exceptions caused by special situations, such as infinite loops. To avoid these exceptions, Python provides some loop control statements to control the execution of loops.",{"type":17,"tag":235,"props":5929,"children":5930},{},[5931,5942,5953],{"type":17,"tag":36,"props":5932,"children":5933},{},[5934,5940],{"type":17,"tag":79,"props":5935,"children":5937},{"className":5936},[],[5938],{"type":23,"value":5939},"break",{"type":23,"value":5941}," statement: Used to terminate the loop. Even if the loop condition is true, it will immediately exit the loop.",{"type":17,"tag":36,"props":5943,"children":5944},{},[5945,5951],{"type":17,"tag":79,"props":5946,"children":5948},{"className":5947},[],[5949],{"type":23,"value":5950},"continue",{"type":23,"value":5952}," statement: Used to skip the remaining statements in the current loop and continue with the next iteration of the loop.",{"type":17,"tag":36,"props":5954,"children":5955},{},[5956,5962],{"type":17,"tag":79,"props":5957,"children":5959},{"className":5958},[],[5960],{"type":23,"value":5961},"pass",{"type":23,"value":5963}," statement: Used as a placeholder, indicating that nothing is done. It is usually used to occupy a code block to make the code structure complete.",{"type":17,"tag":26,"props":5965,"children":5966},{},[5967,5969,5974],{"type":23,"value":5968},"Here is a simple example of the ",{"type":17,"tag":79,"props":5970,"children":5972},{"className":5971},[],[5973],{"type":23,"value":5939},{"type":23,"value":3236},{"type":17,"tag":518,"props":5976,"children":5977},{":editable":520,":show-in-col":520,"max-height":521},[5978],{"type":17,"tag":275,"props":5979,"children":5982},{"className":5980,"code":5981,"language":432,"meta":8},[527],"i = 0\nwhile i \u003C 5:\n    print(i)\n    i += 1\n    if i == 3:\n        break\n",[5983],{"type":17,"tag":79,"props":5984,"children":5985},{"__ignoreMap":8},[5986],{"type":23,"value":5981},{"type":17,"tag":26,"props":5988,"children":5989},{},[5990,5992,5997,5998,6003,6005,6010,6012,6017,6019,6025,6027,6032],{"type":23,"value":5991},"In the above example, we use a ",{"type":17,"tag":79,"props":5993,"children":5995},{"className":5994},[],[5996],{"type":23,"value":5205},{"type":23,"value":5360},{"type":17,"tag":79,"props":5999,"children":6001},{"className":6000},[],[6002],{"type":23,"value":5351},{"type":23,"value":6004},". When the value of ",{"type":17,"tag":79,"props":6006,"children":6008},{"className":6007},[],[6009],{"type":23,"value":5351},{"type":23,"value":6011}," is equal to 3, we use the ",{"type":17,"tag":79,"props":6013,"children":6015},{"className":6014},[],[6016],{"type":23,"value":5939},{"type":23,"value":6018}," statement to terminate the loop. Therefore, even if the loop condition ",{"type":17,"tag":79,"props":6020,"children":6022},{"className":6021},[],[6023],{"type":23,"value":6024},"i \u003C 5",{"type":23,"value":6026}," is satisfied, the loop will immediately exit when the value of ",{"type":17,"tag":79,"props":6028,"children":6030},{"className":6029},[],[6031],{"type":23,"value":5351},{"type":23,"value":6033}," is equal to 3.",{"type":17,"tag":26,"props":6035,"children":6036},{},[6037,6038,6043],{"type":23,"value":5968},{"type":17,"tag":79,"props":6039,"children":6041},{"className":6040},[],[6042],{"type":23,"value":5950},{"type":23,"value":3236},{"type":17,"tag":518,"props":6045,"children":6046},{":editable":520,":show-in-col":520,"max-height":521},[6047],{"type":17,"tag":275,"props":6048,"children":6051},{"className":6049,"code":6050,"language":432,"meta":8},[527],"i = 0\nwhile i \u003C 5:\n    i += 1\n    if i == 3:\n        continue\n    print(i)\n",[6052],{"type":17,"tag":79,"props":6053,"children":6054},{"__ignoreMap":8},[6055],{"type":23,"value":6050},{"type":17,"tag":26,"props":6057,"children":6058},{},[6059,6060,6065,6066,6071,6072,6077,6078,6083,6085,6090,6092,6097],{"type":23,"value":5991},{"type":17,"tag":79,"props":6061,"children":6063},{"className":6062},[],[6064],{"type":23,"value":5205},{"type":23,"value":5360},{"type":17,"tag":79,"props":6067,"children":6069},{"className":6068},[],[6070],{"type":23,"value":5351},{"type":23,"value":6004},{"type":17,"tag":79,"props":6073,"children":6075},{"className":6074},[],[6076],{"type":23,"value":5351},{"type":23,"value":6011},{"type":17,"tag":79,"props":6079,"children":6081},{"className":6080},[],[6082],{"type":23,"value":5950},{"type":23,"value":6084}," statement to skip the remaining statements in the current loop and continue with the next iteration of the loop. Therefore, when the value of ",{"type":17,"tag":79,"props":6086,"children":6088},{"className":6087},[],[6089],{"type":23,"value":5351},{"type":23,"value":6091}," is equal to 3, the value of ",{"type":17,"tag":79,"props":6093,"children":6095},{"className":6094},[],[6096],{"type":23,"value":5351},{"type":23,"value":6098}," will not be printed.",{"type":17,"tag":26,"props":6100,"children":6101},{},[6102,6103,6108],{"type":23,"value":5968},{"type":17,"tag":79,"props":6104,"children":6106},{"className":6105},[],[6107],{"type":23,"value":5961},{"type":23,"value":3236},{"type":17,"tag":518,"props":6110,"children":6111},{":editable":520,":show-in-col":520,"max-height":521},[6112],{"type":17,"tag":275,"props":6113,"children":6116},{"className":6114,"code":6115,"language":432,"meta":8},[527],"i = 0\nwhile i \u003C 5:\n    i += 1\n    if i == 3:\n        pass\n    print(i)\n",[6117],{"type":17,"tag":79,"props":6118,"children":6119},{"__ignoreMap":8},[6120],{"type":23,"value":6115},{"type":17,"tag":26,"props":6122,"children":6123},{},[6124,6125,6130,6131,6136,6137,6142,6143,6148,6150,6155],{"type":23,"value":5991},{"type":17,"tag":79,"props":6126,"children":6128},{"className":6127},[],[6129],{"type":23,"value":5205},{"type":23,"value":5360},{"type":17,"tag":79,"props":6132,"children":6134},{"className":6133},[],[6135],{"type":23,"value":5351},{"type":23,"value":6004},{"type":17,"tag":79,"props":6138,"children":6140},{"className":6139},[],[6141],{"type":23,"value":5351},{"type":23,"value":6011},{"type":17,"tag":79,"props":6144,"children":6146},{"className":6145},[],[6147],{"type":23,"value":5961},{"type":23,"value":6149}," statement to indicate that nothing is done, and then continue with the next statement. Therefore, when the value of ",{"type":17,"tag":79,"props":6151,"children":6153},{"className":6152},[],[6154],{"type":23,"value":5351},{"type":23,"value":6156}," is equal to 3, there will be no change.",{"type":17,"tag":18,"props":6158,"children":6160},{"id":6159},"_7-exception-handling",[6161],{"type":23,"value":6162},"7. Exception Handling",{"type":17,"tag":26,"props":6164,"children":6165},{},[6166],{"type":23,"value":6167},"In programming, an exception is an error that occurs during the execution of a program, which may cause the program to terminate. To prevent the program from terminating, we can use exception handling mechanisms to catch exceptions, allowing the program to continue executing.",{"type":17,"tag":26,"props":6169,"children":6170},{},[6171,6173,6178,6180,6186],{"type":23,"value":6172},"In the previous examples, we mentioned that passing a non-numeric string to the ",{"type":17,"tag":79,"props":6174,"children":6176},{"className":6175},[],[6177],{"type":23,"value":2862},{"type":23,"value":6179}," function will raise a ",{"type":17,"tag":79,"props":6181,"children":6183},{"className":6182},[],[6184],{"type":23,"value":6185},"ValueError",{"type":23,"value":6187}," exception.",{"type":17,"tag":518,"props":6189,"children":6190},{":editable":520,":show-in-col":520,"max-height":521},[6191],{"type":17,"tag":275,"props":6192,"children":6195},{"className":6193,"code":6194,"language":432,"meta":8},[527],"number = int('abc')\nprint(number)\n",[6196],{"type":17,"tag":79,"props":6197,"children":6198},{"__ignoreMap":8},[6199],{"type":23,"value":6194},{"type":17,"tag":26,"props":6201,"children":6202},{},[6203,6205,6210,6212,6217,6218,6223,6225,6231,6232,6238],{"type":23,"value":6204},"In the above example, passing a non-numeric string ",{"type":17,"tag":79,"props":6206,"children":6208},{"className":6207},[],[6209],{"type":23,"value":1972},{"type":23,"value":6211}," to the ",{"type":17,"tag":79,"props":6213,"children":6215},{"className":6214},[],[6216],{"type":23,"value":2862},{"type":23,"value":6179},{"type":17,"tag":79,"props":6219,"children":6221},{"className":6220},[],[6222],{"type":23,"value":6185},{"type":23,"value":6224}," exception, causing the program to terminate. To prevent the program from terminating, we can use ",{"type":17,"tag":79,"props":6226,"children":6228},{"className":6227},[],[6229],{"type":23,"value":6230},"try",{"type":23,"value":86},{"type":17,"tag":79,"props":6233,"children":6235},{"className":6234},[],[6236],{"type":23,"value":6237},"except",{"type":23,"value":6239}," statements to catch exceptions.",{"type":17,"tag":26,"props":6241,"children":6242},{},[6243,6244,6249,6250,6255,6257,6262,6264,6269],{"type":23,"value":3191},{"type":17,"tag":79,"props":6245,"children":6247},{"className":6246},[],[6248],{"type":23,"value":6230},{"type":23,"value":86},{"type":17,"tag":79,"props":6251,"children":6253},{"className":6252},[],[6254],{"type":23,"value":6237},{"type":23,"value":6256}," statements allow us to catch exceptions in a block of code that may raise an exception and perform specific actions when an exception occurs. The ",{"type":17,"tag":79,"props":6258,"children":6260},{"className":6259},[],[6261],{"type":23,"value":6230},{"type":23,"value":6263}," statement is used to wrap the block of code that may raise an exception, and the ",{"type":17,"tag":79,"props":6265,"children":6267},{"className":6266},[],[6268],{"type":23,"value":6237},{"type":23,"value":6270}," statement is used to catch the exception and perform specific actions.",{"type":17,"tag":26,"props":6272,"children":6273},{},[6274],{"type":23,"value":6275},"Here is a simple example of exception handling.",{"type":17,"tag":518,"props":6277,"children":6278},{":editable":520,":show-in-col":520,"max-height":521},[6279],{"type":17,"tag":275,"props":6280,"children":6283},{"className":6281,"code":6282,"language":432,"meta":8},[527],"try:\n    number = int(input('Please enter a number: '))\n    print(number)\nexcept ValueError:\n    print('An error occurred.')\n",[6284],{"type":17,"tag":79,"props":6285,"children":6286},{"__ignoreMap":8},[6287],{"type":23,"value":6282},{"type":17,"tag":26,"props":6289,"children":6290},{},[6291,6293,6298,6300,6306,6308,6314],{"type":23,"value":6292},"In the above code, if we enter an integer, the program will execute normally and print the entered integer. However, if we enter a non-numeric string, the program will raise a ",{"type":17,"tag":79,"props":6294,"children":6296},{"className":6295},[],[6297],{"type":23,"value":6185},{"type":23,"value":6299}," exception. In this case, the ",{"type":17,"tag":79,"props":6301,"children":6303},{"className":6302},[],[6304],{"type":23,"value":6305},"except ValueError:",{"type":23,"value":6307}," statement will catch the exception (without terminating the program) and print ",{"type":17,"tag":79,"props":6309,"children":6311},{"className":6310},[],[6312],{"type":23,"value":6313},"An error occurred.",{"type":23,"value":1517},{"type":17,"tag":26,"props":6316,"children":6317},{},[6318],{"type":23,"value":6319},"With exception handling mechanisms, we can handle various exceptions in the program, making the program more robust. For example, we can modify the above code to prompt the user to re-enter a number if a non-numeric string is entered.",{"type":17,"tag":518,"props":6321,"children":6322},{":editable":520,":show-in-col":520,"max-height":521},[6323],{"type":17,"tag":275,"props":6324,"children":6327},{"className":6325,"code":6326,"language":432,"meta":8},[527],"while True:\n    try:\n        number = int(input('Please enter a number: '))\n        print(number)\n        break\n    except ValueError:\n        print('Please enter a valid number.')\n",[6328],{"type":17,"tag":79,"props":6329,"children":6330},{"__ignoreMap":8},[6331],{"type":23,"value":6326},{"type":17,"tag":26,"props":6333,"children":6334},{},[6335,6337,6343,6345,6350,6351,6356,6358,6364],{"type":23,"value":6336},"In the above code, we use a ",{"type":17,"tag":79,"props":6338,"children":6340},{"className":6339},[],[6341],{"type":23,"value":6342},"while True:",{"type":23,"value":6344}," loop to continuously prompt the user to enter a number, and then use ",{"type":17,"tag":79,"props":6346,"children":6348},{"className":6347},[],[6349],{"type":23,"value":6230},{"type":23,"value":86},{"type":17,"tag":79,"props":6352,"children":6354},{"className":6353},[],[6355],{"type":23,"value":6237},{"type":23,"value":6357}," statements to catch exceptions. If the user enters a non-numeric string, the program will print ",{"type":17,"tag":79,"props":6359,"children":6361},{"className":6360},[],[6362],{"type":23,"value":6363},"Please enter a valid number.",{"type":23,"value":6365}," and then continue to prompt the user to enter a number until a valid number is entered.",{"title":8,"searchDepth":11,"depth":11,"links":6367},[6368,6369,6370,6371,6372,6373,6374,6380,6385,6392],{"id":1863,"depth":375,"text":1866},{"id":2083,"depth":375,"text":2086},{"id":2308,"depth":375,"text":2311},{"id":2763,"depth":375,"text":2766},{"id":3000,"depth":11,"text":3003},{"id":3258,"depth":11,"text":3261},{"id":3617,"depth":11,"text":3620,"children":6375},[6376,6377,6378,6379],{"id":3716,"depth":375,"text":3719},{"id":3920,"depth":375,"text":3923},{"id":4023,"depth":375,"text":4026},{"id":4262,"depth":375,"text":4265},{"id":4718,"depth":11,"text":4721,"children":6381},[6382,6383,6384],{"id":4724,"depth":375,"text":4727},{"id":4905,"depth":375,"text":4908},{"id":5079,"depth":375,"text":5082},{"id":5191,"depth":11,"text":5194,"children":6386},[6387,6389,6391],{"id":5217,"depth":375,"text":6388},"6.1 while Loop",{"id":5424,"depth":375,"text":6390},"6.2 for Loop",{"id":5919,"depth":375,"text":5922},{"id":6159,"depth":11,"text":6162},"content:python-basic:2.2python_basic_II.md","python-basic/2.2python_basic_II.md","python-basic/2.2python_basic_II",{"_path":6397,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":6398,"description":395,"navigation":396,"index":1858,"icon":12,"body":6399,"_type":386,"_id":10890,"_source":388,"_file":10891,"_stem":10892,"_extension":391},"/python-basic/numpy","3 Numpy for Python",{"type":14,"children":6400,"toc":10875},[6401,6444,6450,6456,6461,6466,6471,6489,6496,6507,6512,6518,6523,6549,6587,6593,6599,6604,6609,6767,6781,6794,6799,7004,7046,7055,7068,7097,7103,7108,7121,7127,7141,7152,7161,7166,7262,7267,7280,7292,7304,7313,7325,7337,7349,7358,7376,7388,7400,7428,7460,7485,7490,7499,7503,7536,7554,7566,7607,7619,7628,7632,7674,7685,7694,7700,7744,7753,7757,7821,7837,7849,7855,7860,7865],{"type":17,"tag":836,"props":6402,"children":6403},{},[6404,6413],{"type":17,"tag":26,"props":6405,"children":6406},{},[6407,6411],{"type":17,"tag":2020,"props":6408,"children":6409},{},[6410],{"type":23,"value":2024},{"type":23,"value":6412},"\nReference URLs:",{"type":17,"tag":235,"props":6414,"children":6415},{},[6416,6430],{"type":17,"tag":36,"props":6417,"children":6418},{},[6419,6421],{"type":23,"value":6420},"Official Numpy Documentation in Chinese: ",{"type":17,"tag":2020,"props":6422,"children":6423},{},[6424],{"type":17,"tag":105,"props":6425,"children":6428},{"href":6426,"rel":6427},"https://www.numpy.org.cn/",[109],[6429],{"type":23,"value":6426},{"type":17,"tag":36,"props":6431,"children":6432},{},[6433,6435],{"type":23,"value":6434},"Simple Numpy Tutorial: ",{"type":17,"tag":2020,"props":6436,"children":6437},{},[6438],{"type":17,"tag":105,"props":6439,"children":6442},{"href":6440,"rel":6441},"https://numpy123.com/",[109],[6443],{"type":23,"value":6440},{"type":17,"tag":18,"props":6445,"children":6447},{"id":6446},"_1-introduction-to-numpy",[6448],{"type":23,"value":6449},"1. Introduction to Numpy",{"type":17,"tag":96,"props":6451,"children":6453},{"id":6452},"_1-the-role-of-numpy",[6454],{"type":23,"value":6455},"1. The Role of Numpy",{"type":17,"tag":26,"props":6457,"children":6458},{},[6459],{"type":23,"value":6460},"Numpy is a scientific computing library for Python that supports large multi-dimensional arrays and matrices, along with a collection of high-performance mathematical functions to operate on these arrays. Numpy is the foundation for libraries like Scipy, Pandas, and others used for data processing or scientific computing.",{"type":17,"tag":26,"props":6462,"children":6463},{},[6464],{"type":23,"value":6465},"In simple terms, Numpy is a fast mathematical computation library primarily used for array calculations. Its core is the ndarray object, which is an N-dimensional array, also known as a multi-dimensional array. Additionally, Numpy provides many broadcasting functions, tools to integrate C/C++/Fortran code, and can be used to store and process large matrices. It also offers functionalities like linear algebra, Fourier transform, and random number generation, making it the fundamental library for scientific computing in Python.",{"type":17,"tag":26,"props":6467,"children":6468},{},[6469],{"type":23,"value":6470},"Numpy has the following advantages:",{"type":17,"tag":32,"props":6472,"children":6473},{},[6474,6479,6484],{"type":17,"tag":36,"props":6475,"children":6476},{},[6477],{"type":23,"value":6478},"Fast computation: Numpy is written in C, so some of its algorithm libraries are optimized to provide fast mathematical operations. For the same computational tasks, using Numpy is 10 to 100 times faster than using Python's built-in lists.",{"type":17,"tag":36,"props":6480,"children":6481},{},[6482],{"type":23,"value":6483},"Performance optimization: Numpy uses vectorized operations internally, which avoids loops in Python, making the code more concise and faster.",{"type":17,"tag":36,"props":6485,"children":6486},{},[6487],{"type":23,"value":6488},"Rich function library: Numpy provides a large number of mathematical functions for array operations, including statistics, linear algebra, Fourier transform, etc.",{"type":17,"tag":26,"props":6490,"children":6491},{},[6492],{"type":17,"tag":714,"props":6493,"children":6495},{"alt":8,"src":6494},"https://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Numpy/Numpy%20%E4%BC%98%E5%8A%BF%20en.png",[],{"type":17,"tag":275,"props":6497,"children":6502},{"code":6498,"language":6499,"meta":8,"className":6500},"graph TB\n    A[NumPy Data Types] --> B[Numeric]\n    A --> C[Boolean]\n    A --> D[String]\n    \n    B --> B1[Integer]\n    B --> B2[Float]\n    B --> B3[Complex]\n    \n    B1 --> B11[int8 -128~127]\n    B1 --> B12[int16 -32768~32767]\n    B1 --> B13[int32]\n    B1 --> B14[int64]\n    \n    B2 --> B21[float16]\n    B2 --> B22[float32]\n    B2 --> B23[float64]\n    \n    B3 --> B31[complex64]\n    B3 --> B32[complex128]\n    \n    C --> C1[True]\n    C --> C2[False]\n    \n    D --> D1[string_]\n    D --> D2[unicode_]\n","mermaid",[6501],"language-mermaid",[6503],{"type":17,"tag":79,"props":6504,"children":6505},{"__ignoreMap":8},[6506],{"type":23,"value":6498},{"type":17,"tag":26,"props":6508,"children":6509},{},[6510],{"type":23,"value":6511},"Numpy is often used together with Scipy (scientific computing library), Matplotlib (plotting library), and Pandas (data processing library). These libraries are all based on Numpy, forming a powerful scientific computing environment.",{"type":17,"tag":96,"props":6513,"children":6515},{"id":6514},"_2-ndarray-object",[6516],{"type":23,"value":6517},"2. ndarray Object",{"type":17,"tag":26,"props":6519,"children":6520},{},[6521],{"type":23,"value":6522},"The core of Numpy is the ndarray object, an N-dimensional array object, also known as a multi-dimensional array. The ndarray object is a fast and flexible container for large datasets, capable of holding multiple elements of the same type.",{"type":17,"tag":235,"props":6524,"children":6525},{},[6526,6539,6544],{"type":17,"tag":36,"props":6527,"children":6528},{},[6529,6531,6537],{"type":23,"value":6530},"The ndarray object is a collection of ",{"type":17,"tag":79,"props":6532,"children":6534},{"className":6533},[],[6535],{"type":23,"value":6536},"same type of data",{"type":23,"value":6538},", which can be of any dimension.",{"type":17,"tag":36,"props":6540,"children":6541},{},[6542],{"type":23,"value":6543},"Each element in the ndarray object occupies the same size area in memory.",{"type":17,"tag":36,"props":6545,"children":6546},{},[6547],{"type":23,"value":6548},"The indices in the ndarray object start from 0.",{"type":17,"tag":836,"props":6550,"children":6551},{},[6552],{"type":17,"tag":26,"props":6553,"children":6554},{},[6555,6560,6562,6567,6569,6574,6575,6580,6581,6586],{"type":17,"tag":2020,"props":6556,"children":6557},{},[6558],{"type":23,"value":6559},"!Important",{"type":23,"value":6561},"\nBy default, all elements in a Numpy ndarray object are of the same type, which is different from Python lists. If different types of data are passed when creating an ndarray, Numpy will automatically convert the data types to the same type to ensure consistency, with the priority being: ",{"type":17,"tag":79,"props":6563,"children":6565},{"className":6564},[],[6566],{"type":23,"value":1997},{"type":23,"value":6568}," \u003C ",{"type":17,"tag":79,"props":6570,"children":6572},{"className":6571},[],[6573],{"type":23,"value":1885},{"type":23,"value":6568},{"type":17,"tag":79,"props":6576,"children":6578},{"className":6577},[],[6579],{"type":23,"value":1926},{"type":23,"value":6568},{"type":17,"tag":79,"props":6582,"children":6584},{"className":6583},[],[6585],{"type":23,"value":1965},{"type":23,"value":1517},{"type":17,"tag":18,"props":6588,"children":6590},{"id":6589},"_2-creating-ndarray-objects",[6591],{"type":23,"value":6592},"2. Creating ndarray Objects",{"type":17,"tag":96,"props":6594,"children":6596},{"id":6595},"_1-data-types",[6597],{"type":23,"value":6598},"1. Data Types",{"type":17,"tag":26,"props":6600,"children":6601},{},[6602],{"type":23,"value":6603},"To create an ndarray object, you first need to know which data types it supports.",{"type":17,"tag":26,"props":6605,"children":6606},{},[6607],{"type":23,"value":6608},"Numpy provides more rich and efficient data types than Python's built-in types to support more complex numerical computation needs. Below are some common Numpy data types:",{"type":17,"tag":1211,"props":6610,"children":6611},{},[6612,6628],{"type":17,"tag":1215,"props":6613,"children":6614},{},[6615],{"type":17,"tag":1219,"props":6616,"children":6617},{},[6618,6624],{"type":17,"tag":1223,"props":6619,"children":6621},{"align":6620},"center",[6622],{"type":23,"value":6623},"Data Type",{"type":17,"tag":1223,"props":6625,"children":6626},{"align":6620},[6627],{"type":23,"value":1232},{"type":17,"tag":1234,"props":6629,"children":6630},{},[6631,6648,6665,6682,6699,6716,6733,6750],{"type":17,"tag":1219,"props":6632,"children":6633},{},[6634,6643],{"type":17,"tag":1241,"props":6635,"children":6636},{"align":6620},[6637],{"type":17,"tag":79,"props":6638,"children":6640},{"className":6639},[],[6641],{"type":23,"value":6642},"bool_",{"type":17,"tag":1241,"props":6644,"children":6645},{"align":6620},[6646],{"type":23,"value":6647},"Boolean data type, includes only True and False",{"type":17,"tag":1219,"props":6649,"children":6650},{},[6651,6660],{"type":17,"tag":1241,"props":6652,"children":6653},{"align":6620},[6654],{"type":17,"tag":79,"props":6655,"children":6657},{"className":6656},[],[6658],{"type":23,"value":6659},"int_",{"type":17,"tag":1241,"props":6661,"children":6662},{"align":6620},[6663],{"type":23,"value":6664},"Default integer type, similar to long in C, usually int32 or int64, depending on the platform",{"type":17,"tag":1219,"props":6666,"children":6667},{},[6668,6677],{"type":17,"tag":1241,"props":6669,"children":6670},{"align":6620},[6671],{"type":17,"tag":79,"props":6672,"children":6674},{"className":6673},[],[6675],{"type":23,"value":6676},"intp",{"type":17,"tag":1241,"props":6678,"children":6679},{"align":6620},[6680],{"type":23,"value":6681},"Integer type used for indexing, similar to ssize_t in C, generally int32 or int64",{"type":17,"tag":1219,"props":6683,"children":6684},{},[6685,6694],{"type":17,"tag":1241,"props":6686,"children":6687},{"align":6620},[6688],{"type":17,"tag":79,"props":6689,"children":6691},{"className":6690},[],[6692],{"type":23,"value":6693},"uint8",{"type":17,"tag":1241,"props":6695,"children":6696},{"align":6620},[6697],{"type":23,"value":6698},"8-bit unsigned integer, range from 0 to 255",{"type":17,"tag":1219,"props":6700,"children":6701},{},[6702,6711],{"type":17,"tag":1241,"props":6703,"children":6704},{"align":6620},[6705],{"type":17,"tag":79,"props":6706,"children":6708},{"className":6707},[],[6709],{"type":23,"value":6710},"uint64",{"type":17,"tag":1241,"props":6712,"children":6713},{"align":6620},[6714],{"type":23,"value":6715},"64-bit unsigned integer, range from 0 to 18446744073709551615",{"type":17,"tag":1219,"props":6717,"children":6718},{},[6719,6728],{"type":17,"tag":1241,"props":6720,"children":6721},{"align":6620},[6722],{"type":17,"tag":79,"props":6723,"children":6725},{"className":6724},[],[6726],{"type":23,"value":6727},"float_",{"type":17,"tag":1241,"props":6729,"children":6730},{"align":6620},[6731],{"type":23,"value":6732},"Default floating-point type, alias for float64, usually used for more precise floating-point representation",{"type":17,"tag":1219,"props":6734,"children":6735},{},[6736,6745],{"type":17,"tag":1241,"props":6737,"children":6738},{"align":6620},[6739],{"type":17,"tag":79,"props":6740,"children":6742},{"className":6741},[],[6743],{"type":23,"value":6744},"float64",{"type":17,"tag":1241,"props":6746,"children":6747},{"align":6620},[6748],{"type":23,"value":6749},"Double precision floating-point number (64-bit): includes 1-bit sign, 11-bit exponent, and 52-bit mantissa",{"type":17,"tag":1219,"props":6751,"children":6752},{},[6753,6762],{"type":17,"tag":1241,"props":6754,"children":6755},{"align":6620},[6756],{"type":17,"tag":79,"props":6757,"children":6759},{"className":6758},[],[6760],{"type":23,"value":6761},"complex_",{"type":17,"tag":1241,"props":6763,"children":6764},{"align":6620},[6765],{"type":23,"value":6766},"Default complex type, alias for complex128, uses 64-bit floating-point numbers to represent real and imaginary parts",{"type":17,"tag":6768,"props":6769,"children":6770},"mermaid-diagram",{},[6771,6773],{"type":23,"value":6772},"\ngraph LR\n    A[Data Types] --> B[Boolean Type]\n    A --> C[Integer Type]\n    A --> D[Unsigned Integer Type]\n    A --> E[Floating-point Type]\n    A --> F[Complex Type]\n",{"type":17,"tag":275,"props":6774,"children":6776},{"code":6775},"B --> G[bool_]\n\nC --> H[int_]\nC --> I[intp]\n\nD --> J[uint8]\nD --> K[uint64]\n\nE --> L[float_]\nE --> M[float64]\n\nF --> N[complex_]\n",[6777],{"type":17,"tag":79,"props":6778,"children":6779},{"__ignoreMap":8},[6780],{"type":23,"value":6775},{"type":17,"tag":26,"props":6782,"children":6783},{},[6784,6786,6792],{"type":23,"value":6785},"These data types are called ",{"type":17,"tag":79,"props":6787,"children":6789},{"className":6788},[],[6790],{"type":23,"value":6791},"dtype",{"type":23,"value":6793}," objects in Numpy, supporting efficient numerical computation, making Numpy an important tool in scientific computing and data processing.",{"type":17,"tag":26,"props":6795,"children":6796},{},[6797],{"type":23,"value":6798},"In practice, Numpy supports using character codes to identify data types, making the definition of data types more concise. Below are common character codes and their corresponding data types:",{"type":17,"tag":1211,"props":6800,"children":6801},{},[6802,6817],{"type":17,"tag":1215,"props":6803,"children":6804},{},[6805],{"type":17,"tag":1219,"props":6806,"children":6807},{},[6808,6813],{"type":17,"tag":1223,"props":6809,"children":6810},{"align":6620},[6811],{"type":23,"value":6812},"Character Code",{"type":17,"tag":1223,"props":6814,"children":6815},{"align":6620},[6816],{"type":23,"value":6623},{"type":17,"tag":1234,"props":6818,"children":6819},{},[6820,6835,6851,6868,6885,6902,6919,6936,6953,6970,6987],{"type":17,"tag":1219,"props":6821,"children":6822},{},[6823,6831],{"type":17,"tag":1241,"props":6824,"children":6825},{"align":6620},[6826],{"type":17,"tag":79,"props":6827,"children":6829},{"className":6828},[],[6830],{"type":23,"value":1070},{"type":17,"tag":1241,"props":6832,"children":6833},{"align":6620},[6834],{"type":23,"value":1458},{"type":17,"tag":1219,"props":6836,"children":6837},{},[6838,6846],{"type":17,"tag":1241,"props":6839,"children":6840},{"align":6620},[6841],{"type":17,"tag":79,"props":6842,"children":6844},{"className":6843},[],[6845],{"type":23,"value":5351},{"type":17,"tag":1241,"props":6847,"children":6848},{"align":6620},[6849],{"type":23,"value":6850},"Signed integer (int)",{"type":17,"tag":1219,"props":6852,"children":6853},{},[6854,6863],{"type":17,"tag":1241,"props":6855,"children":6856},{"align":6620},[6857],{"type":17,"tag":79,"props":6858,"children":6860},{"className":6859},[],[6861],{"type":23,"value":6862},"u",{"type":17,"tag":1241,"props":6864,"children":6865},{"align":6620},[6866],{"type":23,"value":6867},"Unsigned integer (unsigned int)",{"type":17,"tag":1219,"props":6869,"children":6870},{},[6871,6880],{"type":17,"tag":1241,"props":6872,"children":6873},{"align":6620},[6874],{"type":17,"tag":79,"props":6875,"children":6877},{"className":6876},[],[6878],{"type":23,"value":6879},"f",{"type":17,"tag":1241,"props":6881,"children":6882},{"align":6620},[6883],{"type":23,"value":6884},"Floating-point (float)",{"type":17,"tag":1219,"props":6886,"children":6887},{},[6888,6897],{"type":17,"tag":1241,"props":6889,"children":6890},{"align":6620},[6891],{"type":17,"tag":79,"props":6892,"children":6894},{"className":6893},[],[6895],{"type":23,"value":6896},"c",{"type":17,"tag":1241,"props":6898,"children":6899},{"align":6620},[6900],{"type":23,"value":6901},"Complex floating-point (complex)",{"type":17,"tag":1219,"props":6903,"children":6904},{},[6905,6914],{"type":17,"tag":1241,"props":6906,"children":6907},{"align":6620},[6908],{"type":17,"tag":79,"props":6909,"children":6911},{"className":6910},[],[6912],{"type":23,"value":6913},"m",{"type":17,"tag":1241,"props":6915,"children":6916},{"align":6620},[6917],{"type":23,"value":6918},"Time interval (timedelta)",{"type":17,"tag":1219,"props":6920,"children":6921},{},[6922,6931],{"type":17,"tag":1241,"props":6923,"children":6924},{"align":6620},[6925],{"type":17,"tag":79,"props":6926,"children":6928},{"className":6927},[],[6929],{"type":23,"value":6930},"M",{"type":17,"tag":1241,"props":6932,"children":6933},{"align":6620},[6934],{"type":23,"value":6935},"Date-time (datetime)",{"type":17,"tag":1219,"props":6937,"children":6938},{},[6939,6948],{"type":17,"tag":1241,"props":6940,"children":6941},{"align":6620},[6942],{"type":17,"tag":79,"props":6943,"children":6945},{"className":6944},[],[6946],{"type":23,"value":6947},"O",{"type":17,"tag":1241,"props":6949,"children":6950},{"align":6620},[6951],{"type":23,"value":6952},"Python object (object)",{"type":17,"tag":1219,"props":6954,"children":6955},{},[6956,6965],{"type":17,"tag":1241,"props":6957,"children":6958},{"align":6620},[6959],{"type":17,"tag":79,"props":6960,"children":6962},{"className":6961},[],[6963],{"type":23,"value":6964},"S",{"type":17,"tag":1241,"props":6966,"children":6967},{"align":6620},[6968],{"type":23,"value":6969},"String (string)",{"type":17,"tag":1219,"props":6971,"children":6972},{},[6973,6982],{"type":17,"tag":1241,"props":6974,"children":6975},{"align":6620},[6976],{"type":17,"tag":79,"props":6977,"children":6979},{"className":6978},[],[6980],{"type":23,"value":6981},"U",{"type":17,"tag":1241,"props":6983,"children":6984},{"align":6620},[6985],{"type":23,"value":6986},"Unicode string (unicode string)",{"type":17,"tag":1219,"props":6988,"children":6989},{},[6990,6999],{"type":17,"tag":1241,"props":6991,"children":6992},{"align":6620},[6993],{"type":17,"tag":79,"props":6994,"children":6996},{"className":6995},[],[6997],{"type":23,"value":6998},"V",{"type":17,"tag":1241,"props":7000,"children":7001},{"align":6620},[7002],{"type":23,"value":7003},"Raw data type (void), used to define fixed-size raw data blocks",{"type":17,"tag":26,"props":7005,"children":7006},{},[7007,7009,7014,7016,7021,7023,7029,7031,7036,7038,7044],{"type":23,"value":7008},"In Numpy, we can also customize ",{"type":17,"tag":79,"props":7010,"children":7012},{"className":7011},[],[7013],{"type":23,"value":6791},{"type":23,"value":7015}," objects to achieve more flexible data type definitions. A ",{"type":17,"tag":79,"props":7017,"children":7019},{"className":7018},[],[7020],{"type":23,"value":6791},{"type":23,"value":7022}," object contains metadata about the data type, such as the data type name, data size, byte order, etc. We can use the ",{"type":17,"tag":79,"props":7024,"children":7026},{"className":7025},[],[7027],{"type":23,"value":7028},"np.dtype()",{"type":23,"value":7030}," function to create a ",{"type":17,"tag":79,"props":7032,"children":7034},{"className":7033},[],[7035],{"type":23,"value":6791},{"type":23,"value":7037}," object, which accepts a list where each element is a tuple in the format: ",{"type":17,"tag":79,"props":7039,"children":7041},{"className":7040},[],[7042],{"type":23,"value":7043},"(field name, data type)",{"type":23,"value":7045},". For example, we can create a custom data type containing integer and floating-point fields:",{"type":17,"tag":275,"props":7047,"children":7050},{"code":7048,"language":432,"meta":8,"className":7049},"import numpy as np\n\n# Define a structure containing an integer and a floating-point number\ncustom_dtype = np.dtype([('age', np.int32), ('height', np.float32)])\n",[527],[7051],{"type":17,"tag":79,"props":7052,"children":7053},{"__ignoreMap":8},[7054],{"type":23,"value":7048},{"type":17,"tag":26,"props":7056,"children":7057},{},[7058,7060,7066],{"type":23,"value":7059},"In the above example, the custom data type ",{"type":17,"tag":79,"props":7061,"children":7063},{"className":7062},[],[7064],{"type":23,"value":7065},"custom_dtype",{"type":23,"value":7067}," contains two fields:",{"type":17,"tag":235,"props":7069,"children":7070},{},[7071,7084],{"type":17,"tag":36,"props":7072,"children":7073},{},[7074,7076,7082],{"type":23,"value":7075},"age: ",{"type":17,"tag":79,"props":7077,"children":7079},{"className":7078},[],[7080],{"type":23,"value":7081},"np.int32",{"type":23,"value":7083}," type integer field",{"type":17,"tag":36,"props":7085,"children":7086},{},[7087,7089,7095],{"type":23,"value":7088},"height: ",{"type":17,"tag":79,"props":7090,"children":7092},{"className":7091},[],[7093],{"type":23,"value":7094},"np.float32",{"type":23,"value":7096}," type floating-point field",{"type":17,"tag":96,"props":7098,"children":7100},{"id":7099},"_2-common-functions-to-create-ndarray-objects",[7101],{"type":23,"value":7102},"2. Common Functions to Create ndarray Objects",{"type":17,"tag":26,"props":7104,"children":7105},{},[7106],{"type":23,"value":7107},"In Numpy, there are the following commonly used functions to create ndarray objects:",{"type":17,"tag":6768,"props":7109,"children":7110},{},[7111,7113],{"type":23,"value":7112},"\ngraph LR\n    A[\"Functions to Create ndarray Objects\"] \n    A --> B[\"Basic Creation Functions\"]\n    A --> C[\"Creation Based on Existing Arrays\"]\n    A --> D[\"Special Matrix Creation\"]\n    A --> E[\"Sequence Creation\"]\n",{"type":17,"tag":275,"props":7114,"children":7116},{"code":7115},"B --> G[\"array()\"]\nB --> H[\"asarray()\"]\nB --> I[\"empty()\"]\nB --> J[\"zeros()\"]\nB --> K[\"full()\"]\n\nC --> L[\"zeros_like()\"]\nC --> M[\"full_like()\"]\n\nD --> N[\"eye()\"]\n\nE --> O[\"arange()\"]\nE --> P[\"linspace()\"]\n",[7117],{"type":17,"tag":79,"props":7118,"children":7119},{"__ignoreMap":8},[7120],{"type":23,"value":7115},{"type":17,"tag":1561,"props":7122,"children":7124},{"id":7123},"_1-basic-creation-functions",[7125],{"type":23,"value":7126},"(1) Basic Creation Functions",{"type":17,"tag":32,"props":7128,"children":7129},{},[7130],{"type":17,"tag":36,"props":7131,"children":7132},{},[7133,7139],{"type":17,"tag":79,"props":7134,"children":7136},{"className":7135},[],[7137],{"type":23,"value":7138},"array()",{"type":23,"value":7140}," Function",{"type":17,"tag":26,"props":7142,"children":7143},{},[7144,7145,7150],{"type":23,"value":4106},{"type":17,"tag":79,"props":7146,"children":7148},{"className":7147},[],[7149],{"type":23,"value":7138},{"type":23,"value":7151}," function to create an ndarray object from Python sequence types like lists or tuples. The syntax of this function is as follows:",{"type":17,"tag":275,"props":7153,"children":7156},{"code":7154,"language":432,"meta":8,"className":7155},"numpy.array(object, dtype=None, copy=True, order=None, subok=False, ndmin=0)\n",[527],[7157],{"type":17,"tag":79,"props":7158,"children":7159},{"__ignoreMap":8},[7160],{"type":23,"value":7154},{"type":17,"tag":26,"props":7162,"children":7163},{},[7164],{"type":23,"value":7165},"Parameter Description:",{"type":17,"tag":235,"props":7167,"children":7168},{},[7169,7180,7190,7215,7226,7251],{"type":17,"tag":36,"props":7170,"children":7171},{},[7172,7178],{"type":17,"tag":79,"props":7173,"children":7175},{"className":7174},[],[7176],{"type":23,"value":7177},"object",{"type":23,"value":7179},": The Python sequence type to be passed, such as a list or tuple.",{"type":17,"tag":36,"props":7181,"children":7182},{},[7183,7188],{"type":17,"tag":79,"props":7184,"children":7186},{"className":7185},[],[7187],{"type":23,"value":6791},{"type":23,"value":7189},": Data type (optional). If not specified, Numpy will automatically infer the appropriate data type.",{"type":17,"tag":36,"props":7191,"children":7192},{},[7193,7199,7201,7206,7208,7213],{"type":17,"tag":79,"props":7194,"children":7196},{"className":7195},[],[7197],{"type":23,"value":7198},"copy",{"type":23,"value":7200},": Boolean value (optional). If ",{"type":17,"tag":79,"props":7202,"children":7204},{"className":7203},[],[7205],{"type":23,"value":2005},{"type":23,"value":7207}," (default), a new object will be created; if ",{"type":17,"tag":79,"props":7209,"children":7211},{"className":7210},[],[7212],{"type":23,"value":2012},{"type":23,"value":7214},", the existing object will be referenced directly.",{"type":17,"tag":36,"props":7216,"children":7217},{},[7218,7224],{"type":17,"tag":79,"props":7219,"children":7221},{"className":7220},[],[7222],{"type":23,"value":7223},"order",{"type":23,"value":7225},": Order (optional), the style of creating the array. C row-major (row direction), F column-major (column direction), A any direction (default).",{"type":17,"tag":36,"props":7227,"children":7228},{},[7229,7235,7237,7242,7244,7249],{"type":17,"tag":79,"props":7230,"children":7232},{"className":7231},[],[7233],{"type":23,"value":7234},"subok",{"type":23,"value":7236},": Boolean value (optional). Default is ",{"type":17,"tag":79,"props":7238,"children":7240},{"className":7239},[],[7241],{"type":23,"value":2012},{"type":23,"value":7243},", returns base class array; if ",{"type":17,"tag":79,"props":7245,"children":7247},{"className":7246},[],[7248],{"type":23,"value":2005},{"type":23,"value":7250},", returns subclass array.",{"type":17,"tag":36,"props":7252,"children":7253},{},[7254,7260],{"type":17,"tag":79,"props":7255,"children":7257},{"className":7256},[],[7258],{"type":23,"value":7259},"ndmin",{"type":23,"value":7261},": Specifies the minimum number of dimensions of the generated array (optional).",{"type":17,"tag":26,"props":7263,"children":7264},{},[7265],{"type":23,"value":7266},"Below are some examples of creating ndarray objects:",{"type":17,"tag":26,"props":7268,"children":7269},{},[7270,7272,7278],{"type":23,"value":7271},"Example 1: Creating an ",{"type":17,"tag":79,"props":7273,"children":7275},{"className":7274},[],[7276],{"type":23,"value":7277},"ndarray",{"type":23,"value":7279}," object from a list",{"type":17,"tag":518,"props":7281,"children":7282},{":editable":520,":show-in-col":520,"max-height":521},[7283],{"type":17,"tag":275,"props":7284,"children":7287},{"code":7285,"language":432,"meta":8,"className":7286},"import numpy as np\n\n# Create an ndarray object from a list\narr = np.array([1, 2, 3, 4])\nprint(arr)\nprint(type(arr))\n",[527],[7288],{"type":17,"tag":79,"props":7289,"children":7290},{"__ignoreMap":8},[7291],{"type":23,"value":7285},{"type":17,"tag":26,"props":7293,"children":7294},{},[7295,7297,7302],{"type":23,"value":7296},"Example 2: Elements in the ",{"type":17,"tag":79,"props":7298,"children":7300},{"className":7299},[],[7301],{"type":23,"value":7277},{"type":23,"value":7303}," object are of the same type",{"type":17,"tag":275,"props":7305,"children":7308},{"code":7306,"language":432,"meta":8,"className":7307},"# Even if the provided data types are inconsistent, Numpy will automatically convert them to a single type\narr_mixed = np.array([1, 2.5, 3, 4.7])\nprint(arr_mixed)\nprint(arr_mixed.dtype)\n\n# Output\n# [1.  2.5 3.  4.7]\n# float64\n",[527],[7309],{"type":17,"tag":79,"props":7310,"children":7311},{"__ignoreMap":8},[7312],{"type":23,"value":7306},{"type":17,"tag":26,"props":7314,"children":7315},{},[7316,7318,7323],{"type":23,"value":7317},"Example 3: Creating a multi-dimensional ",{"type":17,"tag":79,"props":7319,"children":7321},{"className":7320},[],[7322],{"type":23,"value":7277},{"type":23,"value":7324}," object",{"type":17,"tag":518,"props":7326,"children":7327},{":editable":520,":show-in-col":520,"max-height":521},[7328],{"type":17,"tag":275,"props":7329,"children":7332},{"code":7330,"language":432,"meta":8,"className":7331},"# Create a two-dimensional array\nmulti_dim_arr = np.array([[1, 2, 3], [4, 5, 6]])\nprint(multi_dim_arr)\nprint(\"Array dimensions:\", multi_dim_arr.ndim)\n",[527],[7333],{"type":17,"tag":79,"props":7334,"children":7335},{"__ignoreMap":8},[7336],{"type":23,"value":7330},{"type":17,"tag":26,"props":7338,"children":7339},{},[7340,7342,7347],{"type":23,"value":7341},"Example 4: Using the ",{"type":17,"tag":79,"props":7343,"children":7345},{"className":7344},[],[7346],{"type":23,"value":6791},{"type":23,"value":7348}," parameter to specify the data type",{"type":17,"tag":275,"props":7350,"children":7353},{"code":7351,"language":432,"meta":8,"className":7352},"# Use dtype to specify the data type as float\narr_float = np.array([1, 2, 3], dtype=np.float32)\nprint(arr_float)\nprint(arr_float.dtype)\n\n# Output\n# [1. 2. 3.]\n# float32\n",[527],[7354],{"type":17,"tag":79,"props":7355,"children":7356},{"__ignoreMap":8},[7357],{"type":23,"value":7351},{"type":17,"tag":26,"props":7359,"children":7360},{},[7361,7363,7368,7370,7375],{"type":23,"value":7362},"Example 5: Customizing a ",{"type":17,"tag":79,"props":7364,"children":7366},{"className":7365},[],[7367],{"type":23,"value":6791},{"type":23,"value":7369}," object and using it to create an ",{"type":17,"tag":79,"props":7371,"children":7373},{"className":7372},[],[7374],{"type":23,"value":7277},{"type":23,"value":7324},{"type":17,"tag":518,"props":7377,"children":7378},{":editable":520,":show-in-col":520,"max-height":521},[7379],{"type":17,"tag":275,"props":7380,"children":7383},{"code":7381,"language":432,"meta":8,"className":7382},"# Custom dtype containing an integer and a floating-point field\ncustom_dtype = np.dtype([('age', np.int32), ('height', np.float32)])\narr_custom = np.array([(25, 5.9), (30, 6.1)], dtype=custom_dtype)\nprint(arr_custom)\nprint(arr_custom['age'])\nprint(arr_custom['height'])\n",[527],[7384],{"type":17,"tag":79,"props":7385,"children":7386},{"__ignoreMap":8},[7387],{"type":23,"value":7381},{"type":17,"tag":26,"props":7389,"children":7390},{},[7391,7393,7398],{"type":23,"value":7392},"Through these examples, we can see that the ",{"type":17,"tag":79,"props":7394,"children":7396},{"className":7395},[],[7397],{"type":23,"value":7138},{"type":23,"value":7399}," function in Numpy provides powerful flexibility, making it easier to create diverse data structures.",{"type":17,"tag":32,"props":7401,"children":7402},{"start":11},[7403],{"type":17,"tag":36,"props":7404,"children":7405},{},[7406,7412,7413,7419,7420,7426],{"type":17,"tag":79,"props":7407,"children":7409},{"className":7408},[],[7410],{"type":23,"value":7411},"empty()",{"type":23,"value":1895},{"type":17,"tag":79,"props":7414,"children":7416},{"className":7415},[],[7417],{"type":23,"value":7418},"zeros()",{"type":23,"value":3281},{"type":17,"tag":79,"props":7421,"children":7423},{"className":7422},[],[7424],{"type":23,"value":7425},"full()",{"type":23,"value":7427}," Functions",{"type":17,"tag":26,"props":7429,"children":7430},{},[7431,7433,7438,7439,7445,7447,7452,7453,7458],{"type":23,"value":7432},"In addition to using the ",{"type":17,"tag":79,"props":7434,"children":7436},{"className":7435},[],[7437],{"type":23,"value":7138},{"type":23,"value":86},{"type":17,"tag":79,"props":7440,"children":7442},{"className":7441},[],[7443],{"type":23,"value":7444},"asarray()",{"type":23,"value":7446}," functions, we can also use the ",{"type":17,"tag":79,"props":7448,"children":7450},{"className":7449},[],[7451],{"type":23,"value":7411},{"type":23,"value":86},{"type":17,"tag":79,"props":7454,"children":7456},{"className":7455},[],[7457],{"type":23,"value":7418},{"type":23,"value":7459}," functions to create ndarray objects. These two functions are typically used to create arrays of specified shapes but do not initialize the array elements.",{"type":17,"tag":235,"props":7461,"children":7462},{},[7463,7474],{"type":17,"tag":36,"props":7464,"children":7465},{},[7466,7467,7472],{"type":23,"value":3191},{"type":17,"tag":79,"props":7468,"children":7470},{"className":7469},[],[7471],{"type":23,"value":7411},{"type":23,"value":7473}," function creates an array of a specified shape with uninitialized elements, meaning the elements will have random values.",{"type":17,"tag":36,"props":7475,"children":7476},{},[7477,7478,7483],{"type":23,"value":3191},{"type":17,"tag":79,"props":7479,"children":7481},{"className":7480},[],[7482],{"type":23,"value":7418},{"type":23,"value":7484}," function creates an array of a specified shape with all elements initialized to 0.",{"type":17,"tag":26,"props":7486,"children":7487},{},[7488],{"type":23,"value":7489},"Their syntax is as follows:",{"type":17,"tag":275,"props":7491,"children":7494},{"code":7492,"language":432,"meta":8,"className":7493},"# empty() function\nnumpy.empty(shape, dtype=float, order='C')\n\n# zeros() function\nnumpy.zeros(shape, dtype=float, order='C')\n",[527],[7495],{"type":17,"tag":79,"props":7496,"children":7497},{"__ignoreMap":8},[7498],{"type":23,"value":7492},{"type":17,"tag":26,"props":7500,"children":7501},{},[7502],{"type":23,"value":7165},{"type":17,"tag":235,"props":7504,"children":7505},{},[7506,7517,7526],{"type":17,"tag":36,"props":7507,"children":7508},{},[7509,7515],{"type":17,"tag":79,"props":7510,"children":7512},{"className":7511},[],[7513],{"type":23,"value":7514},"shape",{"type":23,"value":7516},": The shape of the array, which can be an integer or a tuple of integers. For example, 5 represents a one-dimensional array, and (2, 3) represents a two-dimensional array with 2 rows and 3 columns.",{"type":17,"tag":36,"props":7518,"children":7519},{},[7520,7525],{"type":17,"tag":79,"props":7521,"children":7523},{"className":7522},[],[7524],{"type":23,"value":6791},{"type":23,"value":7189},{"type":17,"tag":36,"props":7527,"children":7528},{},[7529,7534],{"type":17,"tag":79,"props":7530,"children":7532},{"className":7531},[],[7533],{"type":23,"value":7223},{"type":23,"value":7535},": Order (optional), the style of creating the array. C row-major (row direction), F column-major (column direction).",{"type":17,"tag":26,"props":7537,"children":7538},{},[7539,7541,7546,7547,7552],{"type":23,"value":7540},"Below is an example of creating arrays using the ",{"type":17,"tag":79,"props":7542,"children":7544},{"className":7543},[],[7545],{"type":23,"value":7411},{"type":23,"value":86},{"type":17,"tag":79,"props":7548,"children":7550},{"className":7549},[],[7551],{"type":23,"value":7418},{"type":23,"value":7553}," functions:",{"type":17,"tag":518,"props":7555,"children":7556},{":editable":520,":show-in-col":520,"max-height":521},[7557],{"type":17,"tag":275,"props":7558,"children":7561},{"code":7559,"language":432,"meta":8,"className":7560},"import numpy as np\n\n# Create a 2x3 uninitialized array using the empty() function\nempty_array = np.empty((2, 3))\nprint(\"Array created using empty():\\n\", empty_array)\n\n# Create a 2x3 array with all elements as 0 using the zeros() function\nzeros_array = np.zeros((2, 3))\nprint(\"Array created using zeros():\\n\", zeros_array)\n",[527],[7562],{"type":17,"tag":79,"props":7563,"children":7564},{"__ignoreMap":8},[7565],{"type":23,"value":7559},{"type":17,"tag":836,"props":7567,"children":7568},{},[7569],{"type":17,"tag":26,"props":7570,"children":7571},{},[7572,7576,7578,7583,7585,7591,7593,7598,7600,7605],{"type":17,"tag":2020,"props":7573,"children":7574},{},[7575],{"type":23,"value":2024},{"type":23,"value":7577},"\nIn addition to the ",{"type":17,"tag":79,"props":7579,"children":7581},{"className":7580},[],[7582],{"type":23,"value":7418},{"type":23,"value":7584}," function, Numpy also provides the ",{"type":17,"tag":79,"props":7586,"children":7588},{"className":7587},[],[7589],{"type":23,"value":7590},"ones()",{"type":23,"value":7592}," function to create an array of specified shape with all elements as 1. The syntax of the ",{"type":17,"tag":79,"props":7594,"children":7596},{"className":7595},[],[7597],{"type":23,"value":7590},{"type":23,"value":7599}," function is the same as that of the ",{"type":17,"tag":79,"props":7601,"children":7603},{"className":7602},[],[7604],{"type":23,"value":7418},{"type":23,"value":7606}," function, except that it initializes the array elements to 1.",{"type":17,"tag":26,"props":7608,"children":7609},{},[7610,7612,7617],{"type":23,"value":7611},"If you want more flexibility in initializing array elements, you can use the ",{"type":17,"tag":79,"props":7613,"children":7615},{"className":7614},[],[7616],{"type":23,"value":7425},{"type":23,"value":7618}," function, which allows you to specify the value to initialize the array elements. Its syntax is as follows:",{"type":17,"tag":275,"props":7620,"children":7623},{"code":7621,"language":432,"meta":8,"className":7622},"numpy.full(shape, fill_value, dtype=None, order='C')\n",[527],[7624],{"type":17,"tag":79,"props":7625,"children":7626},{"__ignoreMap":8},[7627],{"type":23,"value":7621},{"type":17,"tag":26,"props":7629,"children":7630},{},[7631],{"type":23,"value":7165},{"type":17,"tag":235,"props":7633,"children":7634},{},[7635,7645,7656,7665],{"type":17,"tag":36,"props":7636,"children":7637},{},[7638,7643],{"type":17,"tag":79,"props":7639,"children":7641},{"className":7640},[],[7642],{"type":23,"value":7514},{"type":23,"value":7644},": The shape of the array, which can be an integer or a tuple of integers.",{"type":17,"tag":36,"props":7646,"children":7647},{},[7648,7654],{"type":17,"tag":79,"props":7649,"children":7651},{"className":7650},[],[7652],{"type":23,"value":7653},"fill_value",{"type":23,"value":7655},": The value to initialize the array elements.",{"type":17,"tag":36,"props":7657,"children":7658},{},[7659,7664],{"type":17,"tag":79,"props":7660,"children":7662},{"className":7661},[],[7663],{"type":23,"value":6791},{"type":23,"value":7189},{"type":17,"tag":36,"props":7666,"children":7667},{},[7668,7673],{"type":17,"tag":79,"props":7669,"children":7671},{"className":7670},[],[7672],{"type":23,"value":7223},{"type":23,"value":7535},{"type":17,"tag":26,"props":7675,"children":7676},{},[7677,7679,7684],{"type":23,"value":7678},"Below is an example of creating an array using the ",{"type":17,"tag":79,"props":7680,"children":7682},{"className":7681},[],[7683],{"type":23,"value":7425},{"type":23,"value":2068},{"type":17,"tag":275,"props":7686,"children":7689},{"code":7687,"language":432,"meta":8,"className":7688},"import numpy as np\n# Create a 2x3 array with all elements as 5 using the full() function\nfull_array = np.full((2, 3), 5)\nprint(\"Array created using full():\\n\", full_array)\n\n# Output\n# Array created using full()\n# [[5 5 5]\n# [5 5 5]]\n",[527],[7690],{"type":17,"tag":79,"props":7691,"children":7692},{"__ignoreMap":8},[7693],{"type":23,"value":7687},{"type":17,"tag":1561,"props":7695,"children":7697},{"id":7696},"_2-creation-based-on-existing-arrays",[7698],{"type":23,"value":7699},"(2) Creation Based on Existing Arrays",{"type":17,"tag":26,"props":7701,"children":7702},{},[7703,7704,7709,7710,7715,7716,7721,7722,7727,7729,7735,7736,7742],{"type":23,"value":5438},{"type":17,"tag":79,"props":7705,"children":7707},{"className":7706},[],[7708],{"type":23,"value":7411},{"type":23,"value":1895},{"type":17,"tag":79,"props":7711,"children":7713},{"className":7712},[],[7714],{"type":23,"value":7418},{"type":23,"value":1895},{"type":17,"tag":79,"props":7717,"children":7719},{"className":7718},[],[7720],{"type":23,"value":7590},{"type":23,"value":3281},{"type":17,"tag":79,"props":7723,"children":7725},{"className":7724},[],[7726],{"type":23,"value":7425},{"type":23,"value":7728}," functions, Numpy also provides the ",{"type":17,"tag":79,"props":7730,"children":7732},{"className":7731},[],[7733],{"type":23,"value":7734},"zeros_like()",{"type":23,"value":86},{"type":17,"tag":79,"props":7737,"children":7739},{"className":7738},[],[7740],{"type":23,"value":7741},"full_like()",{"type":23,"value":7743}," functions to create arrays of the same shape as a specified array, with all elements initialized to 0 or a specified value. The syntax of these two functions is as follows:",{"type":17,"tag":275,"props":7745,"children":7748},{"code":7746,"language":432,"meta":8,"className":7747},"# zeros_like() function\nnumpy.zeros_like(a, dtype=None, order='K', subok=True)\n\n# full_like() function\nnumpy.full_like(a, fill_value, dtype=None, order='K', subok=True)\n",[527],[7749],{"type":17,"tag":79,"props":7750,"children":7751},{"__ignoreMap":8},[7752],{"type":23,"value":7746},{"type":17,"tag":26,"props":7754,"children":7755},{},[7756],{"type":23,"value":7165},{"type":17,"tag":235,"props":7758,"children":7759},{},[7760,7770,7779,7788,7798],{"type":17,"tag":36,"props":7761,"children":7762},{},[7763,7768],{"type":17,"tag":79,"props":7764,"children":7766},{"className":7765},[],[7767],{"type":23,"value":105},{"type":23,"value":7769},": The input array, used to specify the shape of the new array.",{"type":17,"tag":36,"props":7771,"children":7772},{},[7773,7778],{"type":17,"tag":79,"props":7774,"children":7776},{"className":7775},[],[7777],{"type":23,"value":7653},{"type":23,"value":7655},{"type":17,"tag":36,"props":7780,"children":7781},{},[7782,7787],{"type":17,"tag":79,"props":7783,"children":7785},{"className":7784},[],[7786],{"type":23,"value":6791},{"type":23,"value":7189},{"type":17,"tag":36,"props":7789,"children":7790},{},[7791,7796],{"type":17,"tag":79,"props":7792,"children":7794},{"className":7793},[],[7795],{"type":23,"value":7223},{"type":23,"value":7797},": Order (optional), the style of creating the array. C row-major (row direction), F column-major (column direction), K to keep the memory layout order of the input array.",{"type":17,"tag":36,"props":7799,"children":7800},{},[7801,7806,7807,7812,7814,7819],{"type":17,"tag":79,"props":7802,"children":7804},{"className":7803},[],[7805],{"type":23,"value":7234},{"type":23,"value":7236},{"type":17,"tag":79,"props":7808,"children":7810},{"className":7809},[],[7811],{"type":23,"value":2005},{"type":23,"value":7813},", returns subclass array; if ",{"type":17,"tag":79,"props":7815,"children":7817},{"className":7816},[],[7818],{"type":23,"value":2012},{"type":23,"value":7820},", returns base class array.",{"type":17,"tag":26,"props":7822,"children":7823},{},[7824,7825,7830,7831,7836],{"type":23,"value":7540},{"type":17,"tag":79,"props":7826,"children":7828},{"className":7827},[],[7829],{"type":23,"value":7734},{"type":23,"value":86},{"type":17,"tag":79,"props":7832,"children":7834},{"className":7833},[],[7835],{"type":23,"value":7741},{"type":23,"value":7553},{"type":17,"tag":518,"props":7838,"children":7839},{":editable":520,":show-in-col":520,"max-height":521},[7840],{"type":17,"tag":275,"props":7841,"children":7844},{"code":7842,"language":432,"meta":8,"className":7843},"import numpy as np\n\n# Create a sample array\na = np.array([[1, 2, 3], [4, 5, 6]])\n\n# Create an array of the same shape as 'a' with all elements as 0 using the zeros_like() function\nzeros_like_a = np.zeros_like(a)\nprint(\"Array of the same shape as 'a' with all elements as 0:\\n\", zeros_like_a)\n\n# Create an array of the same shape as 'a' with all elements as 7 using the full_like() function\nfull_like_a = np.full_like(a, fill_value=7)\nprint(\"Array of the same shape as 'a' with all elements as 7:\\n\", full_like_a)\n",[527],[7845],{"type":17,"tag":79,"props":7846,"children":7847},{"__ignoreMap":8},[7848],{"type":23,"value":7842},{"type":17,"tag":18,"props":7850,"children":7852},{"id":7851},"_3-properties-of-ndarray-objects",[7853],{"type":23,"value":7854},"3. Properties of ndarray Objects",{"type":17,"tag":26,"props":7856,"children":7857},{},[7858],{"type":23,"value":7859},"The number of dimensions of a Numpy array is called its rank. A one-dimensional array has a rank of 1, a two-dimensional array has a rank of 2, and so on. The shape of an array is called its dimension, and each dimension is called an axis. For example, the length of the first axis of a two-dimensional array is the number of rows, and the length of the second axis is the number of columns.",{"type":17,"tag":26,"props":7861,"children":7862},{},[7863],{"type":23,"value":7864},"The ndarray object in Numpy has the following important properties:",{"type":17,"tag":6768,"props":7866,"children":7867},{},[7868,7870,7899,7908,7951,7960,8002,8011,8038,8047,8052,8058,8064,8069,8082,8088,8093,8150,8155,8167,8182,8194,8209,8221,8236,8245,8260,8269,8285,8294,8300,8320,8332,8343,8352,8356,8414,8426,8438,8450,8461,8470,8474,8497,8508,8520,8526,8531,8544,8549,8554,8559,8571,8576,8594],{"type":23,"value":7869},"\ngraph TD\n    A[\"Properties of ndarray Objects\"]\n    A --> B[\"ndim\"]\n    A --> C[\"shape\"]\n    A --> D[\"size\"]\n    A --> E[\"dtype\"]\n\n",{"type":17,"tag":235,"props":7871,"children":7872},{},[7873],{"type":17,"tag":36,"props":7874,"children":7875},{},[7876,7882,7884,7890,7892,7897],{"type":17,"tag":79,"props":7877,"children":7879},{"className":7878},[],[7880],{"type":23,"value":7881},"ndarray.ndim",{"type":23,"value":7883},": The number of dimensions (rank) of the array, representing the number of axes. For example, a two-dimensional array has an ",{"type":17,"tag":79,"props":7885,"children":7887},{"className":7886},[],[7888],{"type":23,"value":7889},"ndim",{"type":23,"value":7891}," of 2, and a three-dimensional array has an ",{"type":17,"tag":79,"props":7893,"children":7895},{"className":7894},[],[7896],{"type":23,"value":7889},{"type":23,"value":7898}," of 3.",{"type":17,"tag":275,"props":7900,"children":7903},{"code":7901,"language":432,"meta":8,"className":7902},"import numpy as np\na = np.array([[1, 2, 3], [4, 5, 6]])\nprint(a.ndim)\n\n# Output\n#2\n",[527],[7904],{"type":17,"tag":79,"props":7905,"children":7906},{"__ignoreMap":8},[7907],{"type":23,"value":7901},{"type":17,"tag":235,"props":7909,"children":7910},{},[7911],{"type":17,"tag":36,"props":7912,"children":7913},{},[7914,7920,7922,7928,7930,7935,7937,7942,7944,7950],{"type":17,"tag":79,"props":7915,"children":7917},{"className":7916},[],[7918],{"type":23,"value":7919},"ndarray.shape",{"type":23,"value":7921},": The shape of the array, returning a tuple representing the size of the array in each dimension. For a two-dimensional array with ",{"type":17,"tag":79,"props":7923,"children":7925},{"className":7924},[],[7926],{"type":23,"value":7927},"n",{"type":23,"value":7929}," rows and ",{"type":17,"tag":79,"props":7931,"children":7933},{"className":7932},[],[7934],{"type":23,"value":6913},{"type":23,"value":7936}," columns, ",{"type":17,"tag":79,"props":7938,"children":7940},{"className":7939},[],[7941],{"type":23,"value":7514},{"type":23,"value":7943}," returns ",{"type":17,"tag":79,"props":7945,"children":7947},{"className":7946},[],[7948],{"type":23,"value":7949},"(n, m)",{"type":23,"value":1517},{"type":17,"tag":275,"props":7952,"children":7955},{"code":7953,"language":432,"meta":8,"className":7954},"print(a.shape) # Output: (2, 3)\n",[527],[7956],{"type":17,"tag":79,"props":7957,"children":7958},{"__ignoreMap":8},[7959],{"type":23,"value":7953},{"type":17,"tag":235,"props":7961,"children":7962},{},[7963],{"type":17,"tag":36,"props":7964,"children":7965},{},[7966,7972,7974,7979,7981,7987,7988,7994,7995,8001],{"type":17,"tag":79,"props":7967,"children":7969},{"className":7968},[],[7970],{"type":23,"value":7971},"ndarray.size",{"type":23,"value":7973},": The total number of elements in the array, equal to the product of the sizes of all dimensions in the ",{"type":17,"tag":79,"props":7975,"children":7977},{"className":7976},[],[7978],{"type":23,"value":7514},{"type":23,"value":7980}," tuple. For an array with a shape of ",{"type":17,"tag":79,"props":7982,"children":7984},{"className":7983},[],[7985],{"type":23,"value":7986},"(2, 3)",{"type":23,"value":1895},{"type":17,"tag":79,"props":7989,"children":7991},{"className":7990},[],[7992],{"type":23,"value":7993},"size",{"type":23,"value":2796},{"type":17,"tag":79,"props":7996,"children":7998},{"className":7997},[],[7999],{"type":23,"value":8000},"2 * 3 = 6",{"type":23,"value":1517},{"type":17,"tag":275,"props":8003,"children":8006},{"code":8004,"language":432,"meta":8,"className":8005},"print(a.size) # Output: 6\n",[527],[8007],{"type":17,"tag":79,"props":8008,"children":8009},{"__ignoreMap":8},[8010],{"type":23,"value":8004},{"type":17,"tag":235,"props":8012,"children":8013},{},[8014],{"type":17,"tag":36,"props":8015,"children":8016},{},[8017,8023,8025,8031,8032,8037],{"type":17,"tag":79,"props":8018,"children":8020},{"className":8019},[],[8021],{"type":23,"value":8022},"ndarray.dtype",{"type":23,"value":8024},": The data type of the elements in the array, such as ",{"type":17,"tag":79,"props":8026,"children":8028},{"className":8027},[],[8029],{"type":23,"value":8030},"int32",{"type":23,"value":1895},{"type":17,"tag":79,"props":8033,"children":8035},{"className":8034},[],[8036],{"type":23,"value":6744},{"type":23,"value":2171},{"type":17,"tag":275,"props":8039,"children":8042},{"code":8040,"language":432,"meta":8,"className":8041},"print(a.dtype) # Output: int64\n",[527],[8043],{"type":17,"tag":79,"props":8044,"children":8045},{"__ignoreMap":8},[8046],{"type":23,"value":8040},{"type":17,"tag":26,"props":8048,"children":8049},{},[8050],{"type":23,"value":8051},"These are the common properties of the ndarray object, which can help us better understand the structure and characteristics of arrays.",{"type":17,"tag":18,"props":8053,"children":8055},{"id":8054},"_4-array-operations",[8056],{"type":23,"value":8057},"4. Array Operations",{"type":17,"tag":96,"props":8059,"children":8061},{"id":8060},"_1-operations-on-multi-dimensional-arrays",[8062],{"type":23,"value":8063},"1. Operations on Multi-dimensional Arrays",{"type":17,"tag":26,"props":8065,"children":8066},{},[8067],{"type":23,"value":8068},"Numpy provides many mathematical functions for performing operations on arrays. Here, we mainly introduce two types:",{"type":17,"tag":235,"props":8070,"children":8071},{},[8072,8077],{"type":17,"tag":36,"props":8073,"children":8074},{},[8075],{"type":23,"value":8076},"Arithmetic functions: Used to perform basic arithmetic operations such as addition, subtraction, multiplication, and division.",{"type":17,"tag":36,"props":8078,"children":8079},{},[8080],{"type":23,"value":8081},"Trigonometric functions: Used to perform trigonometric operations such as sin, cos, and tan.",{"type":17,"tag":1561,"props":8083,"children":8085},{"id":8084},"_1-arithmetic-functions",[8086],{"type":23,"value":8087},"(1) Arithmetic Functions",{"type":17,"tag":26,"props":8089,"children":8090},{},[8091],{"type":23,"value":8092},"Numpy provides many arithmetic functions for performing basic arithmetic operations such as addition, subtraction, multiplication, and division. Below are some commonly used arithmetic functions:",{"type":17,"tag":235,"props":8094,"children":8095},{},[8096,8106,8117,8128,8139],{"type":17,"tag":36,"props":8097,"children":8098},{},[8099,8104],{"type":17,"tag":79,"props":8100,"children":8102},{"className":8101},[],[8103],{"type":23,"value":4112},{"type":23,"value":8105},": Used to perform addition.",{"type":17,"tag":36,"props":8107,"children":8108},{},[8109,8115],{"type":17,"tag":79,"props":8110,"children":8112},{"className":8111},[],[8113],{"type":23,"value":8114},"subtract()",{"type":23,"value":8116},": Used to perform subtraction.",{"type":17,"tag":36,"props":8118,"children":8119},{},[8120,8126],{"type":17,"tag":79,"props":8121,"children":8123},{"className":8122},[],[8124],{"type":23,"value":8125},"multiply()",{"type":23,"value":8127},": Used to perform multiplication.",{"type":17,"tag":36,"props":8129,"children":8130},{},[8131,8137],{"type":17,"tag":79,"props":8132,"children":8134},{"className":8133},[],[8135],{"type":23,"value":8136},"divide()",{"type":23,"value":8138},": Used to perform division.",{"type":17,"tag":36,"props":8140,"children":8141},{},[8142,8148],{"type":17,"tag":79,"props":8143,"children":8145},{"className":8144},[],[8146],{"type":23,"value":8147},"power()",{"type":23,"value":8149},": Used to perform exponentiation.",{"type":17,"tag":26,"props":8151,"children":8152},{},[8153],{"type":23,"value":8154},"Below are examples of these arithmetic functions. First, we need to define two arrays for demonstration:",{"type":17,"tag":518,"props":8156,"children":8157},{":editable":520,":show-in-col":520,"max-height":521},[8158],{"type":17,"tag":275,"props":8159,"children":8162},{"code":8160,"language":432,"meta":8,"className":8161},"import numpy as np\n\n# Define two arrays for demonstration\narray1 = np.array([10, 20, 30, 40])\narray2 = np.array([2, 4, 5, 8])\n",[527],[8163],{"type":17,"tag":79,"props":8164,"children":8165},{"__ignoreMap":8},[8166],{"type":23,"value":8160},{"type":17,"tag":32,"props":8168,"children":8169},{},[8170],{"type":17,"tag":36,"props":8171,"children":8172},{},[8173,8175,8180],{"type":23,"value":8174},"Addition: ",{"type":17,"tag":79,"props":8176,"children":8178},{"className":8177},[],[8179],{"type":23,"value":4112},{"type":23,"value":8181},", element-wise addition of array1 and array2",{"type":17,"tag":518,"props":8183,"children":8184},{":editable":520,":show-in-col":520,"max-height":521},[8185],{"type":17,"tag":275,"props":8186,"children":8189},{"code":8187,"language":432,"meta":8,"className":8188},"result_add = np.add(array1, array2)\nprint(\"Addition result:\", result_add)\n",[527],[8190],{"type":17,"tag":79,"props":8191,"children":8192},{"__ignoreMap":8},[8193],{"type":23,"value":8187},{"type":17,"tag":32,"props":8195,"children":8196},{"start":11},[8197],{"type":17,"tag":36,"props":8198,"children":8199},{},[8200,8202,8207],{"type":23,"value":8201},"Subtraction: ",{"type":17,"tag":79,"props":8203,"children":8205},{"className":8204},[],[8206],{"type":23,"value":8114},{"type":23,"value":8208},", element-wise subtraction of array2 from array1",{"type":17,"tag":518,"props":8210,"children":8211},{":editable":520,":show-in-col":520,"max-height":521},[8212],{"type":17,"tag":275,"props":8213,"children":8216},{"code":8214,"language":432,"meta":8,"className":8215},"result_subtract = np.subtract(array1, array2)\nprint(\"Subtraction result:\", result_subtract)\n",[527],[8217],{"type":17,"tag":79,"props":8218,"children":8219},{"__ignoreMap":8},[8220],{"type":23,"value":8214},{"type":17,"tag":32,"props":8222,"children":8223},{"start":375},[8224],{"type":17,"tag":36,"props":8225,"children":8226},{},[8227,8229,8234],{"type":23,"value":8228},"Multiplication: ",{"type":17,"tag":79,"props":8230,"children":8232},{"className":8231},[],[8233],{"type":23,"value":8125},{"type":23,"value":8235},", element-wise multiplication of array1 and array2",{"type":17,"tag":275,"props":8237,"children":8240},{"code":8238,"language":432,"meta":8,"className":8239},"result_multiply = np.multiply(array1, array2)\nprint(\"Multiplication result:\", result_multiply)\n\n# Output\n# Multiplication result: [ 20  80 150 320]\n",[527],[8241],{"type":17,"tag":79,"props":8242,"children":8243},{"__ignoreMap":8},[8244],{"type":23,"value":8238},{"type":17,"tag":32,"props":8246,"children":8247},{"start":1858},[8248],{"type":17,"tag":36,"props":8249,"children":8250},{},[8251,8253,8258],{"type":23,"value":8252},"Division: ",{"type":17,"tag":79,"props":8254,"children":8256},{"className":8255},[],[8257],{"type":23,"value":8136},{"type":23,"value":8259},", element-wise division of array1 by array2, resulting in floating-point numbers",{"type":17,"tag":275,"props":8261,"children":8264},{"code":8262,"language":432,"meta":8,"className":8263},"result_divide = np.divide(array1, array2)\nprint(\"Division result:\", result_divide)\n\n# Output\n# Division result: [5. 5. 6. 5.]\n",[527],[8265],{"type":17,"tag":79,"props":8266,"children":8267},{"__ignoreMap":8},[8268],{"type":23,"value":8262},{"type":17,"tag":32,"props":8270,"children":8272},{"start":8271},5,[8273],{"type":17,"tag":36,"props":8274,"children":8275},{},[8276,8278,8283],{"type":23,"value":8277},"Exponentiation: ",{"type":17,"tag":79,"props":8279,"children":8281},{"className":8280},[],[8282],{"type":23,"value":8147},{"type":23,"value":8284},", element-wise exponentiation with elements of array1 as the base and elements of array2 as the exponent",{"type":17,"tag":275,"props":8286,"children":8289},{"code":8287,"language":432,"meta":8,"className":8288},"result_power = np.power(array1, array2)\nprint(\"Exponentiation result:\", result_power)\n\n# Output\n# Exponentiation result: [          100        160000      24300000 6553600000000]\n",[527],[8290],{"type":17,"tag":79,"props":8291,"children":8292},{"__ignoreMap":8},[8293],{"type":23,"value":8287},{"type":17,"tag":1561,"props":8295,"children":8297},{"id":8296},"_2-mathematical-functions",[8298],{"type":23,"value":8299},"(2) Mathematical Functions",{"type":17,"tag":26,"props":8301,"children":8302},{},[8303,8305,8311,8313,8319],{"type":23,"value":8304},"Numpy includes a large number of mathematical functions for performing various mathematical operations. Here are two commonly used mathematical functions: the sum function ",{"type":17,"tag":79,"props":8306,"children":8308},{"className":8307},[],[8309],{"type":23,"value":8310},"sum()",{"type":23,"value":8312}," and the rounding function ",{"type":17,"tag":79,"props":8314,"children":8316},{"className":8315},[],[8317],{"type":23,"value":8318},"around()",{"type":23,"value":1517},{"type":17,"tag":32,"props":8321,"children":8322},{},[8323],{"type":17,"tag":36,"props":8324,"children":8325},{},[8326,8331],{"type":17,"tag":79,"props":8327,"children":8329},{"className":8328},[],[8330],{"type":23,"value":8310},{"type":23,"value":7140},{"type":17,"tag":26,"props":8333,"children":8334},{},[8335,8336,8341],{"type":23,"value":3191},{"type":17,"tag":79,"props":8337,"children":8339},{"className":8338},[],[8340],{"type":23,"value":8310},{"type":23,"value":8342}," function is used to calculate the sum of elements in an array. Its syntax is as follows:",{"type":17,"tag":275,"props":8344,"children":8347},{"code":8345,"language":432,"meta":8,"className":8346},"numpy.sum(a, axis=None, dtype=None, keepdims=False)\n",[527],[8348],{"type":17,"tag":79,"props":8349,"children":8350},{"__ignoreMap":8},[8351],{"type":23,"value":8345},{"type":17,"tag":26,"props":8353,"children":8354},{},[8355],{"type":23,"value":7165},{"type":17,"tag":235,"props":8357,"children":8358},{},[8359,8369,8388,8397],{"type":17,"tag":36,"props":8360,"children":8361},{},[8362,8367],{"type":17,"tag":79,"props":8363,"children":8365},{"className":8364},[],[8366],{"type":23,"value":105},{"type":23,"value":8368},": The input array.",{"type":17,"tag":36,"props":8370,"children":8371},{},[8372,8378,8380,8386],{"type":17,"tag":79,"props":8373,"children":8375},{"className":8374},[],[8376],{"type":23,"value":8377},"axis",{"type":23,"value":8379},": Specifies the axis along which to compute the sum. If ",{"type":17,"tag":79,"props":8381,"children":8383},{"className":8382},[],[8384],{"type":23,"value":8385},"None",{"type":23,"value":8387},", the sum of all elements is computed; if an integer, the sum along the specified axis is computed; if a tuple, the sum along multiple specified axes is computed.",{"type":17,"tag":36,"props":8389,"children":8390},{},[8391,8396],{"type":17,"tag":79,"props":8392,"children":8394},{"className":8393},[],[8395],{"type":23,"value":6791},{"type":23,"value":7189},{"type":17,"tag":36,"props":8398,"children":8399},{},[8400,8406,8407,8412],{"type":17,"tag":79,"props":8401,"children":8403},{"className":8402},[],[8404],{"type":23,"value":8405},"keepdims",{"type":23,"value":7200},{"type":17,"tag":79,"props":8408,"children":8410},{"className":8409},[],[8411],{"type":23,"value":2005},{"type":23,"value":8413},", the output array will have the same number of dimensions as the input array.",{"type":17,"tag":26,"props":8415,"children":8416},{},[8417,8419,8424],{"type":23,"value":8418},"Below is an example of using the ",{"type":17,"tag":79,"props":8420,"children":8422},{"className":8421},[],[8423],{"type":23,"value":8310},{"type":23,"value":8425}," function to calculate the sum of array elements:",{"type":17,"tag":518,"props":8427,"children":8428},{":editable":520,":show-in-col":520,"max-height":521},[8429],{"type":17,"tag":275,"props":8430,"children":8433},{"code":8431,"language":432,"meta":8,"className":8432},"import numpy as np\n\n# Create a two-dimensional array\na = np.array([[1, 2, 3], [4, 5, 6]])\n\n# Calculate the sum of all elements\ntotal_sum = np.sum(a)\nprint(\"Sum of all elements:\", total_sum)\n\n# Calculate the sum of each column\ncolumn_sum = np.sum(a, axis=0)\nprint(\"Sum of each column:\", column_sum)\n\n# Calculate the sum of each row\nrow_sum = np.sum(a, axis=1)\nprint(\"Sum of each row:\", row_sum)\n",[527],[8434],{"type":17,"tag":79,"props":8435,"children":8436},{"__ignoreMap":8},[8437],{"type":23,"value":8431},{"type":17,"tag":32,"props":8439,"children":8440},{"start":11},[8441],{"type":17,"tag":36,"props":8442,"children":8443},{},[8444,8449],{"type":17,"tag":79,"props":8445,"children":8447},{"className":8446},[],[8448],{"type":23,"value":8318},{"type":23,"value":7140},{"type":17,"tag":26,"props":8451,"children":8452},{},[8453,8454,8459],{"type":23,"value":3191},{"type":17,"tag":79,"props":8455,"children":8457},{"className":8456},[],[8458],{"type":23,"value":8318},{"type":23,"value":8460}," function is used to round the elements in an array to the specified number of decimal places. Its syntax is as follows:",{"type":17,"tag":275,"props":8462,"children":8465},{"code":8463,"language":432,"meta":8,"className":8464},"numpy.around(a, decimals=0)\n",[527],[8466],{"type":17,"tag":79,"props":8467,"children":8468},{"__ignoreMap":8},[8469],{"type":23,"value":8463},{"type":17,"tag":26,"props":8471,"children":8472},{},[8473],{"type":23,"value":7165},{"type":17,"tag":235,"props":8475,"children":8476},{},[8477,8486],{"type":17,"tag":36,"props":8478,"children":8479},{},[8480,8485],{"type":17,"tag":79,"props":8481,"children":8483},{"className":8482},[],[8484],{"type":23,"value":105},{"type":23,"value":8368},{"type":17,"tag":36,"props":8487,"children":8488},{},[8489,8495],{"type":17,"tag":79,"props":8490,"children":8492},{"className":8491},[],[8493],{"type":23,"value":8494},"decimals",{"type":23,"value":8496},": Specifies the number of decimal places. The default is 0, which means rounding to the nearest integer.",{"type":17,"tag":26,"props":8498,"children":8499},{},[8500,8501,8506],{"type":23,"value":8418},{"type":17,"tag":79,"props":8502,"children":8504},{"className":8503},[],[8505],{"type":23,"value":8318},{"type":23,"value":8507}," function to round the elements in an array to the specified number of decimal places:",{"type":17,"tag":518,"props":8509,"children":8510},{":editable":520,":show-in-col":520,"max-height":521},[8511],{"type":17,"tag":275,"props":8512,"children":8515},{"code":8513,"language":432,"meta":8,"className":8514},"import numpy as np\n\n# Create an array containing floating-point numbers\na = np.array([1.123, 2.456, 3.789, 4.101])\n\n# Round the elements to the nearest integer\nrounded_a = np.around(a)\nprint(\"Rounded to the nearest integer:\", rounded_a)\n\n# Round the elements to two decimal places\nrounded_a_2_decimals = np.around(a, decimals=2)\nprint(\"Rounded to two decimal places:\", rounded_a_2_decimals)\n",[527],[8516],{"type":17,"tag":79,"props":8517,"children":8518},{"__ignoreMap":8},[8519],{"type":23,"value":8513},{"type":17,"tag":96,"props":8521,"children":8523},{"id":8522},"_2-broadcasting",[8524],{"type":23,"value":8525},"2. Broadcasting",{"type":17,"tag":26,"props":8527,"children":8528},{},[8529],{"type":23,"value":8530},"Broadcasting is an important concept in Numpy that refers to arithmetic operations between arrays of different shapes. In broadcasting, Numpy automatically adjusts the shapes of the arrays so that they can be operated on together.",{"type":17,"tag":26,"props":8532,"children":8533},{},[8534,8536,8542],{"type":23,"value":8535},"If there are two arrays of the same shape (i.e., ",{"type":17,"tag":79,"props":8537,"children":8539},{"className":8538},[],[8540],{"type":23,"value":8541},"a.shape == b.shape",{"type":23,"value":8543},"), Numpy performs element-wise operations when computing them. For example, when performing addition on two arrays of the same shape, Numpy adds the corresponding elements of the two arrays to generate a new array.",{"type":17,"tag":26,"props":8545,"children":8546},{},[8547],{"type":23,"value":8548},"From the above example, we can see how to use Numpy to perform basic arithmetic operations on two arrays of the same shape. Each operation is performed element-wise, meaning that each element in the result array is obtained by performing the operation on the corresponding elements of the first and second arrays.",{"type":17,"tag":26,"props":8550,"children":8551},{},[8552],{"type":23,"value":8553},"However, more often than not, the shapes of the two arrays being operated on are not the same. In such cases, Numpy automatically adjusts the shapes of the arrays so that they can be operated on together. This mechanism is called \"broadcasting.\" Broadcasting involves broadcasting the smaller array to the size of the larger array so that their shapes match, and then performing element-wise operations.",{"type":17,"tag":26,"props":8555,"children":8556},{},[8557],{"type":23,"value":8558},"Below is an example of broadcasting:",{"type":17,"tag":518,"props":8560,"children":8561},{":editable":520,":show-in-col":520,"max-height":521},[8562],{"type":17,"tag":275,"props":8563,"children":8566},{"code":8564,"language":432,"meta":8,"className":8565},"import numpy as np\n\n# Create a 2x3 array\na = np.array([[1, 2, 3], [4, 5, 6]])\n\n# Create a 1x3 array\nb = np.array([10, 20, 30])\n\n# Perform addition on the two arrays\nresult = a + b\n\nprint(\"Array a:\\n\", a)\nprint(\"Array b:\\n\", b)\nprint(\"Result of a + b:\\n\", result)\n",[527],[8567],{"type":17,"tag":79,"props":8568,"children":8569},{"__ignoreMap":8},[8570],{"type":23,"value":8564},{"type":17,"tag":26,"props":8572,"children":8573},{},[8574],{"type":23,"value":8575},"The rules of broadcasting are as follows:",{"type":17,"tag":235,"props":8577,"children":8578},{},[8579,8584,8589],{"type":17,"tag":36,"props":8580,"children":8581},{},[8582],{"type":23,"value":8583},"Dimension matching: If the number of dimensions of the two arrays is different, the smaller array will have 1s prepended to its shape until the number of dimensions matches.",{"type":17,"tag":36,"props":8585,"children":8586},{},[8587],{"type":23,"value":8588},"Dimension compatibility: Starting from the last dimension, if the sizes of the two arrays are equal, or if one of the sizes is 1, the dimensions are considered compatible.",{"type":17,"tag":36,"props":8590,"children":8591},{},[8592],{"type":23,"value":8593},"Dimension expansion: If the shapes of the two arrays do not match in any dimension and neither dimension size is 1, an exception is raised.",{"type":17,"tag":6768,"props":8595,"children":8596},{},[8597,8599,8604,8609,8614,8623,8647,8652,8661,8673,8678,8687,8693,8699,8727,8739,8786,8795,8823,8852,8857,8869,8874,8886,8891,8903,8930,8939,8950,8959,8971,8996,9002,9007,9026,9031,9043,9085,9114,9123,9129,9135,9141,9153,9170,9179,9183,9217,9228,9240,9246,9266,9291,9311,9323,9340,9349,9353,9377,9388,9400,9413,9431,9440,9451,9463,9469,9474,9499,9511,9522,9531,9535,9559,9570,9582,9594,9605,9614,9618,9648,9659,9671,9677,9683,9701,9710,9714,9738,9749,9761,9767,9785,9794,9798,9832,9843,9855,9861,9874,9902,9914,9931,9940,9944,9995,10006,10018,10030,10047,10056,10067,10079,10091,10103,10129,10138,10142,10165,10176,10188,10194,10199,10212,10229,10238,10242,10321,10332,10344,10357,10374,10383,10394,10406,10419,10436,10445,10449,10513,10524,10536,10549,10566,10575,10579,10650,10661,10673,10686,10703,10712,10716,10790,10801,10813,10826,10843,10852,10863],{"type":23,"value":8598},"\ngraph TD\n    A[\"Broadcasting Rules\"]\n    A --> B[\"Dimension Matching\"]\n    A --> C[\"Dimension Compatibility\"]\n    A --> D[\"Dimension Expansion\"]\n\n",{"type":17,"tag":26,"props":8600,"children":8601},{},[8602],{"type":23,"value":8603},"In simple terms, for two arrays, if their shapes match in any dimension, or if one of the dimensions is 1, the arrays are considered compatible and can be broadcasted.",{"type":17,"tag":26,"props":8605,"children":8606},{},[8607],{"type":23,"value":8608},"Here are some examples to better understand the concept of broadcasting:",{"type":17,"tag":26,"props":8610,"children":8611},{},[8612],{"type":23,"value":8613},"Example 1: Adding a one-dimensional array to a two-dimensional array",{"type":17,"tag":275,"props":8615,"children":8618},{"code":8616,"language":432,"meta":8,"className":8617},"import numpy as np\n\n# Create a 3x3 two-dimensional array\na = np.arange(9).reshape(3, 3)\n# Create a one-dimensional array\nb = np.arange(3)\n\n# Perform broadcasting addition\nc = a + b\n\n# Output the result\nprint(c)\n\n# Output\n# [[ 0  2  4]\n# [ 3  5  7]\n# [ 6  8 10]]\n",[527],[8619],{"type":17,"tag":79,"props":8620,"children":8621},{"__ignoreMap":8},[8622],{"type":23,"value":8616},{"type":17,"tag":26,"props":8624,"children":8625},{},[8626,8627,8632,8634,8639,8641,8646],{"type":23,"value":4351},{"type":17,"tag":79,"props":8628,"children":8630},{"className":8629},[],[8631],{"type":23,"value":1070},{"type":23,"value":8633}," is a one-dimensional array with a shape of (3,). It is broadcasted to each row of ",{"type":17,"tag":79,"props":8635,"children":8637},{"className":8636},[],[8638],{"type":23,"value":105},{"type":23,"value":8640},", so that each element is added to the corresponding element in ",{"type":17,"tag":79,"props":8642,"children":8644},{"className":8643},[],[8645],{"type":23,"value":1070},{"type":23,"value":1517},{"type":17,"tag":26,"props":8648,"children":8649},{},[8650],{"type":23,"value":8651},"Example 2: Adding a scalar to an array",{"type":17,"tag":275,"props":8653,"children":8656},{"code":8654,"language":432,"meta":8,"className":8655},"import numpy as np\n\n# Create a one-dimensional array\na = np.array([1, 2, 3])\n\n# Add the scalar 2 to the array\nb = a + 2\n\n# Output the result\nprint(b)\n\n# Output\n# [3 4 5]\n",[527],[8657],{"type":17,"tag":79,"props":8658,"children":8659},{"__ignoreMap":8},[8660],{"type":23,"value":8654},{"type":17,"tag":26,"props":8662,"children":8663},{},[8664,8666,8671],{"type":23,"value":8665},"In this example, the scalar 2 is broadcasted to each element of ",{"type":17,"tag":79,"props":8667,"children":8669},{"className":8668},[],[8670],{"type":23,"value":105},{"type":23,"value":8672},", so that each element is incremented by 2.",{"type":17,"tag":26,"props":8674,"children":8675},{},[8676],{"type":23,"value":8677},"Example 3: Multiplying arrays of different shapes",{"type":17,"tag":275,"props":8679,"children":8682},{"code":8680,"language":432,"meta":8,"className":8681},"import numpy as np\n\n# Create a 2x3 two-dimensional array\na = np.array([[1, 2, 3], [4, 5, 6]])\n# Create a 1x3 two-dimensional array\nb = np.array([[1, 2, 3]])\n\n# Perform broadcasting multiplication\nc = a * b\n\n# Output the result\nprint(c)\n\n# Output\n# [[ 1  4  9]\n# [ 4 10 18]]\n",[527],[8683],{"type":17,"tag":79,"props":8684,"children":8685},{"__ignoreMap":8},[8686],{"type":23,"value":8680},{"type":17,"tag":18,"props":8688,"children":8690},{"id":8689},"_5-indexing-and-slicing",[8691],{"type":23,"value":8692},"5. Indexing and Slicing",{"type":17,"tag":96,"props":8694,"children":8696},{"id":8695},"_1-basic-indexing-and-slicing",[8697],{"type":23,"value":8698},"1. Basic Indexing and Slicing",{"type":17,"tag":26,"props":8700,"children":8701},{},[8702,8704,8710,8712,8717,8719,8725],{"type":23,"value":8703},"Similar to the list object in Python, the contents of an ndarray object in Numpy can be accessed and modified through indexing or slicing. The indexing of an ndarray object starts from 0, and elements can be accessed using square brackets ",{"type":17,"tag":79,"props":8705,"children":8707},{"className":8706},[],[8708],{"type":23,"value":8709},"[i, j]",{"type":23,"value":8711}," to access the element in the ",{"type":17,"tag":79,"props":8713,"children":8715},{"className":8714},[],[8716],{"type":23,"value":5351},{"type":23,"value":8718},"-th row and ",{"type":17,"tag":79,"props":8720,"children":8722},{"className":8721},[],[8723],{"type":23,"value":8724},"j",{"type":23,"value":8726},"-th column. Here are some examples:",{"type":17,"tag":518,"props":8728,"children":8729},{":editable":520,":show-in-col":520,"max-height":521},[8730],{"type":17,"tag":275,"props":8731,"children":8734},{"code":8732,"language":432,"meta":8,"className":8733},"import numpy as np\n\n# Create a 4x4 array\na = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]])\n\n# Access the subarray from the 2nd to the 3rd row and the 2nd to the 3rd column\nsub_array = a[1:3, 1:3]\nprint(\"Accessed subarray:\\n\", sub_array)\n\n# Modify the subarray from the 1st to the 2nd row and the 1st to the 2nd column\na[0:2, 0:2] = np.array([[0, 0], [0, 0]])\nprint(\"Modified array:\\n\", a)\n",[527],[8735],{"type":17,"tag":79,"props":8736,"children":8737},{"__ignoreMap":8},[8738],{"type":23,"value":8732},{"type":17,"tag":26,"props":8740,"children":8741},{},[8742,8744,8749,8751,8757,8759,8764,8765,8770,8772,8777,8779,8784],{"type":23,"value":8743},"Similar to slicing operations on lists in Python, we can also slice ndarray objects to obtain subarrays. In slicing operations, we can use ",{"type":17,"tag":79,"props":8745,"children":8747},{"className":8746},[],[8748],{"type":23,"value":920},{"type":23,"value":8750}," to represent the entire axis, and ",{"type":17,"tag":79,"props":8752,"children":8754},{"className":8753},[],[8755],{"type":23,"value":8756},"start:stop:step",{"type":23,"value":8758}," to represent the range from ",{"type":17,"tag":79,"props":8760,"children":8762},{"className":8761},[],[8763],{"type":23,"value":5698},{"type":23,"value":5700},{"type":17,"tag":79,"props":8766,"children":8768},{"className":8767},[],[8769],{"type":23,"value":5706},{"type":23,"value":8771}," (excluding the ",{"type":17,"tag":79,"props":8773,"children":8775},{"className":8774},[],[8776],{"type":23,"value":5706},{"type":23,"value":8778}," position), with a step size of ",{"type":17,"tag":79,"props":8780,"children":8782},{"className":8781},[],[8783],{"type":23,"value":5714},{"type":23,"value":8785},". Here are some examples:",{"type":17,"tag":275,"props":8787,"children":8790},{"code":8788,"language":432,"meta":8,"className":8789},"import numpy as np\n\n# Create a 2x3 ndarray\narr = np.array([[1, 2, 3], [4, 5, 6]])\n\n# Get the first row\nfirst_row = arr[0, :]\nprint(\"First row:\", first_row)\n\n# Output\n# First row: [1 2 3]\n\n# Get the second column\nsecond_column = arr[:, 1]\nprint(\"Second column:\", second_column)\n\n# Output\n# Second column: [2 5]\n\n# Get a subarray\nsub_array = arr[0:2, 1:3]\nprint(\"Subarray:\\n\", sub_array)\n\n# Output\n# Subarray:\n# [[2 3]\n# [5 6]]\n",[527],[8791],{"type":17,"tag":79,"props":8792,"children":8793},{"__ignoreMap":8},[8794],{"type":23,"value":8788},{"type":17,"tag":26,"props":8796,"children":8797},{},[8798,8800,8805,8807,8813,8815,8821],{"type":23,"value":8799},"If the start and stop values are not specified, ",{"type":17,"tag":79,"props":8801,"children":8803},{"className":8802},[],[8804],{"type":23,"value":920},{"type":23,"value":8806}," represents the entire axis. In slicing operations, we can also use negative indices to count from the end of the array. For example, ",{"type":17,"tag":79,"props":8808,"children":8810},{"className":8809},[],[8811],{"type":23,"value":8812},"-1",{"type":23,"value":8814}," represents the last element of the array, ",{"type":17,"tag":79,"props":8816,"children":8818},{"className":8817},[],[8819],{"type":23,"value":8820},"-2",{"type":23,"value":8822}," represents the second-to-last element, and so on.",{"type":17,"tag":26,"props":8824,"children":8825},{},[8826,8828,8834,8836,8842,8844,8850],{"type":23,"value":8827},"In slicing, we can also use ",{"type":17,"tag":79,"props":8829,"children":8831},{"className":8830},[],[8832],{"type":23,"value":8833},"...",{"type":23,"value":8835}," to represent selecting all dimensions of the array, even if the length of the selection tuple is the same as the number of dimensions of the array. For example, ",{"type":17,"tag":79,"props":8837,"children":8839},{"className":8838},[],[8840],{"type":23,"value":8841},"arr[..., 1]",{"type":23,"value":8843}," represents selecting the second column of the array, and ",{"type":17,"tag":79,"props":8845,"children":8847},{"className":8846},[],[8848],{"type":23,"value":8849},"arr[1, ...]",{"type":23,"value":8851}," represents selecting the second row of the array. For example:",{"type":17,"tag":26,"props":8853,"children":8854},{},[8855],{"type":23,"value":8856},"Example 1: Select the second column of the array",{"type":17,"tag":518,"props":8858,"children":8859},{":editable":520,":show-in-col":520,"max-height":521},[8860],{"type":17,"tag":275,"props":8861,"children":8864},{"code":8862,"language":432,"meta":8,"className":8863},"import numpy as np\n\n# Create a 3x3x3 example array\narr = np.arange(27).reshape(3, 3, 3)\n\nprint(\"Original array:\\n\", arr)\n\nexample1 = arr[..., 1]\n# Explanation: Select all dimensions of the array and select the second column\nprint(\"Example 1:\\n\", example1)\n",[527],[8865],{"type":17,"tag":79,"props":8866,"children":8867},{"__ignoreMap":8},[8868],{"type":23,"value":8862},{"type":17,"tag":26,"props":8870,"children":8871},{},[8872],{"type":23,"value":8873},"Example 2: Select the last element of the array",{"type":17,"tag":518,"props":8875,"children":8876},{":editable":520,":show-in-col":520,"max-height":521},[8877],{"type":17,"tag":275,"props":8878,"children":8881},{"code":8879,"language":432,"meta":8,"className":8880},"import numpy as np\n\n# Create a 3x3x3 example array\narr = np.arange(27).reshape(3, 3, 3)\n\nprint(\"Original array:\\n\", arr)\n\nexample3 = arr[..., -1]\n# Explanation: Select all dimensions of the array and select the last element\nprint(\"Example 2:\\n\", example3)\n",[527],[8882],{"type":17,"tag":79,"props":8883,"children":8884},{"__ignoreMap":8},[8885],{"type":23,"value":8879},{"type":17,"tag":26,"props":8887,"children":8888},{},[8889],{"type":23,"value":8890},"Example 3: Select the first plane of the array",{"type":17,"tag":518,"props":8892,"children":8893},{":editable":520,":show-in-col":520,"max-height":521},[8894],{"type":17,"tag":275,"props":8895,"children":8898},{"code":8896,"language":432,"meta":8,"className":8897},"import numpy as np\n\n# Create a 3x3x3 example array\narr = np.arange(27).reshape(3, 3, 3)\n\nprint(\"Original array:\\n\", arr)\n\nexample4 = arr[0, ...]\n# Explanation: Select the first plane of the array and select all dimensions\nprint(\"Example 3:\\n\", example4)\n",[527],[8899],{"type":17,"tag":79,"props":8900,"children":8901},{"__ignoreMap":8},[8902],{"type":23,"value":8896},{"type":17,"tag":26,"props":8904,"children":8905},{},[8906,8908,8914,8916,8922,8924,8929],{"type":23,"value":8907},"In addition to directly using the ",{"type":17,"tag":79,"props":8909,"children":8911},{"className":8910},[],[8912],{"type":23,"value":8913},"[start:stop:step]",{"type":23,"value":8915}," method for slicing, we can also use the ",{"type":17,"tag":79,"props":8917,"children":8919},{"className":8918},[],[8920],{"type":23,"value":8921},"slice()",{"type":23,"value":8923}," function to create slice objects and then use these slice objects in the array. The syntax of the ",{"type":17,"tag":79,"props":8925,"children":8927},{"className":8926},[],[8928],{"type":23,"value":8921},{"type":23,"value":5672},{"type":17,"tag":275,"props":8931,"children":8934},{"code":8932,"language":432,"meta":8,"className":8933},"slice(start, stop, step)\n",[527],[8935],{"type":17,"tag":79,"props":8936,"children":8937},{"__ignoreMap":8},[8938],{"type":23,"value":8932},{"type":17,"tag":26,"props":8940,"children":8941},{},[8942,8943,8948],{"type":23,"value":8418},{"type":17,"tag":79,"props":8944,"children":8946},{"className":8945},[],[8947],{"type":23,"value":8921},{"type":23,"value":8949}," function to create slice objects:",{"type":17,"tag":275,"props":8951,"children":8954},{"code":8952,"language":432,"meta":8,"className":8953},"import numpy as np\n\n# Create a 4x4 ndarray\narr = np.array([[1, 2, 3, 4], \n                [5, 6, 7, 8], \n                [9, 10, 11, 12], \n                [13, 14, 15, 16]])\n\n# Use the slice() function to create slice objects\nfirst_slice = slice(1, 3)\nsecond_slice = slice(1, 3)\n\n# Use the slice objects to get a subarray\nsub_array = arr[first_slice, second_slice]\nprint(\"Subarray created using slice() function:\\n\", sub_array)\n\n# Output\n# Subarray created using slice() function:\n# [[ 6  7]\n# [10 11]]\n",[527],[8955],{"type":17,"tag":79,"props":8956,"children":8957},{"__ignoreMap":8},[8958],{"type":23,"value":8952},{"type":17,"tag":26,"props":8960,"children":8961},{},[8962,8964,8969],{"type":23,"value":8963},"Using the ",{"type":17,"tag":79,"props":8965,"children":8967},{"className":8966},[],[8968],{"type":23,"value":8921},{"type":23,"value":8970}," function to create slice objects allows for more flexible slicing operations on arrays. The advantages include:",{"type":17,"tag":235,"props":8972,"children":8973},{},[8974,8986,8991],{"type":17,"tag":36,"props":8975,"children":8976},{},[8977,8979,8984],{"type":23,"value":8978},"Higher readability: Using the ",{"type":17,"tag":79,"props":8980,"children":8982},{"className":8981},[],[8983],{"type":23,"value":8921},{"type":23,"value":8985}," function can make the code more readable, especially when the slicing range is complex. By naming the slice objects, the intent of the slicing can be more clearly expressed.",{"type":17,"tag":36,"props":8987,"children":8988},{},[8989],{"type":23,"value":8990},"Code reusability: Slice objects can be reused, avoiding the need to repeatedly write the same slicing range in multiple places. For example, the same slice object can be used on multiple arrays.",{"type":17,"tag":36,"props":8992,"children":8993},{},[8994],{"type":23,"value":8995},"Flexibility: Slice objects can be dynamically created, allowing the slicing range to be adjusted based on different conditions without modifying the array access code.",{"type":17,"tag":96,"props":8997,"children":8999},{"id":8998},"_2-boolean-indexing",[9000],{"type":23,"value":9001},"2. Boolean Indexing",{"type":17,"tag":26,"props":9003,"children":9004},{},[9005],{"type":23,"value":9006},"In Numpy, we can use boolean indexing to access elements in an array that meet specific conditions.",{"type":17,"tag":26,"props":9008,"children":9009},{},[9010,9012,9017,9019,9024],{"type":23,"value":9011},"Boolean indexing accesses elements in an array using a boolean array, which must have the same length as the array. In boolean indexing, ",{"type":17,"tag":79,"props":9013,"children":9015},{"className":9014},[],[9016],{"type":23,"value":2005},{"type":23,"value":9018}," indicates that the element is retained, and ",{"type":17,"tag":79,"props":9020,"children":9022},{"className":9021},[],[9023],{"type":23,"value":2012},{"type":23,"value":9025}," indicates that the element is discarded. In simple terms, boolean indexing uses boolean operations (such as comparison operations) to obtain elements that meet specified conditions.",{"type":17,"tag":26,"props":9027,"children":9028},{},[9029],{"type":23,"value":9030},"Below is an example of using boolean indexing to access elements in an array:",{"type":17,"tag":518,"props":9032,"children":9033},{":editable":520,":show-in-col":520,"max-height":521},[9034],{"type":17,"tag":275,"props":9035,"children":9038},{"code":9036,"language":432,"meta":8,"className":9037},"import numpy as np\n\n# Create an array\na = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n# Create a boolean array with the condition that elements are greater than 5\nbool_index = a > 5\n\n# Use boolean indexing to access elements in the array\nfiltered_a = a[bool_index]\nprint(\"Elements greater than 5:\", filtered_a)\n",[527],[9039],{"type":17,"tag":79,"props":9040,"children":9041},{"__ignoreMap":8},[9042],{"type":23,"value":9036},{"type":17,"tag":26,"props":9044,"children":9045},{},[9046,9048,9053,9055,9061,9063,9068,9070,9076,9078,9083],{"type":23,"value":9047},"In this example, we first create an array ",{"type":17,"tag":79,"props":9049,"children":9051},{"className":9050},[],[9052],{"type":23,"value":105},{"type":23,"value":9054},", then create a boolean array ",{"type":17,"tag":79,"props":9056,"children":9058},{"className":9057},[],[9059],{"type":23,"value":9060},"bool_index",{"type":23,"value":9062}," where the elements are whether the elements in ",{"type":17,"tag":79,"props":9064,"children":9066},{"className":9065},[],[9067],{"type":23,"value":105},{"type":23,"value":9069}," are greater than 5. Finally, we use boolean indexing ",{"type":17,"tag":79,"props":9071,"children":9073},{"className":9072},[],[9074],{"type":23,"value":9075},"a[bool_index]",{"type":23,"value":9077}," to access the elements in ",{"type":17,"tag":79,"props":9079,"children":9081},{"className":9080},[],[9082],{"type":23,"value":105},{"type":23,"value":9084}," that are greater than 5.",{"type":17,"tag":26,"props":9086,"children":9087},{},[9088,9090,9096,9098,9104,9106,9112],{"type":23,"value":9089},"In addition to using comparison operators, we can also use logical operators to combine multiple conditions. For example, we can use ",{"type":17,"tag":79,"props":9091,"children":9093},{"className":9092},[],[9094],{"type":23,"value":9095},"&",{"type":23,"value":9097}," for logical AND, ",{"type":17,"tag":79,"props":9099,"children":9101},{"className":9100},[],[9102],{"type":23,"value":9103},"|",{"type":23,"value":9105}," for logical OR, and ",{"type":17,"tag":79,"props":9107,"children":9109},{"className":9108},[],[9110],{"type":23,"value":9111},"~",{"type":23,"value":9113}," for logical NOT. Below is an example of using logical operators to combine multiple conditions:",{"type":17,"tag":275,"props":9115,"children":9118},{"code":9116,"language":432,"meta":8,"className":9117},"import numpy as np\n\n# Create an array\na = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n# Use logical operators to combine multiple conditions\n# Condition: elements greater than 3 and less than 8\nbool_index = (a > 3) & (a \u003C 8)\n\n# Use boolean indexing to access elements in the array\nfiltered_a = a[bool_index]\nprint(\"Elements greater than 3 and less than 8:\", filtered_a)\n\n# Condition: elements less than 3 or greater than 8\nbool_index_or = (a \u003C 3) | (a > 8)\n\n# Use boolean indexing to access elements in the array\nfiltered_a_or = a[bool_index_or]\nprint(\"Elements less than 3 or greater than 8:\", filtered_a_or)\n\n# Output\n# Elements greater than 3 and less than 8: [4 5 6 7]\n# Elements less than 3 or greater than 8: [ 1  2  9 10]\n",[527],[9119],{"type":17,"tag":79,"props":9120,"children":9121},{"__ignoreMap":8},[9122],{"type":23,"value":9116},{"type":17,"tag":18,"props":9124,"children":9126},{"id":9125},"_6-array-operations",[9127],{"type":23,"value":9128},"6. Array Operations",{"type":17,"tag":96,"props":9130,"children":9132},{"id":9131},"_1-modifying-array-shapes",[9133],{"type":23,"value":9134},"1. Modifying Array Shapes",{"type":17,"tag":1561,"props":9136,"children":9138},{"id":9137},"_1-simple-array-shape-modification",[9139],{"type":23,"value":9140},"(1) Simple Array Shape Modification",{"type":17,"tag":26,"props":9142,"children":9143},{},[9144,9146,9152],{"type":23,"value":9145},"In Numpy, we can change the dimensions of an array by modifying its shape. Numpy provides several methods to modify the shape of an array, with the most commonly used being the ",{"type":17,"tag":79,"props":9147,"children":9149},{"className":9148},[],[9150],{"type":23,"value":9151},"reshape()",{"type":23,"value":5762},{"type":17,"tag":26,"props":9154,"children":9155},{},[9156,9157,9162,9164,9169],{"type":23,"value":3191},{"type":17,"tag":79,"props":9158,"children":9160},{"className":9159},[],[9161],{"type":23,"value":9151},{"type":23,"value":9163}," function is used to modify the shape of an array and returns a new array, while the shape of the original array remains unchanged. The syntax of the ",{"type":17,"tag":79,"props":9165,"children":9167},{"className":9166},[],[9168],{"type":23,"value":9151},{"type":23,"value":5672},{"type":17,"tag":275,"props":9171,"children":9174},{"code":9172,"language":432,"meta":8,"className":9173},"numpy.reshape(a, newshape, order='C')\n",[527],[9175],{"type":17,"tag":79,"props":9176,"children":9177},{"__ignoreMap":8},[9178],{"type":23,"value":9172},{"type":17,"tag":26,"props":9180,"children":9181},{},[9182],{"type":23,"value":7165},{"type":17,"tag":235,"props":9184,"children":9185},{},[9186,9196,9207],{"type":17,"tag":36,"props":9187,"children":9188},{},[9189,9194],{"type":17,"tag":79,"props":9190,"children":9192},{"className":9191},[],[9193],{"type":23,"value":105},{"type":23,"value":9195},": The array to be reshaped.",{"type":17,"tag":36,"props":9197,"children":9198},{},[9199,9205],{"type":17,"tag":79,"props":9200,"children":9202},{"className":9201},[],[9203],{"type":23,"value":9204},"newshape",{"type":23,"value":9206},": The new shape, which can be an integer or a tuple of integers.",{"type":17,"tag":36,"props":9208,"children":9209},{},[9210,9215],{"type":17,"tag":79,"props":9211,"children":9213},{"className":9212},[],[9214],{"type":23,"value":7223},{"type":23,"value":9216},": Order (optional), the style of creating the array. C row-major (row direction), F column-major (column direction), A any direction (default), K as they appear in memory.",{"type":17,"tag":26,"props":9218,"children":9219},{},[9220,9221,9226],{"type":23,"value":8418},{"type":17,"tag":79,"props":9222,"children":9224},{"className":9223},[],[9225],{"type":23,"value":9151},{"type":23,"value":9227}," function to modify the shape of an array:",{"type":17,"tag":518,"props":9229,"children":9230},{":editable":520,":show-in-col":520,"max-height":521},[9231],{"type":17,"tag":275,"props":9232,"children":9235},{"code":9233,"language":432,"meta":8,"className":9234},"import numpy as np\n\n# Create a one-dimensional array\na = np.array([1, 2, 3, 4, 5, 6])\n\n# Use the reshape() function to modify it to a 2x3 two-dimensional array\nb = np.reshape(a, (2, 3))\n\nprint(\"Original array:\")\nprint(a)\n\nprint(\"Reshaped array:\")\nprint(b)\n",[527],[9236],{"type":17,"tag":79,"props":9237,"children":9238},{"__ignoreMap":8},[9239],{"type":23,"value":9233},{"type":17,"tag":1561,"props":9241,"children":9243},{"id":9242},"_2-transposing-arrays",[9244],{"type":23,"value":9245},"(2) Transposing Arrays",{"type":17,"tag":26,"props":9247,"children":9248},{},[9249,9251,9257,9258,9264],{"type":23,"value":9250},"In Numpy, the ",{"type":17,"tag":79,"props":9252,"children":9254},{"className":9253},[],[9255],{"type":23,"value":9256},"transpose()",{"type":23,"value":5897},{"type":17,"tag":79,"props":9259,"children":9261},{"className":9260},[],[9262],{"type":23,"value":9263},"T",{"type":23,"value":9265}," attribute are commonly used to transpose arrays.",{"type":17,"tag":235,"props":9267,"children":9268},{},[9269,9280],{"type":17,"tag":36,"props":9270,"children":9271},{},[9272,9273,9278],{"type":23,"value":3191},{"type":17,"tag":79,"props":9274,"children":9276},{"className":9275},[],[9277],{"type":23,"value":9256},{"type":23,"value":9279}," function is used to swap the dimensions of an array and returns a new array, while the shape of the original array remains unchanged.",{"type":17,"tag":36,"props":9281,"children":9282},{},[9283,9284,9289],{"type":23,"value":3191},{"type":17,"tag":79,"props":9285,"children":9287},{"className":9286},[],[9288],{"type":23,"value":9263},{"type":23,"value":9290}," attribute is used to transpose an array and returns a new array, while the shape of the original array remains unchanged.",{"type":17,"tag":26,"props":9292,"children":9293},{},[9294,9296,9302,9303,9309],{"type":23,"value":9295},"Additionally, the ",{"type":17,"tag":79,"props":9297,"children":9299},{"className":9298},[],[9300],{"type":23,"value":9301},"rollaxis()",{"type":23,"value":5897},{"type":17,"tag":79,"props":9304,"children":9306},{"className":9305},[],[9307],{"type":23,"value":9308},"swapaxes()",{"type":23,"value":9310}," function can be used to swap the dimensions of an array.",{"type":17,"tag":32,"props":9312,"children":9313},{},[9314],{"type":17,"tag":36,"props":9315,"children":9316},{},[9317,9322],{"type":17,"tag":79,"props":9318,"children":9320},{"className":9319},[],[9321],{"type":23,"value":9256},{"type":23,"value":7140},{"type":17,"tag":26,"props":9324,"children":9325},{},[9326,9327,9332,9334,9339],{"type":23,"value":3191},{"type":17,"tag":79,"props":9328,"children":9330},{"className":9329},[],[9331],{"type":23,"value":9256},{"type":23,"value":9333}," function is used to swap the dimensions of an array and returns a new array, while the shape of the original array remains unchanged. The syntax of the ",{"type":17,"tag":79,"props":9335,"children":9337},{"className":9336},[],[9338],{"type":23,"value":9256},{"type":23,"value":5672},{"type":17,"tag":275,"props":9341,"children":9344},{"code":9342,"language":432,"meta":8,"className":9343},"numpy.transpose(a, axes=None)\n",[527],[9345],{"type":17,"tag":79,"props":9346,"children":9347},{"__ignoreMap":8},[9348],{"type":23,"value":9342},{"type":17,"tag":26,"props":9350,"children":9351},{},[9352],{"type":23,"value":7165},{"type":17,"tag":235,"props":9354,"children":9355},{},[9356,9366],{"type":17,"tag":36,"props":9357,"children":9358},{},[9359,9364],{"type":17,"tag":79,"props":9360,"children":9362},{"className":9361},[],[9363],{"type":23,"value":105},{"type":23,"value":9365},": The array whose dimensions are to be swapped.",{"type":17,"tag":36,"props":9367,"children":9368},{},[9369,9375],{"type":17,"tag":79,"props":9370,"children":9372},{"className":9371},[],[9373],{"type":23,"value":9374},"axes",{"type":23,"value":9376},": The new order of the dimensions. If not specified, the order of the dimensions will be reversed.",{"type":17,"tag":26,"props":9378,"children":9379},{},[9380,9381,9386],{"type":23,"value":8418},{"type":17,"tag":79,"props":9382,"children":9384},{"className":9383},[],[9385],{"type":23,"value":9256},{"type":23,"value":9387}," function to swap the dimensions of an array:",{"type":17,"tag":518,"props":9389,"children":9390},{":editable":520,":show-in-col":520,"max-height":521},[9391],{"type":17,"tag":275,"props":9392,"children":9395},{"code":9393,"language":432,"meta":8,"className":9394},"import numpy as np\n\n# Create a two-dimensional array\na = np.array([[1, 2, 3], [4, 5, 6]])\n\n# Use the transpose() function to swap the dimensions of the array\nb = np.transpose(a)\n\nprint(\"Original array:\")\nprint(a)\n\nprint(\"Array with swapped dimensions:\")\nprint(b)\n",[527],[9396],{"type":17,"tag":79,"props":9397,"children":9398},{"__ignoreMap":8},[9399],{"type":23,"value":9393},{"type":17,"tag":32,"props":9401,"children":9402},{"start":11},[9403],{"type":17,"tag":36,"props":9404,"children":9405},{},[9406,9411],{"type":17,"tag":79,"props":9407,"children":9409},{"className":9408},[],[9410],{"type":23,"value":9263},{"type":23,"value":9412}," Attribute",{"type":17,"tag":26,"props":9414,"children":9415},{},[9416,9417,9422,9424,9429],{"type":23,"value":3191},{"type":17,"tag":79,"props":9418,"children":9420},{"className":9419},[],[9421],{"type":23,"value":9263},{"type":23,"value":9423}," attribute is used to transpose an array and returns a new array, while the shape of the original array remains unchanged. The syntax of the ",{"type":17,"tag":79,"props":9425,"children":9427},{"className":9426},[],[9428],{"type":23,"value":9263},{"type":23,"value":9430}," attribute is as follows:",{"type":17,"tag":275,"props":9432,"children":9435},{"code":9433,"language":432,"meta":8,"className":9434},"numpy.ndarray.T\n",[527],[9436],{"type":17,"tag":79,"props":9437,"children":9438},{"__ignoreMap":8},[9439],{"type":23,"value":9433},{"type":17,"tag":26,"props":9441,"children":9442},{},[9443,9444,9449],{"type":23,"value":8418},{"type":17,"tag":79,"props":9445,"children":9447},{"className":9446},[],[9448],{"type":23,"value":9263},{"type":23,"value":9450}," attribute to transpose an array:",{"type":17,"tag":518,"props":9452,"children":9453},{":editable":520,":show-in-col":520,"max-height":521},[9454],{"type":17,"tag":275,"props":9455,"children":9458},{"code":9456,"language":432,"meta":8,"className":9457},"import numpy as np\n\n# Create a two-dimensional array\narray = np.array([[1, 2, 3], [4, 5, 6]])\n\n# Use the T attribute to transpose the array\ntransposed_array = array.T\n\nprint(\"Original array:\")\nprint(array)\n\nprint(\"Transposed array:\")\nprint(transposed_array)\n",[527],[9459],{"type":17,"tag":79,"props":9460,"children":9461},{"__ignoreMap":8},[9462],{"type":23,"value":9456},{"type":17,"tag":1561,"props":9464,"children":9466},{"id":9465},"_3-adding-or-removing-array-dimensions",[9467],{"type":23,"value":9468},"(3) Adding or Removing Array Dimensions",{"type":17,"tag":26,"props":9470,"children":9471},{},[9472],{"type":23,"value":9473},"In Numpy, the following functions are commonly used to add or remove array dimensions:",{"type":17,"tag":235,"props":9475,"children":9476},{},[9477,9488],{"type":17,"tag":36,"props":9478,"children":9479},{},[9480,9486],{"type":17,"tag":79,"props":9481,"children":9483},{"className":9482},[],[9484],{"type":23,"value":9485},"expand_dims()",{"type":23,"value":9487},": Used to insert a new axis at a specified position, returning a new array.",{"type":17,"tag":36,"props":9489,"children":9490},{},[9491,9497],{"type":17,"tag":79,"props":9492,"children":9494},{"className":9493},[],[9495],{"type":23,"value":9496},"squeeze()",{"type":23,"value":9498},": Used to remove single-dimensional entries from the shape of an array, returning a new array.",{"type":17,"tag":32,"props":9500,"children":9501},{},[9502],{"type":17,"tag":36,"props":9503,"children":9504},{},[9505,9510],{"type":17,"tag":79,"props":9506,"children":9508},{"className":9507},[],[9509],{"type":23,"value":9485},{"type":23,"value":7140},{"type":17,"tag":26,"props":9512,"children":9513},{},[9514,9515,9520],{"type":23,"value":3191},{"type":17,"tag":79,"props":9516,"children":9518},{"className":9517},[],[9519],{"type":23,"value":9485},{"type":23,"value":9521}," function is used to insert a new axis at a specified position, thereby expanding the dimensions of an array. This is useful when adjusting the shape of an array to match the input requirements of specific operations or functions.",{"type":17,"tag":275,"props":9523,"children":9526},{"code":9524,"language":432,"meta":8,"className":9525},"numpy.expand_dims(array, axis)\n",[527],[9527],{"type":17,"tag":79,"props":9528,"children":9529},{"__ignoreMap":8},[9530],{"type":23,"value":9524},{"type":17,"tag":26,"props":9532,"children":9533},{},[9534],{"type":23,"value":7165},{"type":17,"tag":235,"props":9536,"children":9537},{},[9538,9549],{"type":17,"tag":36,"props":9539,"children":9540},{},[9541,9547],{"type":17,"tag":79,"props":9542,"children":9544},{"className":9543},[],[9545],{"type":23,"value":9546},"array",{"type":23,"value":9548},": The array in which to insert the new axis.",{"type":17,"tag":36,"props":9550,"children":9551},{},[9552,9557],{"type":17,"tag":79,"props":9553,"children":9555},{"className":9554},[],[9556],{"type":23,"value":8377},{"type":23,"value":9558},": The position of the new axis.",{"type":17,"tag":26,"props":9560,"children":9561},{},[9562,9563,9568],{"type":23,"value":8418},{"type":17,"tag":79,"props":9564,"children":9566},{"className":9565},[],[9567],{"type":23,"value":9485},{"type":23,"value":9569}," function to insert a new axis at a specified position:",{"type":17,"tag":518,"props":9571,"children":9572},{":editable":520,":show-in-col":520,"max-height":521},[9573],{"type":17,"tag":275,"props":9574,"children":9577},{"code":9575,"language":432,"meta":8,"className":9576},"import numpy as np\n\n# Original one-dimensional array with shape (3,)\narray1 = np.array([1, 2, 3])\nprint(\"Original array shape:\", array1.shape)\nprint(\"Original array:\\n\", array1)\n\n# Use expand_dims() to insert a new axis at the first position (axis 0)\nexpanded_array = np.expand_dims(array1, axis=0)\nprint(\"\\nShape after inserting new axis at axis 0:\", expanded_array.shape)\nprint(\"Expanded array:\\n\", expanded_array)\n\n# Use expand_dims() to insert a new axis at the last position (axis 1)\nexpanded_array_2 = np.expand_dims(array1, axis=1)\nprint(\"\\nShape after inserting new axis at axis 1:\", expanded_array_2.shape)\nprint(\"Expanded array:\\n\", expanded_array_2)\n",[527],[9578],{"type":17,"tag":79,"props":9579,"children":9580},{"__ignoreMap":8},[9581],{"type":23,"value":9575},{"type":17,"tag":32,"props":9583,"children":9584},{"start":11},[9585],{"type":17,"tag":36,"props":9586,"children":9587},{},[9588,9593],{"type":17,"tag":79,"props":9589,"children":9591},{"className":9590},[],[9592],{"type":23,"value":9496},{"type":23,"value":7140},{"type":17,"tag":26,"props":9595,"children":9596},{},[9597,9598,9603],{"type":23,"value":3191},{"type":17,"tag":79,"props":9599,"children":9601},{"className":9600},[],[9602],{"type":23,"value":9496},{"type":23,"value":9604}," function is used to remove single-dimensional entries from the shape of an array, returning a new array. This is useful when dealing with arrays, such as removing unnecessary single-dimensional entries to simplify the shape of the array.",{"type":17,"tag":275,"props":9606,"children":9609},{"code":9607,"language":432,"meta":8,"className":9608},"numpy.squeeze(array, axis=None)\n",[527],[9610],{"type":17,"tag":79,"props":9611,"children":9612},{"__ignoreMap":8},[9613],{"type":23,"value":9607},{"type":17,"tag":26,"props":9615,"children":9616},{},[9617],{"type":23,"value":7165},{"type":17,"tag":235,"props":9619,"children":9620},{},[9621,9631],{"type":17,"tag":36,"props":9622,"children":9623},{},[9624,9629],{"type":17,"tag":79,"props":9625,"children":9627},{"className":9626},[],[9628],{"type":23,"value":9546},{"type":23,"value":9630},": The array from which to remove single-dimensional entries.",{"type":17,"tag":36,"props":9632,"children":9633},{},[9634,9639,9641,9646],{"type":17,"tag":79,"props":9635,"children":9637},{"className":9636},[],[9638],{"type":23,"value":8377},{"type":23,"value":9640},": The axis to remove. The default is ",{"type":17,"tag":79,"props":9642,"children":9644},{"className":9643},[],[9645],{"type":23,"value":8385},{"type":23,"value":9647},", which removes all single-dimensional entries.",{"type":17,"tag":26,"props":9649,"children":9650},{},[9651,9652,9657],{"type":23,"value":8418},{"type":17,"tag":79,"props":9653,"children":9655},{"className":9654},[],[9656],{"type":23,"value":9496},{"type":23,"value":9658}," function to remove single-dimensional entries from an array:",{"type":17,"tag":518,"props":9660,"children":9661},{":editable":520,":show-in-col":520,"max-height":521},[9662],{"type":17,"tag":275,"props":9663,"children":9666},{"code":9664,"language":432,"meta":8,"className":9665},"import numpy as np\n\narray1 = np.array([[[[1, 2, 3, 4]],\n                    [[5, 6, 7, 8]],\n                    [[9, 10, 11, 12]]]])  # Shape is (1, 3, 1, 4)\n\n# Use squeeze() to remove all single-dimensional entries\nsqueezed_array = np.squeeze(array1)\nprint(\"Array after removing single-dimensional entries:\\n\", squeezed_array)\nprint(\"Shape after removing single-dimensional entries:\", squeezed_array.shape)\n",[527],[9667],{"type":17,"tag":79,"props":9668,"children":9669},{"__ignoreMap":8},[9670],{"type":23,"value":9664},{"type":17,"tag":96,"props":9672,"children":9674},{"id":9673},"_2-array-concatenation-and-splitting",[9675],{"type":23,"value":9676},"2. Array Concatenation and Splitting",{"type":17,"tag":1561,"props":9678,"children":9680},{"id":9679},"_1-concatenating-arrays",[9681],{"type":23,"value":9682},"(1) Concatenating Arrays",{"type":17,"tag":26,"props":9684,"children":9685},{},[9686,9687,9693,9695,9700],{"type":23,"value":9250},{"type":17,"tag":79,"props":9688,"children":9690},{"className":9689},[],[9691],{"type":23,"value":9692},"concatenate()",{"type":23,"value":9694}," function is used to concatenate arrays along a specified axis, returning a new array. The syntax of the ",{"type":17,"tag":79,"props":9696,"children":9698},{"className":9697},[],[9699],{"type":23,"value":9692},{"type":23,"value":5672},{"type":17,"tag":275,"props":9702,"children":9705},{"code":9703,"language":432,"meta":8,"className":9704},"numpy.concatenate((a1, a2, ...), axis=0)\n",[527],[9706],{"type":17,"tag":79,"props":9707,"children":9708},{"__ignoreMap":8},[9709],{"type":23,"value":9703},{"type":17,"tag":26,"props":9711,"children":9712},{},[9713],{"type":23,"value":7165},{"type":17,"tag":235,"props":9715,"children":9716},{},[9717,9728],{"type":17,"tag":36,"props":9718,"children":9719},{},[9720,9726],{"type":17,"tag":79,"props":9721,"children":9723},{"className":9722},[],[9724],{"type":23,"value":9725},"a1, a2, ...",{"type":23,"value":9727},": The arrays to be concatenated.",{"type":17,"tag":36,"props":9729,"children":9730},{},[9731,9736],{"type":17,"tag":79,"props":9732,"children":9734},{"className":9733},[],[9735],{"type":23,"value":8377},{"type":23,"value":9737},": The axis along which to concatenate the arrays. The default is 0.",{"type":17,"tag":26,"props":9739,"children":9740},{},[9741,9742,9747],{"type":23,"value":8418},{"type":17,"tag":79,"props":9743,"children":9745},{"className":9744},[],[9746],{"type":23,"value":9692},{"type":23,"value":9748}," function to concatenate arrays:",{"type":17,"tag":518,"props":9750,"children":9751},{":editable":520,":show-in-col":520,"max-height":521},[9752],{"type":17,"tag":275,"props":9753,"children":9756},{"code":9754,"language":432,"meta":8,"className":9755},"import numpy as np\n\n# Create two example arrays\na1 = np.array([[1, 2], [3, 4]])\na2 = np.array([[5, 6], [7, 8]])\n\n# Concatenate arrays along the first axis (rows)\nconcatenated_axis_0 = np.concatenate((a1, a2), axis=0)\nprint(\"Array concatenated along rows:\\n\", concatenated_axis_0)\n\n# Concatenate arrays along the second axis (columns)\nconcatenated_axis_1 = np.concatenate((a1, a2), axis=1)\nprint(\"Array concatenated along columns:\\n\", concatenated_axis_1)\n",[527],[9757],{"type":17,"tag":79,"props":9758,"children":9759},{"__ignoreMap":8},[9760],{"type":23,"value":9754},{"type":17,"tag":1561,"props":9762,"children":9764},{"id":9763},"_2-splitting-arrays",[9765],{"type":23,"value":9766},"(2) Splitting Arrays",{"type":17,"tag":26,"props":9768,"children":9769},{},[9770,9771,9777,9779,9784],{"type":23,"value":9250},{"type":17,"tag":79,"props":9772,"children":9774},{"className":9773},[],[9775],{"type":23,"value":9776},"split()",{"type":23,"value":9778}," function is used to split an array along a specified axis, returning a list of arrays. The syntax of the ",{"type":17,"tag":79,"props":9780,"children":9782},{"className":9781},[],[9783],{"type":23,"value":9776},{"type":23,"value":5672},{"type":17,"tag":275,"props":9786,"children":9789},{"code":9787,"language":432,"meta":8,"className":9788},"numpy.split(array, indices_or_sections, axis=0)\n",[527],[9790],{"type":17,"tag":79,"props":9791,"children":9792},{"__ignoreMap":8},[9793],{"type":23,"value":9787},{"type":17,"tag":26,"props":9795,"children":9796},{},[9797],{"type":23,"value":7165},{"type":17,"tag":235,"props":9799,"children":9800},{},[9801,9811,9822],{"type":17,"tag":36,"props":9802,"children":9803},{},[9804,9809],{"type":17,"tag":79,"props":9805,"children":9807},{"className":9806},[],[9808],{"type":23,"value":9546},{"type":23,"value":9810},": The array to be split.",{"type":17,"tag":36,"props":9812,"children":9813},{},[9814,9820],{"type":17,"tag":79,"props":9815,"children":9817},{"className":9816},[],[9818],{"type":23,"value":9819},"indices_or_sections",{"type":23,"value":9821},": The indices at which to split the array or the number of sections to split into.",{"type":17,"tag":36,"props":9823,"children":9824},{},[9825,9830],{"type":17,"tag":79,"props":9826,"children":9828},{"className":9827},[],[9829],{"type":23,"value":8377},{"type":23,"value":9831},": The axis along which to split the array. The default is 0.",{"type":17,"tag":26,"props":9833,"children":9834},{},[9835,9836,9841],{"type":23,"value":8418},{"type":17,"tag":79,"props":9837,"children":9839},{"className":9838},[],[9840],{"type":23,"value":9776},{"type":23,"value":9842}," function to split an array:",{"type":17,"tag":518,"props":9844,"children":9845},{":editable":520,":show-in-col":520,"max-height":521},[9846],{"type":17,"tag":275,"props":9847,"children":9850},{"code":9848,"language":432,"meta":8,"className":9849},"import numpy as np\n\n# Create an array\narray = np.array([1, 2, 3, 4, 5, 6])\n\n# Split the array into three parts\nresult = np.split(array, 3)\n\nprint(result)\n",[527],[9851],{"type":17,"tag":79,"props":9852,"children":9853},{"__ignoreMap":8},[9854],{"type":23,"value":9848},{"type":17,"tag":18,"props":9856,"children":9858},{"id":9857},"_7-array-sorting",[9859],{"type":23,"value":9860},"7. Array Sorting",{"type":17,"tag":26,"props":9862,"children":9863},{},[9864,9866,9872],{"type":23,"value":9865},"Numpy provides various sorting functions that implement different sorting algorithms. However, in most cases, we use the quicksort algorithm, i.e., the ",{"type":17,"tag":79,"props":9867,"children":9869},{"className":9868},[],[9870],{"type":23,"value":9871},"quicksort",{"type":23,"value":9873}," algorithm. Therefore, in the following sorting functions, we will not specify the sorting algorithm but use the default quicksort algorithm.",{"type":17,"tag":26,"props":9875,"children":9876},{},[9877,9879,9885,9887,9893,9895,9901],{"type":23,"value":9878},"Here, we mainly introduce three commonly used sorting functions: the ",{"type":17,"tag":79,"props":9880,"children":9882},{"className":9881},[],[9883],{"type":23,"value":9884},"sort()",{"type":23,"value":9886}," function, the ",{"type":17,"tag":79,"props":9888,"children":9890},{"className":9889},[],[9891],{"type":23,"value":9892},"argsort()",{"type":23,"value":9894}," function, and the ",{"type":17,"tag":79,"props":9896,"children":9898},{"className":9897},[],[9899],{"type":23,"value":9900},"lexsort()",{"type":23,"value":5762},{"type":17,"tag":96,"props":9903,"children":9905},{"id":9904},"_1-sort-function",[9906,9908,9913],{"type":23,"value":9907},"1. ",{"type":17,"tag":79,"props":9909,"children":9911},{"className":9910},[],[9912],{"type":23,"value":9884},{"type":23,"value":7140},{"type":17,"tag":26,"props":9915,"children":9916},{},[9917,9918,9923,9925,9930],{"type":23,"value":3191},{"type":17,"tag":79,"props":9919,"children":9921},{"className":9920},[],[9922],{"type":23,"value":9884},{"type":23,"value":9924}," function is used to sort an array and returns a new array. The syntax of the ",{"type":17,"tag":79,"props":9926,"children":9928},{"className":9927},[],[9929],{"type":23,"value":9884},{"type":23,"value":5672},{"type":17,"tag":275,"props":9932,"children":9935},{"code":9933,"language":432,"meta":8,"className":9934},"numpy.sort(a, axis, kind=None, order=None)\n",[527],[9936],{"type":17,"tag":79,"props":9937,"children":9938},{"__ignoreMap":8},[9939],{"type":23,"value":9933},{"type":17,"tag":26,"props":9941,"children":9942},{},[9943],{"type":23,"value":7165},{"type":17,"tag":235,"props":9945,"children":9946},{},[9947,9957,9967,9985],{"type":17,"tag":36,"props":9948,"children":9949},{},[9950,9955],{"type":17,"tag":79,"props":9951,"children":9953},{"className":9952},[],[9954],{"type":23,"value":105},{"type":23,"value":9956},": The array to be sorted.",{"type":17,"tag":36,"props":9958,"children":9959},{},[9960,9965],{"type":17,"tag":79,"props":9961,"children":9963},{"className":9962},[],[9964],{"type":23,"value":8377},{"type":23,"value":9966},": The axis along which to sort.",{"type":17,"tag":36,"props":9968,"children":9969},{},[9970,9976,9978,9983],{"type":17,"tag":79,"props":9971,"children":9973},{"className":9972},[],[9974],{"type":23,"value":9975},"kind",{"type":23,"value":9977},": The sorting algorithm (optional). The default is ",{"type":17,"tag":79,"props":9979,"children":9981},{"className":9980},[],[9982],{"type":23,"value":8385},{"type":23,"value":9984},", which means using the quicksort algorithm.",{"type":17,"tag":36,"props":9986,"children":9987},{},[9988,9993],{"type":17,"tag":79,"props":9989,"children":9991},{"className":9990},[],[9992],{"type":23,"value":7223},{"type":23,"value":9994},": The fields to sort by (optional).",{"type":17,"tag":26,"props":9996,"children":9997},{},[9998,9999,10004],{"type":23,"value":8418},{"type":17,"tag":79,"props":10000,"children":10002},{"className":10001},[],[10003],{"type":23,"value":9884},{"type":23,"value":10005}," function to sort an array:",{"type":17,"tag":518,"props":10007,"children":10008},{":editable":520,":show-in-col":520,"max-height":521},[10009],{"type":17,"tag":275,"props":10010,"children":10013},{"code":10011,"language":432,"meta":8,"className":10012},"import numpy as np\n\n# Create a two-dimensional array\na = np.array([[3, 2, 1], [6, 5, 4]])\n\n# Sort by rows\nsorted_by_row = np.sort(a, axis=1)\nprint(\"Sorted by rows:\\n\", sorted_by_row)\n\n# Sort by columns\nsorted_by_column = np.sort(a, axis=0)\nprint(\"Sorted by columns:\\n\", sorted_by_column)\n",[527],[10014],{"type":17,"tag":79,"props":10015,"children":10016},{"__ignoreMap":8},[10017],{"type":23,"value":10011},{"type":17,"tag":96,"props":10019,"children":10021},{"id":10020},"_2-argsort-function",[10022,10024,10029],{"type":23,"value":10023},"2. ",{"type":17,"tag":79,"props":10025,"children":10027},{"className":10026},[],[10028],{"type":23,"value":9892},{"type":23,"value":7140},{"type":17,"tag":26,"props":10031,"children":10032},{},[10033,10034,10039,10041,10046],{"type":23,"value":3191},{"type":17,"tag":79,"props":10035,"children":10037},{"className":10036},[],[10038],{"type":23,"value":9892},{"type":23,"value":10040}," function is used to return the indices that would sort an array. The syntax of the ",{"type":17,"tag":79,"props":10042,"children":10044},{"className":10043},[],[10045],{"type":23,"value":9892},{"type":23,"value":5672},{"type":17,"tag":275,"props":10048,"children":10051},{"code":10049,"language":432,"meta":8,"className":10050},"numpy.argsort(a, axis, kind=None, order=None)\n",[527],[10052],{"type":17,"tag":79,"props":10053,"children":10054},{"__ignoreMap":8},[10055],{"type":23,"value":10049},{"type":17,"tag":26,"props":10057,"children":10058},{},[10059,10060,10065],{"type":23,"value":8418},{"type":17,"tag":79,"props":10061,"children":10063},{"className":10062},[],[10064],{"type":23,"value":9892},{"type":23,"value":10066}," function to return the indices that would sort an array:",{"type":17,"tag":518,"props":10068,"children":10069},{":editable":520,":show-in-col":520,"max-height":521},[10070],{"type":17,"tag":275,"props":10071,"children":10074},{"code":10072,"language":432,"meta":8,"className":10073},"import numpy as np\n\n# Create a two-dimensional array\na = np.array([[3, 2, 1], [6, 5, 4]])\n\n# Sort by rows\nsorted_by_row = np.sort(a, axis=1)\nprint(\"Sorted by rows:\\n\", sorted_by_row)\n\n# Return the indices that would sort by rows\nargsorted_by_row = np.argsort(a, axis=1)\nprint(\"Indices that would sort by rows:\\n\", argsorted_by_row)\n\n# Sort by columns\nsorted_by_column = np.sort(a, axis=0)\nprint(\"Sorted by columns:\\n\", sorted_by_column)\n\n# Return the indices that would sort by columns\nargsorted_by_column = np.argsort(a, axis=0)\nprint(\"Indices that would sort by columns:\\n\", argsorted_by_column)\n",[527],[10075],{"type":17,"tag":79,"props":10076,"children":10077},{"__ignoreMap":8},[10078],{"type":23,"value":10072},{"type":17,"tag":26,"props":10080,"children":10081},{},[10082,10084,10089],{"type":23,"value":10083},"It is important to note that the ",{"type":17,"tag":79,"props":10085,"children":10087},{"className":10086},[],[10088],{"type":23,"value":9892},{"type":23,"value":10090}," function returns the indices that would sort the array, not the sorted array itself. Therefore, to get the sorted array, you need to use the returned indices to access the elements in the original array.",{"type":17,"tag":96,"props":10092,"children":10094},{"id":10093},"_3-lexsort-function",[10095,10097,10102],{"type":23,"value":10096},"3. ",{"type":17,"tag":79,"props":10098,"children":10100},{"className":10099},[],[10101],{"type":23,"value":9900},{"type":23,"value":7140},{"type":17,"tag":26,"props":10104,"children":10105},{},[10106,10107,10112,10114,10119,10121,10127],{"type":23,"value":3191},{"type":17,"tag":79,"props":10108,"children":10110},{"className":10109},[],[10111],{"type":23,"value":9900},{"type":23,"value":10113}," function is used to sort based on multiple key arrays and returns an array of indices. Generally, ",{"type":17,"tag":79,"props":10115,"children":10117},{"className":10116},[],[10118],{"type":23,"value":9900},{"type":23,"value":10120}," sorts based on the last array in the ",{"type":17,"tag":79,"props":10122,"children":10124},{"className":10123},[],[10125],{"type":23,"value":10126},"keys",{"type":23,"value":10128}," parameter first, then sorts progressively forward.",{"type":17,"tag":275,"props":10130,"children":10133},{"code":10131,"language":432,"meta":8,"className":10132},"numpy.lexsort(keys, axis=-1)\n",[527],[10134],{"type":17,"tag":79,"props":10135,"children":10136},{"__ignoreMap":8},[10137],{"type":23,"value":10131},{"type":17,"tag":26,"props":10139,"children":10140},{},[10141],{"type":23,"value":7165},{"type":17,"tag":235,"props":10143,"children":10144},{},[10145,10155],{"type":17,"tag":36,"props":10146,"children":10147},{},[10148,10153],{"type":17,"tag":79,"props":10149,"children":10151},{"className":10150},[],[10152],{"type":23,"value":10126},{"type":23,"value":10154},": The key arrays to sort by, usually a tuple of multiple arrays. These arrays need to have the same shape and will be sorted from the last array forward.",{"type":17,"tag":36,"props":10156,"children":10157},{},[10158,10163],{"type":17,"tag":79,"props":10159,"children":10161},{"className":10160},[],[10162],{"type":23,"value":8377},{"type":23,"value":10164},": The axis along which to sort. The default is the last axis (axis=-1).",{"type":17,"tag":26,"props":10166,"children":10167},{},[10168,10169,10174],{"type":23,"value":8418},{"type":17,"tag":79,"props":10170,"children":10172},{"className":10171},[],[10173],{"type":23,"value":9900},{"type":23,"value":10175}," function to sort multiple arrays:",{"type":17,"tag":518,"props":10177,"children":10178},{":editable":520,":show-in-col":520,"max-height":521},[10179],{"type":17,"tag":275,"props":10180,"children":10183},{"code":10181,"language":432,"meta":8,"className":10182},"import numpy as np\n\n# Example data\nnames = np.array(['David', 'Alice', 'Bob', 'Charlie'])\nages = np.array([20, 25, 25, 30])\nheights = np.array([180, 160, 175, 150])\n\n# Use lexsort to sort: first by age in ascending order, then by height in ascending order if ages are the same\nsorted_indices = np.lexsort((heights, ages))\n\n# Get the sorted data based on the sorted indices\nsorted_names = names[sorted_indices]\nsorted_ages = ages[sorted_indices]\nsorted_heights = heights[sorted_indices]\n\nprint(\"Sorted names:\", sorted_names)\nprint(\"Sorted ages:\", sorted_ages)\nprint(\"Sorted heights:\", sorted_heights)\n",[527],[10184],{"type":17,"tag":79,"props":10185,"children":10186},{"__ignoreMap":8},[10187],{"type":23,"value":10181},{"type":17,"tag":18,"props":10189,"children":10191},{"id":10190},"_8-statistical-functions",[10192],{"type":23,"value":10193},"8. Statistical Functions",{"type":17,"tag":26,"props":10195,"children":10196},{},[10197],{"type":23,"value":10198},"Numpy provides many statistical functions for performing statistical analysis on arrays. Here, we mainly introduce basic statistical functions, which are used to calculate the maximum, minimum, mean, median, standard deviation, etc., of an array.",{"type":17,"tag":96,"props":10200,"children":10202},{"id":10201},"_1-amin-function",[10203,10205,10211],{"type":23,"value":10204},"(1) ",{"type":17,"tag":79,"props":10206,"children":10208},{"className":10207},[],[10209],{"type":23,"value":10210},"amin()",{"type":23,"value":7140},{"type":17,"tag":26,"props":10213,"children":10214},{},[10215,10216,10221,10223,10228],{"type":23,"value":3191},{"type":17,"tag":79,"props":10217,"children":10219},{"className":10218},[],[10220],{"type":23,"value":10210},{"type":23,"value":10222}," function is used to calculate the minimum value of an array. The syntax of the ",{"type":17,"tag":79,"props":10224,"children":10226},{"className":10225},[],[10227],{"type":23,"value":10210},{"type":23,"value":5672},{"type":17,"tag":275,"props":10230,"children":10233},{"code":10231,"language":432,"meta":8,"className":10232},"numpy.amin(a, axis=None, out=None, keepdims=\u003Cno value>, initial=\u003Cno value>, where=\u003Cno value>)\n",[527],[10234],{"type":17,"tag":79,"props":10235,"children":10236},{"__ignoreMap":8},[10237],{"type":23,"value":10231},{"type":17,"tag":26,"props":10239,"children":10240},{},[10241],{"type":23,"value":7165},{"type":17,"tag":235,"props":10243,"children":10244},{},[10245,10255,10272,10283,10299,10310],{"type":17,"tag":36,"props":10246,"children":10247},{},[10248,10253],{"type":17,"tag":79,"props":10249,"children":10251},{"className":10250},[],[10252],{"type":23,"value":105},{"type":23,"value":10254},": The array to calculate the minimum value of.",{"type":17,"tag":36,"props":10256,"children":10257},{},[10258,10263,10265,10270],{"type":17,"tag":79,"props":10259,"children":10261},{"className":10260},[],[10262],{"type":23,"value":8377},{"type":23,"value":10264},": The axis along which to calculate the minimum value. The default is ",{"type":17,"tag":79,"props":10266,"children":10268},{"className":10267},[],[10269],{"type":23,"value":8385},{"type":23,"value":10271},", which means calculating the minimum value of the entire array.",{"type":17,"tag":36,"props":10273,"children":10274},{},[10275,10281],{"type":17,"tag":79,"props":10276,"children":10278},{"className":10277},[],[10279],{"type":23,"value":10280},"out",{"type":23,"value":10282},": The array to store the result.",{"type":17,"tag":36,"props":10284,"children":10285},{},[10286,10291,10293,10298],{"type":17,"tag":79,"props":10287,"children":10289},{"className":10288},[],[10290],{"type":23,"value":8405},{"type":23,"value":10292},": If ",{"type":17,"tag":79,"props":10294,"children":10296},{"className":10295},[],[10297],{"type":23,"value":2005},{"type":23,"value":8413},{"type":17,"tag":36,"props":10300,"children":10301},{},[10302,10308],{"type":17,"tag":79,"props":10303,"children":10305},{"className":10304},[],[10306],{"type":23,"value":10307},"initial",{"type":23,"value":10309},": The initial value.",{"type":17,"tag":36,"props":10311,"children":10312},{},[10313,10319],{"type":17,"tag":79,"props":10314,"children":10316},{"className":10315},[],[10317],{"type":23,"value":10318},"where",{"type":23,"value":10320},": The condition to calculate.",{"type":17,"tag":26,"props":10322,"children":10323},{},[10324,10325,10330],{"type":23,"value":8418},{"type":17,"tag":79,"props":10326,"children":10328},{"className":10327},[],[10329],{"type":23,"value":10210},{"type":23,"value":10331}," function to calculate the minimum value of an array:",{"type":17,"tag":518,"props":10333,"children":10334},{":editable":520,":show-in-col":520,"max-height":521},[10335],{"type":17,"tag":275,"props":10336,"children":10339},{"code":10337,"language":432,"meta":8,"className":10338},"import numpy as np\n\n# Create an array\narray = np.array([[3, 7, 5], [8, 4, 6], [2, 9, 1]])\n\n# Calculate the minimum value of the entire array\nmin_value = np.amin(array)\n\nprint(\"Minimum value of the array:\", min_value)\n\n# Calculate the minimum value along axis 0\nmin_value_axis0 = np.amin(array, axis=0)\n\nprint(\"Minimum value along axis 0:\", min_value_axis0)\n\n# Calculate the minimum value along axis 1\nmin_value_axis1 = np.amin(array, axis=1)\n\nprint(\"Minimum value along axis 1:\", min_value_axis1)\n",[527],[10340],{"type":17,"tag":79,"props":10341,"children":10342},{"__ignoreMap":8},[10343],{"type":23,"value":10337},{"type":17,"tag":96,"props":10345,"children":10347},{"id":10346},"_2-amax-function",[10348,10350,10356],{"type":23,"value":10349},"(2) ",{"type":17,"tag":79,"props":10351,"children":10353},{"className":10352},[],[10354],{"type":23,"value":10355},"amax()",{"type":23,"value":7140},{"type":17,"tag":26,"props":10358,"children":10359},{},[10360,10361,10366,10368,10373],{"type":23,"value":3191},{"type":17,"tag":79,"props":10362,"children":10364},{"className":10363},[],[10365],{"type":23,"value":10355},{"type":23,"value":10367}," function is used to calculate the maximum value of an array. The syntax of the ",{"type":17,"tag":79,"props":10369,"children":10371},{"className":10370},[],[10372],{"type":23,"value":10355},{"type":23,"value":5672},{"type":17,"tag":275,"props":10375,"children":10378},{"code":10376,"language":432,"meta":8,"className":10377},"numpy.amax(a, axis=None, out=None, keepdims=\u003Cno value>, initial=\u003Cno value>, where=\u003Cno value>)\n",[527],[10379],{"type":17,"tag":79,"props":10380,"children":10381},{"__ignoreMap":8},[10382],{"type":23,"value":10376},{"type":17,"tag":26,"props":10384,"children":10385},{},[10386,10387,10392],{"type":23,"value":8418},{"type":17,"tag":79,"props":10388,"children":10390},{"className":10389},[],[10391],{"type":23,"value":10355},{"type":23,"value":10393}," function to calculate the maximum value of an array:",{"type":17,"tag":518,"props":10395,"children":10396},{":editable":520,":show-in-col":520,"max-height":521},[10397],{"type":17,"tag":275,"props":10398,"children":10401},{"code":10399,"language":432,"meta":8,"className":10400},"import numpy as np\n\n# Create an array\narray = np.array([[3, 7, 5], [8, 4, 6], [2, 9, 1]])\n\n# Calculate the maximum value of the entire array\nmax_value = np.amax(array)\n\nprint(\"Maximum value of the array:\", max_value)\n\n# Calculate the maximum value along axis 0\nmax_value_axis0 = np.amax(array, axis=0)\n\nprint(\"Maximum value along axis 0:\", max_value_axis0)\n\n# Calculate the maximum value along axis 1\nmax_value_axis1 = np.amax(array, axis=1)\n\nprint(\"Maximum value along axis 1:\", max_value_axis1)\n",[527],[10402],{"type":17,"tag":79,"props":10403,"children":10404},{"__ignoreMap":8},[10405],{"type":23,"value":10399},{"type":17,"tag":96,"props":10407,"children":10409},{"id":10408},"_3-mean-function",[10410,10412,10418],{"type":23,"value":10411},"(3) ",{"type":17,"tag":79,"props":10413,"children":10415},{"className":10414},[],[10416],{"type":23,"value":10417},"mean()",{"type":23,"value":7140},{"type":17,"tag":26,"props":10420,"children":10421},{},[10422,10423,10428,10430,10435],{"type":23,"value":3191},{"type":17,"tag":79,"props":10424,"children":10426},{"className":10425},[],[10427],{"type":23,"value":10417},{"type":23,"value":10429}," function is used to calculate the mean value of an array. The syntax of the ",{"type":17,"tag":79,"props":10431,"children":10433},{"className":10432},[],[10434],{"type":23,"value":10417},{"type":23,"value":5672},{"type":17,"tag":275,"props":10437,"children":10440},{"code":10438,"language":432,"meta":8,"className":10439},"numpy.mean(a, axis=None, dtype=None, out=None, keepdims=\u003Cno value>)\n",[527],[10441],{"type":17,"tag":79,"props":10442,"children":10443},{"__ignoreMap":8},[10444],{"type":23,"value":10438},{"type":17,"tag":26,"props":10446,"children":10447},{},[10448],{"type":23,"value":7165},{"type":17,"tag":235,"props":10450,"children":10451},{},[10452,10462,10479,10489,10498],{"type":17,"tag":36,"props":10453,"children":10454},{},[10455,10460],{"type":17,"tag":79,"props":10456,"children":10458},{"className":10457},[],[10459],{"type":23,"value":105},{"type":23,"value":10461},": The array to calculate the mean value of.",{"type":17,"tag":36,"props":10463,"children":10464},{},[10465,10470,10472,10477],{"type":17,"tag":79,"props":10466,"children":10468},{"className":10467},[],[10469],{"type":23,"value":8377},{"type":23,"value":10471},": The axis along which to calculate the mean value. The default is ",{"type":17,"tag":79,"props":10473,"children":10475},{"className":10474},[],[10476],{"type":23,"value":8385},{"type":23,"value":10478},", which means calculating the mean value of the entire array.",{"type":17,"tag":36,"props":10480,"children":10481},{},[10482,10487],{"type":17,"tag":79,"props":10483,"children":10485},{"className":10484},[],[10486],{"type":23,"value":6791},{"type":23,"value":10488},": The data type of the output array.",{"type":17,"tag":36,"props":10490,"children":10491},{},[10492,10497],{"type":17,"tag":79,"props":10493,"children":10495},{"className":10494},[],[10496],{"type":23,"value":10280},{"type":23,"value":10282},{"type":17,"tag":36,"props":10499,"children":10500},{},[10501,10506,10507,10512],{"type":17,"tag":79,"props":10502,"children":10504},{"className":10503},[],[10505],{"type":23,"value":8405},{"type":23,"value":10292},{"type":17,"tag":79,"props":10508,"children":10510},{"className":10509},[],[10511],{"type":23,"value":2005},{"type":23,"value":8413},{"type":17,"tag":26,"props":10514,"children":10515},{},[10516,10517,10522],{"type":23,"value":8418},{"type":17,"tag":79,"props":10518,"children":10520},{"className":10519},[],[10521],{"type":23,"value":10417},{"type":23,"value":10523}," function to calculate the mean value of an array:",{"type":17,"tag":518,"props":10525,"children":10526},{":editable":520,":show-in-col":520,"max-height":521},[10527],{"type":17,"tag":275,"props":10528,"children":10531},{"code":10529,"language":432,"meta":8,"className":10530},"import numpy as np\n\n# Create an array\narray = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n\n# Calculate the mean value of the entire array\nmean_value = np.mean(array)\n\nprint(\"Mean value of the array:\", mean_value)\n\n# Calculate the mean value along axis 0\nmean_value_axis0 = np.mean(array, axis=0)\n\nprint(\"Mean value along axis 0:\", mean_value_axis0)\n\n# Calculate the mean value along axis 1\nmean_value_axis1 = np.mean(array, axis=1)\n\nprint(\"Mean value along axis 1:\", mean_value_axis1)\n",[527],[10532],{"type":17,"tag":79,"props":10533,"children":10534},{"__ignoreMap":8},[10535],{"type":23,"value":10529},{"type":17,"tag":96,"props":10537,"children":10539},{"id":10538},"_4-median-function",[10540,10542,10548],{"type":23,"value":10541},"(4) ",{"type":17,"tag":79,"props":10543,"children":10545},{"className":10544},[],[10546],{"type":23,"value":10547},"median()",{"type":23,"value":7140},{"type":17,"tag":26,"props":10550,"children":10551},{},[10552,10553,10558,10560,10565],{"type":23,"value":3191},{"type":17,"tag":79,"props":10554,"children":10556},{"className":10555},[],[10557],{"type":23,"value":10547},{"type":23,"value":10559}," function is used to calculate the median value of an array. The syntax of the ",{"type":17,"tag":79,"props":10561,"children":10563},{"className":10562},[],[10564],{"type":23,"value":10547},{"type":23,"value":5672},{"type":17,"tag":275,"props":10567,"children":10570},{"code":10568,"language":432,"meta":8,"className":10569},"numpy.median(a, axis=None, out=None, overwrite_input=False, keepdims=False)\n",[527],[10571],{"type":17,"tag":79,"props":10572,"children":10573},{"__ignoreMap":8},[10574],{"type":23,"value":10568},{"type":17,"tag":26,"props":10576,"children":10577},{},[10578],{"type":23,"value":7165},{"type":17,"tag":235,"props":10580,"children":10581},{},[10582,10592,10609,10618,10635],{"type":17,"tag":36,"props":10583,"children":10584},{},[10585,10590],{"type":17,"tag":79,"props":10586,"children":10588},{"className":10587},[],[10589],{"type":23,"value":105},{"type":23,"value":10591},": The array to calculate the median value of.",{"type":17,"tag":36,"props":10593,"children":10594},{},[10595,10600,10602,10607],{"type":17,"tag":79,"props":10596,"children":10598},{"className":10597},[],[10599],{"type":23,"value":8377},{"type":23,"value":10601},": The axis along which to calculate the median value. The default is ",{"type":17,"tag":79,"props":10603,"children":10605},{"className":10604},[],[10606],{"type":23,"value":8385},{"type":23,"value":10608},", which means calculating the median value of the entire array.",{"type":17,"tag":36,"props":10610,"children":10611},{},[10612,10617],{"type":17,"tag":79,"props":10613,"children":10615},{"className":10614},[],[10616],{"type":23,"value":10280},{"type":23,"value":10282},{"type":17,"tag":36,"props":10619,"children":10620},{},[10621,10627,10628,10633],{"type":17,"tag":79,"props":10622,"children":10624},{"className":10623},[],[10625],{"type":23,"value":10626},"overwrite_input",{"type":23,"value":10292},{"type":17,"tag":79,"props":10629,"children":10631},{"className":10630},[],[10632],{"type":23,"value":2005},{"type":23,"value":10634},", allows reusing the input array.",{"type":17,"tag":36,"props":10636,"children":10637},{},[10638,10643,10644,10649],{"type":17,"tag":79,"props":10639,"children":10641},{"className":10640},[],[10642],{"type":23,"value":8405},{"type":23,"value":10292},{"type":17,"tag":79,"props":10645,"children":10647},{"className":10646},[],[10648],{"type":23,"value":2005},{"type":23,"value":8413},{"type":17,"tag":26,"props":10651,"children":10652},{},[10653,10654,10659],{"type":23,"value":8418},{"type":17,"tag":79,"props":10655,"children":10657},{"className":10656},[],[10658],{"type":23,"value":10547},{"type":23,"value":10660}," function to calculate the median value of an array:",{"type":17,"tag":518,"props":10662,"children":10663},{":editable":520,":show-in-col":520,"max-height":521},[10664],{"type":17,"tag":275,"props":10665,"children":10668},{"code":10666,"language":432,"meta":8,"className":10667},"import numpy as np\n\n# Create an array\narray = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n\n# Calculate the median value of the entire array\nmedian_value = np.median(array)\n\nprint(\"Median value of the array:\", median_value)\n\n# Calculate the median value along axis 0\nmedian_value_axis0 = np.median(array, axis=0)\n\nprint(\"Median value along axis 0:\", median_value_axis0)\n\n# Calculate the median value along axis 1\nmedian_value_axis1 = np.median(array, axis=1)\n\nprint(\"Median value along axis 1:\", median_value_axis1)\n",[527],[10669],{"type":17,"tag":79,"props":10670,"children":10671},{"__ignoreMap":8},[10672],{"type":23,"value":10666},{"type":17,"tag":96,"props":10674,"children":10676},{"id":10675},"_5-std-function",[10677,10679,10685],{"type":23,"value":10678},"(5) ",{"type":17,"tag":79,"props":10680,"children":10682},{"className":10681},[],[10683],{"type":23,"value":10684},"std()",{"type":23,"value":7140},{"type":17,"tag":26,"props":10687,"children":10688},{},[10689,10690,10695,10697,10702],{"type":23,"value":3191},{"type":17,"tag":79,"props":10691,"children":10693},{"className":10692},[],[10694],{"type":23,"value":10684},{"type":23,"value":10696}," function is used to calculate the standard deviation of an array. The syntax of the ",{"type":17,"tag":79,"props":10698,"children":10700},{"className":10699},[],[10701],{"type":23,"value":10684},{"type":23,"value":5672},{"type":17,"tag":275,"props":10704,"children":10707},{"code":10705,"language":432,"meta":8,"className":10706},"numpy.std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=\u003Cno value>)\n",[527],[10708],{"type":17,"tag":79,"props":10709,"children":10710},{"__ignoreMap":8},[10711],{"type":23,"value":10705},{"type":17,"tag":26,"props":10713,"children":10714},{},[10715],{"type":23,"value":7165},{"type":17,"tag":235,"props":10717,"children":10718},{},[10719,10729,10746,10755,10764,10775],{"type":17,"tag":36,"props":10720,"children":10721},{},[10722,10727],{"type":17,"tag":79,"props":10723,"children":10725},{"className":10724},[],[10726],{"type":23,"value":105},{"type":23,"value":10728},": The array to calculate the standard deviation of.",{"type":17,"tag":36,"props":10730,"children":10731},{},[10732,10737,10739,10744],{"type":17,"tag":79,"props":10733,"children":10735},{"className":10734},[],[10736],{"type":23,"value":8377},{"type":23,"value":10738},": The axis along which to calculate the standard deviation. The default is ",{"type":17,"tag":79,"props":10740,"children":10742},{"className":10741},[],[10743],{"type":23,"value":8385},{"type":23,"value":10745},", which means calculating the standard deviation of the entire array.",{"type":17,"tag":36,"props":10747,"children":10748},{},[10749,10754],{"type":17,"tag":79,"props":10750,"children":10752},{"className":10751},[],[10753],{"type":23,"value":6791},{"type":23,"value":10488},{"type":17,"tag":36,"props":10756,"children":10757},{},[10758,10763],{"type":17,"tag":79,"props":10759,"children":10761},{"className":10760},[],[10762],{"type":23,"value":10280},{"type":23,"value":10282},{"type":17,"tag":36,"props":10765,"children":10766},{},[10767,10773],{"type":17,"tag":79,"props":10768,"children":10770},{"className":10769},[],[10771],{"type":23,"value":10772},"ddof",{"type":23,"value":10774},": Delta degrees of freedom.",{"type":17,"tag":36,"props":10776,"children":10777},{},[10778,10783,10784,10789],{"type":17,"tag":79,"props":10779,"children":10781},{"className":10780},[],[10782],{"type":23,"value":8405},{"type":23,"value":10292},{"type":17,"tag":79,"props":10785,"children":10787},{"className":10786},[],[10788],{"type":23,"value":2005},{"type":23,"value":8413},{"type":17,"tag":26,"props":10791,"children":10792},{},[10793,10794,10799],{"type":23,"value":8418},{"type":17,"tag":79,"props":10795,"children":10797},{"className":10796},[],[10798],{"type":23,"value":10684},{"type":23,"value":10800}," function to calculate the standard deviation of an array:",{"type":17,"tag":518,"props":10802,"children":10803},{":editable":520,":show-in-col":520,"max-height":521},[10804],{"type":17,"tag":275,"props":10805,"children":10808},{"code":10806,"language":432,"meta":8,"className":10807},"import numpy as np\n\n# Create an array\narray = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n\n# Calculate the standard deviation of the entire array\nstd_value = np.std(array)\n\nprint(\"Standard deviation of the array:\", std_value)\n\n# Calculate the standard deviation along axis 0\nstd_value_axis0 = np.std(array, axis=0)\n\nprint(\"Standard deviation along axis 0:\", std_value_axis0)\n\n# Calculate the standard deviation along axis 1\nstd_value_axis1 = np.std(array, axis=1)\n\nprint(\"Standard deviation along axis 1:\", std_value_axis1)\n",[527],[10809],{"type":17,"tag":79,"props":10810,"children":10811},{"__ignoreMap":8},[10812],{"type":23,"value":10806},{"type":17,"tag":96,"props":10814,"children":10816},{"id":10815},"_6-var-function",[10817,10819,10825],{"type":23,"value":10818},"(6) ",{"type":17,"tag":79,"props":10820,"children":10822},{"className":10821},[],[10823],{"type":23,"value":10824},"var()",{"type":23,"value":7140},{"type":17,"tag":26,"props":10827,"children":10828},{},[10829,10830,10835,10837,10842],{"type":23,"value":3191},{"type":17,"tag":79,"props":10831,"children":10833},{"className":10832},[],[10834],{"type":23,"value":10824},{"type":23,"value":10836}," function is used to calculate the variance of an array. The syntax of the ",{"type":17,"tag":79,"props":10838,"children":10840},{"className":10839},[],[10841],{"type":23,"value":10824},{"type":23,"value":5672},{"type":17,"tag":275,"props":10844,"children":10847},{"code":10845,"language":432,"meta":8,"className":10846},"numpy.var(a, axis=None, dtype=None, out=None, ddof=0, keepdims=\u003Cno value>)\n",[527],[10848],{"type":17,"tag":79,"props":10849,"children":10850},{"__ignoreMap":8},[10851],{"type":23,"value":10845},{"type":17,"tag":26,"props":10853,"children":10854},{},[10855,10856,10861],{"type":23,"value":8418},{"type":17,"tag":79,"props":10857,"children":10859},{"className":10858},[],[10860],{"type":23,"value":10824},{"type":23,"value":10862}," function to calculate the variance of an array:",{"type":17,"tag":518,"props":10864,"children":10865},{":editable":520,":show-in-col":520,"max-height":521},[10866],{"type":17,"tag":275,"props":10867,"children":10870},{"code":10868,"language":432,"meta":8,"className":10869},"import numpy as np\n\n# Create an array\narray = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n\n# Calculate the variance of the entire array\nvar_value = np.var(array)\n\nprint(\"Variance of the array:\", var_value)\n\n# Calculate the variance along axis 0\nvar_value_axis0 = np.var(array, axis=0)\n\nprint(\"Variance along axis 0:\", var_value_axis0)\n\n# Calculate the variance along axis 1\nvar_value_axis1 = np.var(array, axis=1)\n\nprint(\"Variance along axis 1:\", var_value_axis1)\n",[527],[10871],{"type":17,"tag":79,"props":10872,"children":10873},{"__ignoreMap":8},[10874],{"type":23,"value":10868},{"title":8,"searchDepth":11,"depth":11,"links":10876},[10877,10881,10885,10886],{"id":6446,"depth":11,"text":6449,"children":10878},[10879,10880],{"id":6452,"depth":375,"text":6455},{"id":6514,"depth":375,"text":6517},{"id":6589,"depth":11,"text":6592,"children":10882},[10883,10884],{"id":6595,"depth":375,"text":6598},{"id":7099,"depth":375,"text":7102},{"id":7851,"depth":11,"text":7854},{"id":8054,"depth":11,"text":8057,"children":10887},[10888,10889],{"id":8060,"depth":375,"text":8063},{"id":8522,"depth":375,"text":8525},"content:python-basic:4.numpy.md","python-basic/4.numpy.md","python-basic/4.numpy",{"_path":10894,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":10895,"description":10896,"navigation":396,"index":8271,"icon":12,"body":10897,"_type":386,"_id":14202,"_source":388,"_file":14203,"_stem":14204,"_extension":391},"/python-basic/pandas","4 Getting Started with pandas","Using pandas to manipulate data",{"type":14,"children":10898,"toc":14177},[10899,10905,10910,10915,10920,10925,10948,10954,10971,10992,11004,11010,11029,11147,11167,11176,11181,11342,11349,11361,11370,11375,11386,11398,11407,11419,11428,11432,11441,11474,11483,11508,11517,11521,11530,11541,11550,11554,11563,11582,11588,11606,11617,11709,11728,11737,11741,11857,11867,11874,11886,11895,11899,11908,11935,11947,11959,11977,11982,11994,12012,12017,12029,12041,12049,12061,12069,12081,12097,12109,12117,12129,12144,12156,12181,12193,12212,12218,12224,12237,12248,12255,12278,12287,12305,12368,12377,12393,12402,12418,12427,12435,12444,12452,12461,12467,12472,12477,12488,12504,12513,12521,12534,12543,12556,12565,12569,12578,12590,12599,12604,12613,12617,12626,12639,12655,12664,12689,12694,12700,12705,12711,12716,12723,12752,12761,12765,12774,12825,12860,12869,12873,12882,12905,12914,12919,13035,13046,13055,13059,13068,13083,13092,13097,13106,13124,13130,13135,13142,13158,13170,13193,13205,13211,13224,13233,13237,13246,13266,13278,13284,13289,13298,13307,13313,13319,13324,13540,13546,13560,13572,13586,13598,13612,13624,13638,13650,13664,13676,13690,13702,13708,13723,13732,13736,13802,13814,13822,13831,13835,13883,13895,13901,13915,13927,13941,13953,13961,13970,13974,14019,14031,14037,14051,14060,14064,14073,14087,14096,14100,14109,14115,14129,14138,14142,14151,14165],{"type":17,"tag":18,"props":10900,"children":10902},{"id":10901},"_1-introduction-to-pandas",[10903],{"type":23,"value":10904},"1. Introduction to Pandas",{"type":17,"tag":26,"props":10906,"children":10907},{},[10908],{"type":23,"value":10909},"Pandas is an open-source data analysis and data processing library based on the Python programming language.",{"type":17,"tag":26,"props":10911,"children":10912},{},[10913],{"type":23,"value":10914},"Pandas provides easy-to-use data structures and data analysis tools, especially suitable for handling structured data, such as tabular data (similar to Excel spreadsheets).",{"type":17,"tag":26,"props":10916,"children":10917},{},[10918],{"type":23,"value":10919},"Pandas is one of the commonly used tools in the field of data science and analysis, enabling users to easily import data from various data sources and perform efficient operations and analysis on the data.",{"type":17,"tag":26,"props":10921,"children":10922},{},[10923],{"type":23,"value":10924},"Pandas offers a wealth of features, including:",{"type":17,"tag":235,"props":10926,"children":10927},{},[10928,10933,10938,10943],{"type":17,"tag":36,"props":10929,"children":10930},{},[10931],{"type":23,"value":10932},"Data cleaning: Handling missing data, duplicate data, etc.",{"type":17,"tag":36,"props":10934,"children":10935},{},[10936],{"type":23,"value":10937},"Data transformation: Changing the shape, structure, or format of data.",{"type":17,"tag":36,"props":10939,"children":10940},{},[10941],{"type":23,"value":10942},"Data analysis: Performing statistical analysis, aggregation, grouping, etc.",{"type":17,"tag":36,"props":10944,"children":10945},{},[10946],{"type":23,"value":10947},"Data visualization: Integrating with libraries like Matplotlib and Seaborn for data visualization.",{"type":17,"tag":18,"props":10949,"children":10951},{"id":10950},"_2-data-structures-in-pandas",[10952],{"type":23,"value":10953},"2. Data Structures in Pandas",{"type":17,"tag":26,"props":10955,"children":10956},{},[10957,10959,10964,10965,10970],{"type":23,"value":10958},"Pandas mainly introduces two new data structures: ",{"type":17,"tag":1136,"props":10960,"children":10961},{},[10962],{"type":23,"value":10963},"DataFrame",{"type":23,"value":86},{"type":17,"tag":1136,"props":10966,"children":10967},{},[10968],{"type":23,"value":10969},"Series",{"type":23,"value":1517},{"type":17,"tag":235,"props":10972,"children":10973},{},[10974,10983],{"type":17,"tag":36,"props":10975,"children":10976},{},[10977,10981],{"type":17,"tag":1136,"props":10978,"children":10979},{},[10980],{"type":23,"value":10969},{"type":23,"value":10982},": Similar to a one-dimensional array or list, it consists of a set of data and associated data labels (indexes). A Series can be considered as a column in a DataFrame or as a standalone one-dimensional data structure.",{"type":17,"tag":36,"props":10984,"children":10985},{},[10986,10990],{"type":17,"tag":1136,"props":10987,"children":10988},{},[10989],{"type":23,"value":10963},{"type":23,"value":10991},": Similar to a two-dimensional table, it is the most important data structure in Pandas. A DataFrame can be seen as a table composed of multiple Series arranged by columns, with both row and column indexes, making it convenient for row and column selection, filtering, merging, and other operations.",{"type":17,"tag":836,"props":10993,"children":10994},{},[10995],{"type":17,"tag":26,"props":10996,"children":10997},{},[10998,11002],{"type":17,"tag":2020,"props":10999,"children":11000},{},[11001],{"type":23,"value":2024},{"type":23,"value":11003},"\nA DataFrame can be considered as a data structure composed of multiple Series.",{"type":17,"tag":96,"props":11005,"children":11007},{"id":11006},"_1-pandas-series",[11008],{"type":23,"value":11009},"1. Pandas Series",{"type":17,"tag":26,"props":11011,"children":11012},{},[11013,11015,11020,11022,11027],{"type":23,"value":11014},"A Pandas ",{"type":17,"tag":79,"props":11016,"children":11018},{"className":11017},[],[11019],{"type":23,"value":10969},{"type":23,"value":11021}," is a flexible, one-dimensional, indexed data structure that can store various types of data (such as integers, floats, strings, timestamps, etc.). Each data item has an associated label (index), similar to key-value pairs in a dictionary. The main features of a ",{"type":17,"tag":79,"props":11023,"children":11025},{"className":11024},[],[11026],{"type":23,"value":10969},{"type":23,"value":11028}," include:",{"type":17,"tag":235,"props":11030,"children":11031},{},[11032,11049,11059,11075,11092,11116],{"type":17,"tag":36,"props":11033,"children":11034},{},[11035,11040,11042,11047],{"type":17,"tag":1136,"props":11036,"children":11037},{},[11038],{"type":23,"value":11039},"One-dimensional array structure",{"type":23,"value":11041},": A ",{"type":17,"tag":79,"props":11043,"children":11045},{"className":11044},[],[11046],{"type":23,"value":10969},{"type":23,"value":11048}," is a one-dimensional data structure, similar to a NumPy array but more flexible.",{"type":17,"tag":36,"props":11050,"children":11051},{},[11052,11057],{"type":17,"tag":1136,"props":11053,"children":11054},{},[11055],{"type":23,"value":11056},"Indexing functionality",{"type":23,"value":11058},": Each data item has a unique index, which can be default integer values (like 0, 1, 2...) or custom (like characters, dates, etc.). Indexing allows for quick access and slicing.",{"type":17,"tag":36,"props":11060,"children":11061},{},[11062,11067,11068,11073],{"type":17,"tag":1136,"props":11063,"children":11064},{},[11065],{"type":23,"value":11066},"Flexible data types",{"type":23,"value":11041},{"type":17,"tag":79,"props":11069,"children":11071},{"className":11070},[],[11072],{"type":23,"value":10969},{"type":23,"value":11074}," supports various data types, including integers, floats, booleans, strings, timestamps, etc.",{"type":17,"tag":36,"props":11076,"children":11077},{},[11078,11083,11085,11090],{"type":17,"tag":1136,"props":11079,"children":11080},{},[11081],{"type":23,"value":11082},"Automatic alignment operations",{"type":23,"value":11084},": When operating on multiple ",{"type":17,"tag":79,"props":11086,"children":11088},{"className":11087},[],[11089],{"type":23,"value":10969},{"type":23,"value":11091}," objects, Pandas automatically aligns data based on the index.",{"type":17,"tag":36,"props":11093,"children":11094},{},[11095,11100,11101,11106,11108,11114],{"type":17,"tag":1136,"props":11096,"children":11097},{},[11098],{"type":23,"value":11099},"Handling missing values",{"type":23,"value":11041},{"type":17,"tag":79,"props":11102,"children":11104},{"className":11103},[],[11105],{"type":23,"value":10969},{"type":23,"value":11107}," supports handling missing values (usually represented by ",{"type":17,"tag":79,"props":11109,"children":11111},{"className":11110},[],[11112],{"type":23,"value":11113},"NaN",{"type":23,"value":11115},") and can intelligently ignore missing values during calculations.",{"type":17,"tag":36,"props":11117,"children":11118},{},[11119,11124,11126,11131,11133,11139,11140,11146],{"type":17,"tag":1136,"props":11120,"children":11121},{},[11122],{"type":23,"value":11123},"Immutable size",{"type":23,"value":11125},": Once a ",{"type":17,"tag":79,"props":11127,"children":11129},{"className":11128},[],[11130],{"type":23,"value":10969},{"type":23,"value":11132}," is created, its size is fixed, but new objects can be generated to adjust the size using methods like ",{"type":17,"tag":79,"props":11134,"children":11136},{"className":11135},[],[11137],{"type":23,"value":11138},"append",{"type":23,"value":86},{"type":17,"tag":79,"props":11141,"children":11143},{"className":11142},[],[11144],{"type":23,"value":11145},"drop",{"type":23,"value":1517},{"type":17,"tag":26,"props":11148,"children":11149},{},[11150,11152,11157,11159,11165],{"type":23,"value":11151},"We can create a ",{"type":17,"tag":79,"props":11153,"children":11155},{"className":11154},[],[11156],{"type":23,"value":10969},{"type":23,"value":11158}," object using the ",{"type":17,"tag":79,"props":11160,"children":11162},{"className":11161},[],[11163],{"type":23,"value":11164},"pd.Series()",{"type":23,"value":11166}," constructor, passing in data (such as lists, NumPy arrays, etc.) and an optional index array.",{"type":17,"tag":275,"props":11168,"children":11171},{"className":11169,"code":11170,"language":432,"meta":8},[527],"# Constructor and parameters\npandas.Series(data=None, index=None, dtype=None, name=None, copy=False, fastpath=False)\n",[11172],{"type":17,"tag":79,"props":11173,"children":11174},{"__ignoreMap":8},[11175],{"type":23,"value":11170},{"type":17,"tag":26,"props":11177,"children":11178},{},[11179],{"type":23,"value":11180},"Parameter descriptions:",{"type":17,"tag":235,"props":11182,"children":11183},{},[11184,11211,11232,11267,11294,11321],{"type":17,"tag":36,"props":11185,"children":11186},{},[11187,11195,11197,11202,11204,11209],{"type":17,"tag":1136,"props":11188,"children":11189},{},[11190],{"type":17,"tag":79,"props":11191,"children":11193},{"className":11192},[],[11194],{"type":23,"value":594},{"type":23,"value":11196},": The data part of the ",{"type":17,"tag":79,"props":11198,"children":11200},{"className":11199},[],[11201],{"type":23,"value":10969},{"type":23,"value":11203},", which can be a list, array, dictionary, scalar value, etc. If this parameter is not provided, an empty ",{"type":17,"tag":79,"props":11205,"children":11207},{"className":11206},[],[11208],{"type":23,"value":10969},{"type":23,"value":11210}," will be created.",{"type":17,"tag":36,"props":11212,"children":11213},{},[11214,11223,11225,11230],{"type":17,"tag":1136,"props":11215,"children":11216},{},[11217],{"type":17,"tag":79,"props":11218,"children":11220},{"className":11219},[],[11221],{"type":23,"value":11222},"index",{"type":23,"value":11224},": The index part of the ",{"type":17,"tag":79,"props":11226,"children":11228},{"className":11227},[],[11229],{"type":23,"value":10969},{"type":23,"value":11231},", used to label each data item. It can be a list, array, or index object, etc. If not specified, a default integer index starting from 0 will be generated.",{"type":17,"tag":36,"props":11233,"children":11234},{},[11235,11243,11245,11250,11252,11258,11259,11265],{"type":17,"tag":1136,"props":11236,"children":11237},{},[11238],{"type":17,"tag":79,"props":11239,"children":11241},{"className":11240},[],[11242],{"type":23,"value":6791},{"type":23,"value":11244},": Specifies the data type of the ",{"type":17,"tag":79,"props":11246,"children":11248},{"className":11247},[],[11249],{"type":23,"value":10969},{"type":23,"value":11251},". Supports NumPy data types, such as ",{"type":17,"tag":79,"props":11253,"children":11255},{"className":11254},[],[11256],{"type":23,"value":11257},"np.int64",{"type":23,"value":1895},{"type":17,"tag":79,"props":11260,"children":11262},{"className":11261},[],[11263],{"type":23,"value":11264},"np.float64",{"type":23,"value":11266},", etc. If not specified, the system will automatically infer the type based on the input data.",{"type":17,"tag":36,"props":11268,"children":11269},{},[11270,11278,11280,11285,11287,11292],{"type":17,"tag":1136,"props":11271,"children":11272},{},[11273],{"type":17,"tag":79,"props":11274,"children":11276},{"className":11275},[],[11277],{"type":23,"value":4329},{"type":23,"value":11279},": Specifies a name for the ",{"type":17,"tag":79,"props":11281,"children":11283},{"className":11282},[],[11284],{"type":23,"value":10969},{"type":23,"value":11286}," object. If this parameter is provided, the generated ",{"type":17,"tag":79,"props":11288,"children":11290},{"className":11289},[],[11291],{"type":23,"value":10969},{"type":23,"value":11293}," will have the corresponding name.",{"type":17,"tag":36,"props":11295,"children":11296},{},[11297,11305,11307,11312,11314,11319],{"type":17,"tag":1136,"props":11298,"children":11299},{},[11300],{"type":17,"tag":79,"props":11301,"children":11303},{"className":11302},[],[11304],{"type":23,"value":7198},{"type":23,"value":11306},": Whether to copy the data. If ",{"type":17,"tag":79,"props":11308,"children":11310},{"className":11309},[],[11311],{"type":23,"value":2005},{"type":23,"value":11313},", the input data will be copied. The default value is ",{"type":17,"tag":79,"props":11315,"children":11317},{"className":11316},[],[11318],{"type":23,"value":2012},{"type":23,"value":11320},", meaning no copy.",{"type":17,"tag":36,"props":11322,"children":11323},{},[11324,11333,11335,11340],{"type":17,"tag":1136,"props":11325,"children":11326},{},[11327],{"type":17,"tag":79,"props":11328,"children":11330},{"className":11329},[],[11331],{"type":23,"value":11332},"fastpath",{"type":23,"value":11334},": Whether to enable the fast path. The default is ",{"type":17,"tag":79,"props":11336,"children":11338},{"className":11337},[],[11339],{"type":23,"value":2012},{"type":23,"value":11341},". This parameter is generally used for internal optimization and may improve performance when enabled.",{"type":17,"tag":26,"props":11343,"children":11344},{},[11345],{"type":17,"tag":714,"props":11346,"children":11348},{"alt":8,"src":11347},"http://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Pandas/%E5%88%9B%E5%BB%BAseries%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E6%B3%95%20en.png",[],{"type":17,"tag":26,"props":11350,"children":11351},{},[11352,11354,11359],{"type":23,"value":11353},"Here is a basic example showing how to create a ",{"type":17,"tag":79,"props":11355,"children":11357},{"className":11356},[],[11358],{"type":23,"value":10969},{"type":23,"value":11360}," using a list:",{"type":17,"tag":275,"props":11362,"children":11365},{"className":11363,"code":11364,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create a Series\ndata = pd.Series([100, 200, 300, 400])\n\n# Output the Series\nprint(data)\n",[11366],{"type":17,"tag":79,"props":11367,"children":11368},{"__ignoreMap":8},[11369],{"type":23,"value":11364},{"type":17,"tag":26,"props":11371,"children":11372},{},[11373],{"type":23,"value":11374},"Output:",{"type":17,"tag":275,"props":11376,"children":11381},{"className":11377,"code":11379,"language":11380,"meta":8},[11378],"language-shell","0    100\n1    200\n2    300\n3    400\ndtype: int64\n","shell",[11382],{"type":17,"tag":79,"props":11383,"children":11384},{"__ignoreMap":8},[11385],{"type":23,"value":11379},{"type":17,"tag":26,"props":11387,"children":11388},{},[11389,11391,11396],{"type":23,"value":11390},"In this example, the ",{"type":17,"tag":79,"props":11392,"children":11394},{"className":11393},[],[11395],{"type":23,"value":10969},{"type":23,"value":11397}," automatically uses integer indexes starting from 0. We can access specific data using the index value:",{"type":17,"tag":275,"props":11399,"children":11402},{"className":11400,"code":11401,"language":432,"meta":8},[527],"print(data[1])  # Output 200\n",[11403],{"type":17,"tag":79,"props":11404,"children":11405},{"__ignoreMap":8},[11406],{"type":23,"value":11401},{"type":17,"tag":26,"props":11408,"children":11409},{},[11410,11412,11417],{"type":23,"value":11411},"Additionally, we can create a ",{"type":17,"tag":79,"props":11413,"children":11415},{"className":11414},[],[11416],{"type":23,"value":10969},{"type":23,"value":11418}," with custom indexes:",{"type":17,"tag":275,"props":11420,"children":11423},{"className":11421,"code":11422,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create a Series with custom indexes\ndata = pd.Series([100, 200, 300, 400], index=[\"A\", \"B\", \"C\", \"D\"])\n\n# Output the Series\nprint(data)\n",[11424],{"type":17,"tag":79,"props":11425,"children":11426},{"__ignoreMap":8},[11427],{"type":23,"value":11422},{"type":17,"tag":26,"props":11429,"children":11430},{},[11431],{"type":23,"value":11374},{"type":17,"tag":275,"props":11433,"children":11436},{"className":11434,"code":11435,"language":11380,"meta":8},[11378],"A    100\nB    200\nC    300\nD    400\ndtype: int64\n",[11437],{"type":17,"tag":79,"props":11438,"children":11439},{"__ignoreMap":8},[11440],{"type":23,"value":11435},{"type":17,"tag":26,"props":11442,"children":11443},{},[11444,11446,11451,11452,11458,11459,11465,11466,11472],{"type":23,"value":11445},"At this point, the indexes are ",{"type":17,"tag":79,"props":11447,"children":11449},{"className":11448},[],[11450],{"type":23,"value":2188},{"type":23,"value":1895},{"type":17,"tag":79,"props":11453,"children":11455},{"className":11454},[],[11456],{"type":23,"value":11457},"B",{"type":23,"value":1895},{"type":17,"tag":79,"props":11460,"children":11462},{"className":11461},[],[11463],{"type":23,"value":11464},"C",{"type":23,"value":3281},{"type":17,"tag":79,"props":11467,"children":11469},{"className":11468},[],[11470],{"type":23,"value":11471},"D",{"type":23,"value":11473},". We can use the index value to access the corresponding data:",{"type":17,"tag":275,"props":11475,"children":11478},{"className":11476,"code":11477,"language":432,"meta":8},[527],"print(data[\"A\"])  # Output 100\n",[11479],{"type":17,"tag":79,"props":11480,"children":11481},{"__ignoreMap":8},[11482],{"type":23,"value":11477},{"type":17,"tag":26,"props":11484,"children":11485},{},[11486,11488,11493,11495,11500,11502,11507],{"type":23,"value":11487},"A ",{"type":17,"tag":79,"props":11489,"children":11491},{"className":11490},[],[11492],{"type":23,"value":10969},{"type":23,"value":11494}," can also be created by passing a dictionary. The keys of the dictionary will be used as the indexes of the ",{"type":17,"tag":79,"props":11496,"children":11498},{"className":11497},[],[11499],{"type":23,"value":10969},{"type":23,"value":11501},", and the values will be used as the data of the ",{"type":17,"tag":79,"props":11503,"children":11505},{"className":11504},[],[11506],{"type":23,"value":10969},{"type":23,"value":920},{"type":17,"tag":275,"props":11509,"children":11512},{"className":11510,"code":11511,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create a Series using a dictionary\ndata_dict = {\"A\": 10, \"B\": 20, \"C\": 30, \"D\": 40}\ndata_series = pd.Series(data_dict)\n\n# Output the Series\nprint(data_series)\n",[11513],{"type":17,"tag":79,"props":11514,"children":11515},{"__ignoreMap":8},[11516],{"type":23,"value":11511},{"type":17,"tag":26,"props":11518,"children":11519},{},[11520],{"type":23,"value":11374},{"type":17,"tag":275,"props":11522,"children":11525},{"className":11523,"code":11524,"language":11380,"meta":8},[11378],"A    10\nB    20\nC    30\nD    40\ndtype: int64\n",[11526],{"type":17,"tag":79,"props":11527,"children":11528},{"__ignoreMap":8},[11529],{"type":23,"value":11524},{"type":17,"tag":26,"props":11531,"children":11532},{},[11533,11535,11540],{"type":23,"value":11534},"If not all data from the dictionary is needed, we can select part of the dictionary data by specifying an index when creating the ",{"type":17,"tag":79,"props":11536,"children":11538},{"className":11537},[],[11539],{"type":23,"value":10969},{"type":23,"value":920},{"type":17,"tag":275,"props":11542,"children":11545},{"className":11543,"code":11544,"language":432,"meta":8},[527],"# Select only part of the indexes\npartial_series = pd.Series(data_dict, index=[\"A\", \"C\"])\nprint(partial_series)\n",[11546],{"type":17,"tag":79,"props":11547,"children":11548},{"__ignoreMap":8},[11549],{"type":23,"value":11544},{"type":17,"tag":26,"props":11551,"children":11552},{},[11553],{"type":23,"value":11374},{"type":17,"tag":275,"props":11555,"children":11558},{"className":11556,"code":11557,"language":11380,"meta":8},[11378],"A    10\nC    30\ndtype: int64\n",[11559],{"type":17,"tag":79,"props":11560,"children":11561},{"__ignoreMap":8},[11562],{"type":23,"value":11557},{"type":17,"tag":26,"props":11564,"children":11565},{},[11566,11568,11573,11575,11580],{"type":23,"value":11567},"In summary, a Pandas ",{"type":17,"tag":79,"props":11569,"children":11571},{"className":11570},[],[11572],{"type":23,"value":10969},{"type":23,"value":11574}," is a very flexible and powerful data structure suitable for handling one-dimensional data with indexes. Whether it is a simple data list or complex data constructed through dictionaries and arrays, a ",{"type":17,"tag":79,"props":11576,"children":11578},{"className":11577},[],[11579],{"type":23,"value":10969},{"type":23,"value":11581}," provides powerful operations and retrieval functions, especially suitable for scenarios involving labeled data.",{"type":17,"tag":96,"props":11583,"children":11585},{"id":11584},"_2-pandas-dataframe",[11586],{"type":23,"value":11587},"2. Pandas DataFrame",{"type":17,"tag":26,"props":11589,"children":11590},{},[11591,11592,11597,11599,11604],{"type":23,"value":11014},{"type":17,"tag":79,"props":11593,"children":11595},{"className":11594},[],[11596],{"type":23,"value":10963},{"type":23,"value":11598}," is a two-dimensional, labeled data structure similar to a spreadsheet or SQL table. It can store various types of data (such as integers, floats, strings, timestamps, etc.) and can combine different types of data for processing. The ",{"type":17,"tag":79,"props":11600,"children":11602},{"className":11601},[],[11603],{"type":23,"value":10963},{"type":23,"value":11605}," is one of the most commonly used data structures in the Pandas library, widely used for data analysis, cleaning, and manipulation.",{"type":17,"tag":26,"props":11607,"children":11608},{},[11609,11611,11616],{"type":23,"value":11610},"The main features of a ",{"type":17,"tag":79,"props":11612,"children":11614},{"className":11613},[],[11615],{"type":23,"value":10963},{"type":23,"value":11028},{"type":17,"tag":235,"props":11618,"children":11619},{},[11620,11636,11646,11656,11671,11693],{"type":17,"tag":36,"props":11621,"children":11622},{},[11623,11628,11629,11634],{"type":17,"tag":1136,"props":11624,"children":11625},{},[11626],{"type":23,"value":11627},"Two-dimensional data structure",{"type":23,"value":11041},{"type":17,"tag":79,"props":11630,"children":11632},{"className":11631},[],[11633],{"type":23,"value":10963},{"type":23,"value":11635}," is a tabular data structure with rows and columns, supporting multiple data types.",{"type":17,"tag":36,"props":11637,"children":11638},{},[11639,11644],{"type":17,"tag":1136,"props":11640,"children":11641},{},[11642],{"type":23,"value":11643},"Flexible row and column indexes",{"type":23,"value":11645},": Both rows and columns have corresponding labels (indexes), supporting custom or automatically generated integer indexes. Indexes can be used for quick data location.",{"type":17,"tag":36,"props":11647,"children":11648},{},[11649,11654],{"type":17,"tag":1136,"props":11650,"children":11651},{},[11652],{"type":23,"value":11653},"Heterogeneous data types",{"type":23,"value":11655},": Different columns can store different types of data (e.g., one column can be strings, another can be floats).",{"type":17,"tag":36,"props":11657,"children":11658},{},[11659,11663,11664,11669],{"type":17,"tag":1136,"props":11660,"children":11661},{},[11662],{"type":23,"value":11082},{"type":23,"value":11084},{"type":17,"tag":79,"props":11665,"children":11667},{"className":11666},[],[11668],{"type":23,"value":10963},{"type":23,"value":11670}," objects, Pandas automatically aligns data based on row and column indexes.",{"type":17,"tag":36,"props":11672,"children":11673},{},[11674,11678,11679,11684,11686,11691],{"type":17,"tag":1136,"props":11675,"children":11676},{},[11677],{"type":23,"value":11099},{"type":23,"value":11041},{"type":17,"tag":79,"props":11680,"children":11682},{"className":11681},[],[11683],{"type":23,"value":10963},{"type":23,"value":11685}," supports missing values, usually represented by ",{"type":17,"tag":79,"props":11687,"children":11689},{"className":11688},[],[11690],{"type":23,"value":11113},{"type":23,"value":11692},", and provides rich methods to handle missing data.",{"type":17,"tag":36,"props":11694,"children":11695},{},[11696,11701,11702,11707],{"type":17,"tag":1136,"props":11697,"children":11698},{},[11699],{"type":23,"value":11700},"Rich operation functions",{"type":23,"value":11041},{"type":17,"tag":79,"props":11703,"children":11705},{"className":11704},[],[11706],{"type":23,"value":10963},{"type":23,"value":11708}," provides flexible operations on data, such as adding and deleting rows and columns, filtering, sorting, merging, and grouping.",{"type":17,"tag":26,"props":11710,"children":11711},{},[11712,11713,11718,11720,11726],{"type":23,"value":11151},{"type":17,"tag":79,"props":11714,"children":11716},{"className":11715},[],[11717],{"type":23,"value":10963},{"type":23,"value":11719}," using the ",{"type":17,"tag":79,"props":11721,"children":11723},{"className":11722},[],[11724],{"type":23,"value":11725},"pd.DataFrame()",{"type":23,"value":11727}," constructor, passing in data in various forms (such as dictionaries, lists, NumPy arrays, etc.).",{"type":17,"tag":275,"props":11729,"children":11732},{"className":11730,"code":11731,"language":432,"meta":8},[527],"# Constructor and parameters\npandas.DataFrame(data=None, index=None, columns=None, dtype=None, copy=False)\n",[11733],{"type":17,"tag":79,"props":11734,"children":11735},{"__ignoreMap":8},[11736],{"type":23,"value":11731},{"type":17,"tag":26,"props":11738,"children":11739},{},[11740],{"type":23,"value":11180},{"type":17,"tag":235,"props":11742,"children":11743},{},[11744,11770,11790,11811,11830],{"type":17,"tag":36,"props":11745,"children":11746},{},[11747,11755,11756,11761,11763,11768],{"type":17,"tag":1136,"props":11748,"children":11749},{},[11750],{"type":17,"tag":79,"props":11751,"children":11753},{"className":11752},[],[11754],{"type":23,"value":594},{"type":23,"value":11196},{"type":17,"tag":79,"props":11757,"children":11759},{"className":11758},[],[11760],{"type":23,"value":10963},{"type":23,"value":11762},", which can be a dictionary, list, two-dimensional array, NumPy array, or another ",{"type":17,"tag":79,"props":11764,"children":11766},{"className":11765},[],[11767],{"type":23,"value":10963},{"type":23,"value":11769},". Different data structures have different default behaviors. For example, dictionary keys are used as column names, and lists are used as row data.",{"type":17,"tag":36,"props":11771,"children":11772},{},[11773,11781,11783,11788],{"type":17,"tag":1136,"props":11774,"children":11775},{},[11776],{"type":17,"tag":79,"props":11777,"children":11779},{"className":11778},[],[11780],{"type":23,"value":11222},{"type":23,"value":11782},": The row index of the ",{"type":17,"tag":79,"props":11784,"children":11786},{"className":11785},[],[11787],{"type":23,"value":10963},{"type":23,"value":11789},". If not specified, Pandas will generate an integer index starting from 0.",{"type":17,"tag":36,"props":11791,"children":11792},{},[11793,11802,11804,11809],{"type":17,"tag":1136,"props":11794,"children":11795},{},[11796],{"type":17,"tag":79,"props":11797,"children":11799},{"className":11798},[],[11800],{"type":23,"value":11801},"columns",{"type":23,"value":11803},": The column labels of the ",{"type":17,"tag":79,"props":11805,"children":11807},{"className":11806},[],[11808],{"type":23,"value":10963},{"type":23,"value":11810},". If not specified, Pandas will automatically use the keys of the input data (e.g., dictionary keys) or integer indexes starting from 0.",{"type":17,"tag":36,"props":11812,"children":11813},{},[11814,11822,11823,11828],{"type":17,"tag":1136,"props":11815,"children":11816},{},[11817],{"type":17,"tag":79,"props":11818,"children":11820},{"className":11819},[],[11821],{"type":23,"value":6791},{"type":23,"value":11244},{"type":17,"tag":79,"props":11824,"children":11826},{"className":11825},[],[11827],{"type":23,"value":10963},{"type":23,"value":11829},". It can be a NumPy data type. If not specified, Pandas will automatically infer the type based on the input data.",{"type":17,"tag":36,"props":11831,"children":11832},{},[11833,11841,11843,11848,11850,11855],{"type":17,"tag":1136,"props":11834,"children":11835},{},[11836],{"type":17,"tag":79,"props":11837,"children":11839},{"className":11838},[],[11840],{"type":23,"value":7198},{"type":23,"value":11842},": Whether to copy the data. The default is ",{"type":17,"tag":79,"props":11844,"children":11846},{"className":11845},[],[11847],{"type":23,"value":2012},{"type":23,"value":11849},", meaning no copy. If set to ",{"type":17,"tag":79,"props":11851,"children":11853},{"className":11852},[],[11854],{"type":23,"value":2005},{"type":23,"value":11856},", the input data will be copied.",{"type":17,"tag":26,"props":11858,"children":11859},{},[11860,11862],{"type":23,"value":11861},"Here are some simple examples of creating a ",{"type":17,"tag":79,"props":11863,"children":11865},{"className":11864},[],[11866],{"type":23,"value":10963},{"type":17,"tag":26,"props":11868,"children":11869},{},[11870],{"type":17,"tag":714,"props":11871,"children":11873},{"alt":8,"src":11872},"http://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Pandas/%E5%88%9B%E5%BB%BAdataframe%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E6%B3%95%20en.png",[],{"type":17,"tag":26,"props":11875,"children":11876},{},[11877,11879,11884],{"type":23,"value":11878},"One of the most common ways to create a ",{"type":17,"tag":79,"props":11880,"children":11882},{"className":11881},[],[11883],{"type":23,"value":10963},{"type":23,"value":11885}," is by using a dictionary, where the keys of the dictionary become the column names and the values become the column data:",{"type":17,"tag":275,"props":11887,"children":11890},{"className":11888,"code":11889,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create DataFrame using a dictionary\ndata = {\n    \"Name\": [\"Tom\", \"Jerry\", \"Spike\"],\n    \"Age\": [28, 22, 25],\n    \"Score\": [85, 92, 78]\n}\n\ndf = pd.DataFrame(data)\n\n# Output DataFrame\nprint(df)\n",[11891],{"type":17,"tag":79,"props":11892,"children":11893},{"__ignoreMap":8},[11894],{"type":23,"value":11889},{"type":17,"tag":26,"props":11896,"children":11897},{},[11898],{"type":23,"value":11374},{"type":17,"tag":275,"props":11900,"children":11903},{"className":11901,"code":11902,"language":11380,"meta":8},[11378],"    Name  Age  Score\n0    Tom   28     85\n1  Jerry   22     92\n2  Spike   25     78\n",[11904],{"type":17,"tag":79,"props":11905,"children":11906},{"__ignoreMap":8},[11907],{"type":23,"value":11902},{"type":17,"tag":26,"props":11909,"children":11910},{},[11911,11913,11919,11920,11926,11927,11933],{"type":23,"value":11912},"In this example, the keys ",{"type":17,"tag":79,"props":11914,"children":11916},{"className":11915},[],[11917],{"type":23,"value":11918},"Name",{"type":23,"value":1895},{"type":17,"tag":79,"props":11921,"children":11923},{"className":11922},[],[11924],{"type":23,"value":11925},"Age",{"type":23,"value":3281},{"type":17,"tag":79,"props":11928,"children":11930},{"className":11929},[],[11931],{"type":23,"value":11932},"Score",{"type":23,"value":11934}," of the dictionary become the column names, and the list data becomes the values of each column. Pandas automatically generates integer indexes starting from 0.",{"type":17,"tag":26,"props":11936,"children":11937},{},[11938,11940,11945],{"type":23,"value":11939},"Besides using a dictionary, we can also create a ",{"type":17,"tag":79,"props":11941,"children":11943},{"className":11942},[],[11944],{"type":23,"value":10963},{"type":23,"value":11946}," using a list of nested lists, where each nested list represents a row of data:",{"type":17,"tag":518,"props":11948,"children":11949},{":editable":520,":show-in-col":520,"max-height":521},[11950],{"type":17,"tag":275,"props":11951,"children":11954},{"className":11952,"code":11953,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create DataFrame using nested lists\ndata = [\n    [\"Tom\", 28, 85],\n    [\"Jerry\", 22, 92],\n    [\"Spike\", 25, 78]\n]\n\ndf = pd.DataFrame(data, columns=[\"Name\", \"Age\", \"Score\"])\n\n# Output DataFrame\nprint(df)\n",[11955],{"type":17,"tag":79,"props":11956,"children":11957},{"__ignoreMap":8},[11958],{"type":23,"value":11953},{"type":17,"tag":26,"props":11960,"children":11961},{},[11962,11964,11969,11971,11976],{"type":23,"value":11963},"Here, the ",{"type":17,"tag":79,"props":11965,"children":11967},{"className":11966},[],[11968],{"type":23,"value":11801},{"type":23,"value":11970}," parameter explicitly specifies the column names, and each sublist in the list corresponds to a row in the ",{"type":17,"tag":79,"props":11972,"children":11974},{"className":11973},[],[11975],{"type":23,"value":10963},{"type":23,"value":1517},{"type":17,"tag":26,"props":11978,"children":11979},{},[11980],{"type":23,"value":11981},"Based on the flexibility of pandas, we can also create a DataFrame using a NumPy array, which is suitable for large numerical datasets:",{"type":17,"tag":518,"props":11983,"children":11984},{":editable":520,":show-in-col":520,"max-height":521},[11985],{"type":17,"tag":275,"props":11986,"children":11989},{"className":11987,"code":11988,"language":432,"meta":8},[527],"import pandas as pd\nimport numpy as np\n\n# Create DataFrame using a NumPy array\ndata = np.array([[85, 28], [92, 22], [78, 25]])\n\ndf = pd.DataFrame(data, columns=[\"Score\", \"Age\"], index=[\"Tom\", \"Jerry\", \"Spike\"])\n\n# Output DataFrame\nprint(df)\n",[11990],{"type":17,"tag":79,"props":11991,"children":11992},{"__ignoreMap":8},[11993],{"type":23,"value":11988},{"type":17,"tag":26,"props":11995,"children":11996},{},[11997,11999,12004,12006,12011],{"type":23,"value":11998},"In this example, we use the ",{"type":17,"tag":79,"props":12000,"children":12002},{"className":12001},[],[12003],{"type":23,"value":11222},{"type":23,"value":12005}," parameter to specify custom labels for the rows of the ",{"type":17,"tag":79,"props":12007,"children":12009},{"className":12008},[],[12010],{"type":23,"value":10963},{"type":23,"value":1517},{"type":17,"tag":26,"props":12013,"children":12014},{},[12015],{"type":23,"value":12016},"Finally, if the data is stored in the form of a list of dictionaries (such as JSON), we can directly pass the list of dictionaries:",{"type":17,"tag":518,"props":12018,"children":12019},{":editable":520,":show-in-col":520,"max-height":521},[12020],{"type":17,"tag":275,"props":12021,"children":12024},{"className":12022,"code":12023,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create DataFrame using a list of dictionaries\ndata = [\n    {\"Name\": \"Tom\", \"Age\": 28, \"Score\": 85},\n    {\"Name\": \"Jerry\", \"Age\": 22, \"Score\": 92},\n    {\"Name\": \"Spike\", \"Age\": 25, \"Score\": 78}\n]\n\ndf = pd.DataFrame(data)\n\n# Output DataFrame\nprint(df)\n",[12025],{"type":17,"tag":79,"props":12026,"children":12027},{"__ignoreMap":8},[12028],{"type":23,"value":12023},{"type":17,"tag":26,"props":12030,"children":12031},{},[12032,12034,12039],{"type":23,"value":12033},"For ",{"type":17,"tag":79,"props":12035,"children":12037},{"className":12036},[],[12038],{"type":23,"value":10963},{"type":23,"value":12040},", the following common operations are available:",{"type":17,"tag":32,"props":12042,"children":12043},{},[12044],{"type":17,"tag":36,"props":12045,"children":12046},{},[12047],{"type":23,"value":12048},"Accessing columns: You can access specific columns by column name.",{"type":17,"tag":518,"props":12050,"children":12051},{":editable":520,":show-in-col":520,"max-height":521},[12052],{"type":17,"tag":275,"props":12053,"children":12056},{"className":12054,"code":12055,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create DataFrame\ndata = {\n    \"Name\": [\"Tom\", \"Jerry\", \"Spike\"],\n    \"Age\": [28, 22, 25],\n    \"Score\": [85, 92, 78]\n}\ndf = pd.DataFrame(data)\n\n# Access the Name column\nprint(df[\"Name\"])\n",[12057],{"type":17,"tag":79,"props":12058,"children":12059},{"__ignoreMap":8},[12060],{"type":23,"value":12055},{"type":17,"tag":32,"props":12062,"children":12063},{"start":11},[12064],{"type":17,"tag":36,"props":12065,"children":12066},{},[12067],{"type":23,"value":12068},"Adding new columns: You can easily add new columns using assignment statements.",{"type":17,"tag":518,"props":12070,"children":12071},{":editable":520,":show-in-col":520,"max-height":521},[12072],{"type":17,"tag":275,"props":12073,"children":12076},{"className":12074,"code":12075,"language":432,"meta":8},[527],"# Add a new column City\ndf[\"City\"] = [\"NY\", \"LA\", \"SF\"]\n\n# Output DataFrame\nprint(df)\n",[12077],{"type":17,"tag":79,"props":12078,"children":12079},{"__ignoreMap":8},[12080],{"type":23,"value":12075},{"type":17,"tag":32,"props":12082,"children":12083},{"start":375},[12084],{"type":17,"tag":36,"props":12085,"children":12086},{},[12087,12089,12095],{"type":23,"value":12088},"Deleting columns: Use the ",{"type":17,"tag":79,"props":12090,"children":12092},{"className":12091},[],[12093],{"type":23,"value":12094},"drop()",{"type":23,"value":12096}," method to delete columns.",{"type":17,"tag":518,"props":12098,"children":12099},{":editable":520,":show-in-col":520,"max-height":521},[12100],{"type":17,"tag":275,"props":12101,"children":12104},{"className":12102,"code":12103,"language":432,"meta":8},[527],"# Delete the Age column\ndf_dropped = df.drop(\"Age\", axis=1)\n\n# Output the DataFrame after deletion\nprint(df_dropped)\n",[12105],{"type":17,"tag":79,"props":12106,"children":12107},{"__ignoreMap":8},[12108],{"type":23,"value":12103},{"type":17,"tag":32,"props":12110,"children":12111},{"start":1858},[12112],{"type":17,"tag":36,"props":12113,"children":12114},{},[12115],{"type":23,"value":12116},"Filtering data: You can filter data using conditional expressions.",{"type":17,"tag":518,"props":12118,"children":12119},{":editable":520,":show-in-col":520,"max-height":521},[12120],{"type":17,"tag":275,"props":12121,"children":12124},{"className":12122,"code":12123,"language":432,"meta":8},[527],"# Filter data with Score greater than 80\nfiltered_df = df[df[\"Score\"] > 80]\n\n# Output the filtered results\nprint(filtered_df)\n",[12125],{"type":17,"tag":79,"props":12126,"children":12127},{"__ignoreMap":8},[12128],{"type":23,"value":12123},{"type":17,"tag":32,"props":12130,"children":12131},{"start":8271},[12132],{"type":17,"tag":36,"props":12133,"children":12134},{},[12135,12137,12142],{"type":23,"value":12136},"Calculating statistical information: ",{"type":17,"tag":79,"props":12138,"children":12140},{"className":12139},[],[12141],{"type":23,"value":10963},{"type":23,"value":12143}," provides rich statistical methods. The following example shows how to calculate the mean and descriptive statistics:",{"type":17,"tag":518,"props":12145,"children":12146},{":editable":520,":show-in-col":520,"max-height":521},[12147],{"type":17,"tag":275,"props":12148,"children":12151},{"className":12149,"code":12150,"language":432,"meta":8},[527],"# Calculate the mean\nmean_score = df[\"Score\"].mean()\nprint(f\"Average Score: {mean_score}\")\n\n# Output descriptive statistics of the DataFrame\nprint(df.describe())\n",[12152],{"type":17,"tag":79,"props":12153,"children":12154},{"__ignoreMap":8},[12155],{"type":23,"value":12150},{"type":17,"tag":32,"props":12157,"children":12159},{"start":12158},6,[12160],{"type":17,"tag":36,"props":12161,"children":12162},{},[12163,12165,12171,12173,12179],{"type":23,"value":12164},"Handling missing values: You can check for missing values using ",{"type":17,"tag":79,"props":12166,"children":12168},{"className":12167},[],[12169],{"type":23,"value":12170},"isna()",{"type":23,"value":12172}," and fill missing values using ",{"type":17,"tag":79,"props":12174,"children":12176},{"className":12175},[],[12177],{"type":23,"value":12178},"fillna()",{"type":23,"value":12180},". The following example shows how to handle missing data:",{"type":17,"tag":518,"props":12182,"children":12183},{":editable":520,":show-in-col":520,"max-height":521},[12184],{"type":17,"tag":275,"props":12185,"children":12188},{"className":12186,"code":12187,"language":432,"meta":8},[527],"# Create a DataFrame with missing values\ndata_with_na = {\n    \"Name\": [\"Tom\", \"Jerry\", \"Spike\"],\n    \"Age\": [28, None, 25],\n    \"Score\": [85, 92, None]\n}\ndf_with_na = pd.DataFrame(data_with_na)\n\n# Check for missing values\nprint(df_with_na.isna())\n\n# Fill missing values\ndf_filled = df_with_na.fillna(0)\n\n# Output the DataFrame after filling missing values\nprint(df_filled)\n",[12189],{"type":17,"tag":79,"props":12190,"children":12191},{"__ignoreMap":8},[12192],{"type":23,"value":12187},{"type":17,"tag":26,"props":12194,"children":12195},{},[12196,12198,12203,12205,12210],{"type":23,"value":12197},"In summary, the Pandas ",{"type":17,"tag":79,"props":12199,"children":12201},{"className":12200},[],[12202],{"type":23,"value":10963},{"type":23,"value":12204}," is a powerful and flexible two-dimensional data structure widely used in various data analysis tasks. Whether handling numerical data, time series, or structured tabular data, the ",{"type":17,"tag":79,"props":12206,"children":12208},{"className":12207},[],[12209],{"type":23,"value":10963},{"type":23,"value":12211}," provides efficient and convenient methods for operations and processing.",{"type":17,"tag":18,"props":12213,"children":12215},{"id":12214},"_3-pandas-and-common-file-formats",[12216],{"type":23,"value":12217},"3. Pandas and Common File Formats",{"type":17,"tag":96,"props":12219,"children":12221},{"id":12220},"_1-pandas-and-csv",[12222],{"type":23,"value":12223},"1. Pandas and CSV",{"type":17,"tag":26,"props":12225,"children":12226},{},[12227,12229,12235],{"type":23,"value":12228},"CSV (Comma-Separated Values) is a common file format known for its simplicity and lightweight nature, widely used for data transfer and storage. Pandas is a powerful tool in Python for data analysis and processing, which can easily read, analyze, and process CSV files. This article uses a classic ",{"type":17,"tag":79,"props":12230,"children":12232},{"className":12231},[],[12233],{"type":23,"value":12234},"example.csv",{"type":23,"value":12236}," file as an example to demonstrate common Pandas operations. Save the following data locally and store it in .csv format, and perform operations with the code.",{"type":17,"tag":275,"props":12238,"children":12243},{"className":12239,"code":12241,"language":12242,"meta":8},[12240],"language-csv","ID,Name,Age,Gender,Department,Salary,HireDate,PerformanceScore,City\n1,John Smith,28,Male,Sales,50000,2018-05-21,85,New York\n2,Mary Johnson,34,Female,HR,62000,2017-03-15,92,Los Angeles\n3,James Brown,45,Male,IT,72000,2015-09-30,78,Chicago\n4,Patricia Garcia,29,Female,Finance,55000,2019-07-11,88,Houston\n5,Robert Martinez,41,Male,Marketing,68000,2016-04-20,80,Miami\n6,Linda Anderson,36,Female,Sales,59000,2018-11-12,90,Boston\n7,Michael Wilson,38,Male,HR,63000,2017-06-07,86,San Francisco\n8,Elizabeth Taylor,30,Female,IT,74000,2019-02-23,75,Dallas\n9,David Lee,25,Male,Finance,52000,2020-08-14,82,Austin\n10,Barbara Hernandez,32,Female,Marketing,67000,2017-10-19,83,Seattle\n11,William Clark,29,Male,Sales,56000,2019-12-01,81,Denver\n12,Jennifer Lewis,35,Female,HR,60000,2018-01-27,87,Las Vegas\n13,Joseph Walker,40,Male,IT,73000,2015-05-10,76,San Diego\n14,Susan Hall,33,Female,Finance,56000,2018-09-18,89,New Orleans\n15,Charles Young,50,Male,Marketing,78000,2014-11-05,90,Portland\n16,Karen King,26,Female,Sales,48000,2020-02-10,84,Columbus\n17,Thomas Wright,37,Male,HR,61000,2016-07-15,82,Charlotte\n18,Lisa Scott,31,Female,IT,75000,2019-04-29,74,Detroit\n19,Christopher Green,47,Male,Finance,70000,2014-06-19,79,Indianapolis\n20,Amy Adams,27,Female,Marketing,53000,2019-01-20,85,Nashville\n21,Mark Baker,44,Male,Sales,68000,2015-10-03,88,Jacksonville\n22,Sarah Gonzalez,39,Female,HR,62000,2017-08-23,81,Memphis\n23,Paul Nelson,33,Male,IT,72000,2016-05-09,77,Fort Worth\n24,Donna Mitchell,42,Female,Finance,69000,2016-12-27,91,El Paso\n25,Steven Perez,28,Male,Marketing,55000,2020-03-05,80,Milwaukee\n26,Nancy Roberts,31,Female,Sales,52000,2019-10-15,86,Baltimore\n27,Matthew Turner,46,Male,HR,60000,2014-08-21,82,Louisville\n28,Dorothy Phillips,34,Female,IT,76000,2016-01-12,74,Oklahoma City\n29,Ronald Campbell,43,Male,Finance,72000,2015-03-19,87,Albuquerque\n30,Laura Parker,30,Female,Marketing,57000,2020-06-07,80,Kansas City\n","csv",[12244],{"type":17,"tag":79,"props":12245,"children":12246},{"__ignoreMap":8},[12247],{"type":23,"value":12241},{"type":17,"tag":26,"props":12249,"children":12250},{},[12251],{"type":17,"tag":714,"props":12252,"children":12254},{"alt":8,"src":12253},"http://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Pandas/csv%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B%20en.png",[],{"type":17,"tag":32,"props":12256,"children":12257},{},[12258],{"type":17,"tag":36,"props":12259,"children":12260},{},[12261,12263,12269,12271,12276],{"type":23,"value":12262},"Read CSV file: Use ",{"type":17,"tag":79,"props":12264,"children":12266},{"className":12265},[],[12267],{"type":23,"value":12268},"pd.read_csv()",{"type":23,"value":12270}," to read a CSV file into a Pandas ",{"type":17,"tag":79,"props":12272,"children":12274},{"className":12273},[],[12275],{"type":23,"value":10963},{"type":23,"value":12277}," object.",{"type":17,"tag":275,"props":12279,"children":12282},{"className":12280,"code":12281,"language":432,"meta":8},[527],"import pandas as pd\n\n# Read CSV file\ndf = pd.read_csv('example.csv')\n\n# Display the first few rows of data\nprint(df.to_string())\n",[12283],{"type":17,"tag":79,"props":12284,"children":12285},{"__ignoreMap":8},[12286],{"type":23,"value":12281},{"type":17,"tag":836,"props":12288,"children":12289},{},[12290],{"type":17,"tag":26,"props":12291,"children":12292},{},[12293,12297,12303],{"type":17,"tag":2020,"props":12294,"children":12295},{},[12296],{"type":23,"value":2024},{"type":17,"tag":79,"props":12298,"children":12300},{"className":12299},[],[12301],{"type":23,"value":12302},"to_string()",{"type":23,"value":12304}," is used to print the entire DataFrame, avoiding Pandas' default behavior of displaying only the first and last 5 rows. If the file is large, it is not recommended to use this method as the output can be very large.",{"type":17,"tag":32,"props":12306,"children":12307},{"start":11},[12308],{"type":17,"tag":36,"props":12309,"children":12310},{},[12311,12313],{"type":23,"value":12312},"View specified head and tail rows:",{"type":17,"tag":235,"props":12314,"children":12315},{},[12316,12343],{"type":17,"tag":36,"props":12317,"children":12318},{},[12319,12321,12327,12329,12334,12336,12341],{"type":23,"value":12320},"Use ",{"type":17,"tag":79,"props":12322,"children":12324},{"className":12323},[],[12325],{"type":23,"value":12326},"head(n)",{"type":23,"value":12328}," to display the first ",{"type":17,"tag":79,"props":12330,"children":12332},{"className":12331},[],[12333],{"type":23,"value":7927},{"type":23,"value":12335}," rows of the dataset. If ",{"type":17,"tag":79,"props":12337,"children":12339},{"className":12338},[],[12340],{"type":23,"value":7927},{"type":23,"value":12342}," is not specified, the first 5 rows are returned by default.",{"type":17,"tag":36,"props":12344,"children":12345},{},[12346,12347,12353,12355,12360,12361,12366],{"type":23,"value":12320},{"type":17,"tag":79,"props":12348,"children":12350},{"className":12349},[],[12351],{"type":23,"value":12352},"tail(n)",{"type":23,"value":12354}," to display the last ",{"type":17,"tag":79,"props":12356,"children":12358},{"className":12357},[],[12359],{"type":23,"value":7927},{"type":23,"value":12335},{"type":17,"tag":79,"props":12362,"children":12364},{"className":12363},[],[12365],{"type":23,"value":7927},{"type":23,"value":12367}," is not specified, the last 5 rows are returned by default.",{"type":17,"tag":275,"props":12369,"children":12372},{"className":12370,"code":12371,"language":432,"meta":8},[527],"# Display the first 5 rows (default)\nprint(df.head())\n\n# Display the first 10 rows\nprint(df.head(10))\n\n# Display the last 5 rows (default)\nprint(df.tail())\n\n# Display the last 10 rows\nprint(df.tail(10))\n\n",[12373],{"type":17,"tag":79,"props":12374,"children":12375},{"__ignoreMap":8},[12376],{"type":23,"value":12371},{"type":17,"tag":32,"props":12378,"children":12379},{"start":375},[12380],{"type":17,"tag":36,"props":12381,"children":12382},{},[12383,12385,12391],{"type":23,"value":12384},"Get basic information: Use the ",{"type":17,"tag":79,"props":12386,"children":12388},{"className":12387},[],[12389],{"type":23,"value":12390},"info()",{"type":23,"value":12392}," method to get basic information about the data, such as column names, data types, and the number of non-null values.",{"type":17,"tag":275,"props":12394,"children":12397},{"className":12395,"code":12396,"language":432,"meta":8},[527],"# Get basic information about the data\ndf.info()\n",[12398],{"type":17,"tag":79,"props":12399,"children":12400},{"__ignoreMap":8},[12401],{"type":23,"value":12396},{"type":17,"tag":32,"props":12403,"children":12404},{"start":1858},[12405],{"type":17,"tag":36,"props":12406,"children":12407},{},[12408,12410,12416],{"type":23,"value":12409},"Calculate statistics: The ",{"type":17,"tag":79,"props":12411,"children":12413},{"className":12412},[],[12414],{"type":23,"value":12415},"describe()",{"type":23,"value":12417}," method can quickly get statistical information for numerical columns, such as mean, standard deviation, minimum, and maximum values.",{"type":17,"tag":275,"props":12419,"children":12422},{"className":12420,"code":12421,"language":432,"meta":8},[527],"# Calculate statistical information for numerical columns\nprint(df.describe())\n",[12423],{"type":17,"tag":79,"props":12424,"children":12425},{"__ignoreMap":8},[12426],{"type":23,"value":12421},{"type":17,"tag":32,"props":12428,"children":12429},{"start":8271},[12430],{"type":17,"tag":36,"props":12431,"children":12432},{},[12433],{"type":23,"value":12434},"Filter data: You can filter data based on conditions, such as filtering employees older than 30 and with a salary over 60000.",{"type":17,"tag":275,"props":12436,"children":12439},{"className":12437,"code":12438,"language":432,"meta":8},[527],"filtered_df = df[(df[\"Age\"] > 30) & (df[\"Salary\"] > 60000)]\nprint(filtered_df)\n",[12440],{"type":17,"tag":79,"props":12441,"children":12442},{"__ignoreMap":8},[12443],{"type":23,"value":12438},{"type":17,"tag":32,"props":12445,"children":12446},{"start":12158},[12447],{"type":17,"tag":36,"props":12448,"children":12449},{},[12450],{"type":23,"value":12451},"Save the modified DataFrame",{"type":17,"tag":275,"props":12453,"children":12456},{"className":12454,"code":12455,"language":432,"meta":8},[527],"# Save as a new CSV file\ndf.to_csv('example_modified.csv', index=False)\n",[12457],{"type":17,"tag":79,"props":12458,"children":12459},{"__ignoreMap":8},[12460],{"type":23,"value":12455},{"type":17,"tag":96,"props":12462,"children":12464},{"id":12463},"_2-pandas-and-json",[12465],{"type":23,"value":12466},"2. Pandas and JSON",{"type":17,"tag":26,"props":12468,"children":12469},{},[12470],{"type":23,"value":12471},"Pandas is also very efficient at handling JSON data, converting JSON data structures into DataFrames, thereby simplifying complex nested data formats. JSON (JavaScript Object Notation) is a lightweight data interchange format widely used in web development and API responses. This article will demonstrate how to use Pandas to handle JSON data.",{"type":17,"tag":26,"props":12473,"children":12474},{},[12475],{"type":23,"value":12476},"We use a JSON data example containing employee information:",{"type":17,"tag":275,"props":12478,"children":12483},{"className":12479,"code":12481,"language":12482,"meta":8},[12480],"language-json","[\n    {\"ID\": 1, \"Name\": \"John Smith\", \"Age\": 28, \"Gender\": \"Male\", \"Department\": \"Sales\", \"Salary\": 50000, \"HireDate\": \"2018-05-21\", \"PerformanceScore\": 85, \"City\": \"New York\"},\n    {\"ID\": 2, \"Name\": \"Mary Johnson\", \"Age\": 34, \"Gender\": \"Female\", \"Department\": \"HR\", \"Salary\": 62000, \"HireDate\": \"2017-03-15\", \"PerformanceScore\": 92, \"City\": \"Los Angeles\"},\n    {\"ID\": 3, \"Name\": \"James Brown\", \"Age\": 45, \"Gender\": \"Male\", \"Department\": \"IT\", \"Salary\": 72000, \"HireDate\": \"2015-09-30\", \"PerformanceScore\": 78, \"City\": \"Chicago\"}\n]\n","json",[12484],{"type":17,"tag":79,"props":12485,"children":12486},{"__ignoreMap":8},[12487],{"type":23,"value":12481},{"type":17,"tag":32,"props":12489,"children":12490},{},[12491],{"type":17,"tag":36,"props":12492,"children":12493},{},[12494,12496,12502],{"type":23,"value":12495},"Read JSON file: Pandas can directly read JSON files using ",{"type":17,"tag":79,"props":12497,"children":12499},{"className":12498},[],[12500],{"type":23,"value":12501},"pd.read_json()",{"type":23,"value":12503},". The JSON data format supports lists, dictionaries, and more complex nested structures.",{"type":17,"tag":275,"props":12505,"children":12508},{"className":12506,"code":12507,"language":432,"meta":8},[527],"import pandas as pd\n\n# Read JSON file\ndf = pd.read_json('example.json')\n\n# Display data\nprint(df.to_string())\n",[12509],{"type":17,"tag":79,"props":12510,"children":12511},{"__ignoreMap":8},[12512],{"type":23,"value":12507},{"type":17,"tag":32,"props":12514,"children":12515},{"start":11},[12516],{"type":17,"tag":36,"props":12517,"children":12518},{},[12519],{"type":23,"value":12520},"Handle JSON with nested structures: JSON files may contain nested structures, and Pandas can handle these nested fields. For deeply nested JSON structures, it is usually necessary to first flatten or extract the nested fields into separate columns.",{"type":17,"tag":26,"props":12522,"children":12523},{},[12524,12526,12532],{"type":23,"value":12525},"Assume the JSON data has a nested ",{"type":17,"tag":79,"props":12527,"children":12529},{"className":12528},[],[12530],{"type":23,"value":12531},"Address",{"type":23,"value":12533}," field:",{"type":17,"tag":275,"props":12535,"children":12538},{"className":12536,"code":12537,"language":12482,"meta":8},[12480],"{\n    \"ID\": 1,\n    \"Name\": \"John Smith\",\n    \"Age\": 28,\n    \"Address\": {\"City\": \"New York\", \"PostalCode\": \"10001\"},\n    \"Department\": \"Sales\",\n    \"Salary\": 50000,\n    \"HireDate\": \"2018-05-21\"\n}\n",[12539],{"type":17,"tag":79,"props":12540,"children":12541},{"__ignoreMap":8},[12542],{"type":23,"value":12537},{"type":17,"tag":26,"props":12544,"children":12545},{},[12546,12548,12554],{"type":23,"value":12547},"You can use Pandas' ",{"type":17,"tag":79,"props":12549,"children":12551},{"className":12550},[],[12552],{"type":23,"value":12553},"json_normalize",{"type":23,"value":12555}," method to flatten the nested fields:",{"type":17,"tag":275,"props":12557,"children":12560},{"className":12558,"code":12559,"language":432,"meta":8},[527],"import pandas as pd\nfrom pandas import json_normalize\n\n# Nested JSON data\ndata = {\n    \"ID\": 1,\n    \"Name\": \"John Smith\",\n    \"Age\": 28,\n    \"Address\": {\"City\": \"New York\", \"PostalCode\": \"10001\"},\n    \"Department\": \"Sales\",\n    \"Salary\": 50000,\n    \"HireDate\": \"2018-05-21\"\n}\n\n# Use json_normalize to flatten nested fields\ndf = json_normalize(data)\nprint(df.to_string())\n",[12561],{"type":17,"tag":79,"props":12562,"children":12563},{"__ignoreMap":8},[12564],{"type":23,"value":12559},{"type":17,"tag":26,"props":12566,"children":12567},{},[12568],{"type":23,"value":11374},{"type":17,"tag":275,"props":12570,"children":12573},{"className":12571,"code":12572,"language":11380,"meta":8},[11378],"   ID        Name  Age  Department  Salary    HireDate  Address.City  Address.PostalCode\n0   1  John Smith   28      Sales    50000  2018-05-21     New York              10001\n",[12574],{"type":17,"tag":79,"props":12575,"children":12576},{"__ignoreMap":8},[12577],{"type":23,"value":12572},{"type":17,"tag":26,"props":12579,"children":12580},{},[12581,12583,12588],{"type":23,"value":12582},"For complex JSON files, such as multi-layer nested JSON data from APIs, ",{"type":17,"tag":79,"props":12584,"children":12586},{"className":12585},[],[12587],{"type":23,"value":12553},{"type":23,"value":12589}," can also flatten multiple nested layers based on the path. For example, assume the JSON data has more nested levels:",{"type":17,"tag":275,"props":12591,"children":12594},{"className":12592,"code":12593,"language":12482,"meta":8},[12480],"{\n    \"ID\": 1,\n    \"Name\": \"John Smith\",\n    \"Details\": {\n        \"Age\": 28,\n        \"Address\": {\n            \"City\": \"New York\",\n            \"PostalCode\": \"10001\"\n        }\n    },\n    \"Department\": \"Sales\",\n    \"Salary\": 50000,\n    \"HireDate\": \"2018-05-21\"\n}\n",[12595],{"type":17,"tag":79,"props":12596,"children":12597},{"__ignoreMap":8},[12598],{"type":23,"value":12593},{"type":17,"tag":26,"props":12600,"children":12601},{},[12602],{"type":23,"value":12603},"You can specify the path to flatten multiple nested layers:",{"type":17,"tag":275,"props":12605,"children":12608},{"className":12606,"code":12607,"language":432,"meta":8},[527],"import pandas as pd\nfrom pandas import json_normalize\n\n# Complex nested JSON data\ndata = {\n    \"ID\": 1,\n    \"Name\": \"John Smith\",\n    \"Details\": {\n        \"Age\": 28,\n        \"Address\": {\n            \"City\": \"New York\",\n            \"PostalCode\": \"10001\"\n        }\n    },\n    \"Department\": \"Sales\",\n    \"Salary\": 50000,\n    \"HireDate\": \"2018-05-21\"\n}\n\n# Flatten nested layers\ndf = json_normalize(data, sep='_')\nprint(df.to_string())\n",[12609],{"type":17,"tag":79,"props":12610,"children":12611},{"__ignoreMap":8},[12612],{"type":23,"value":12607},{"type":17,"tag":26,"props":12614,"children":12615},{},[12616],{"type":23,"value":11374},{"type":17,"tag":275,"props":12618,"children":12621},{"className":12619,"code":12620,"language":11380,"meta":8},[11378],"   ID        Name  Details_Age  Details_Address_City  Details_Address_PostalCode  Department  Salary    HireDate\n0   1  John Smith           28              New York                      10001       Sales   50000  2018-05-21\n",[12622],{"type":17,"tag":79,"props":12623,"children":12624},{"__ignoreMap":8},[12625],{"type":23,"value":12620},{"type":17,"tag":26,"props":12627,"children":12628},{},[12629,12631,12637],{"type":23,"value":12630},"Here we used ",{"type":17,"tag":79,"props":12632,"children":12634},{"className":12633},[],[12635],{"type":23,"value":12636},"sep='_'",{"type":23,"value":12638}," to control the naming format of the flattened nested fields, making the DataFrame clearer and easier to read.",{"type":17,"tag":32,"props":12640,"children":12641},{"start":375},[12642],{"type":17,"tag":36,"props":12643,"children":12644},{},[12645,12647,12653],{"type":23,"value":12646},"Save DataFrame as JSON: After processing the JSON data, you can save it back to JSON format. Pandas provides the ",{"type":17,"tag":79,"props":12648,"children":12650},{"className":12649},[],[12651],{"type":23,"value":12652},"to_json()",{"type":23,"value":12654}," method to accomplish this task.",{"type":17,"tag":275,"props":12656,"children":12659},{"className":12657,"code":12658,"language":432,"meta":8},[527],"# Save DataFrame as JSON file\ndf.to_json('output.json', orient='records', lines=True)\n",[12660],{"type":17,"tag":79,"props":12661,"children":12662},{"__ignoreMap":8},[12663],{"type":23,"value":12658},{"type":17,"tag":235,"props":12665,"children":12666},{},[12667,12678],{"type":17,"tag":36,"props":12668,"children":12669},{},[12670,12676],{"type":17,"tag":79,"props":12671,"children":12673},{"className":12672},[],[12674],{"type":23,"value":12675},"orient='records'",{"type":23,"value":12677}," specifies to output each row as a JSON object.",{"type":17,"tag":36,"props":12679,"children":12680},{},[12681,12687],{"type":17,"tag":79,"props":12682,"children":12684},{"className":12683},[],[12685],{"type":23,"value":12686},"lines=True",{"type":23,"value":12688}," is used to output a multi-line JSON file, with each line being a separate JSON record, suitable for handling large datasets.",{"type":17,"tag":26,"props":12690,"children":12691},{},[12692],{"type":23,"value":12693},"In summary, Pandas is a powerful tool for handling JSON data, especially for complex nested JSON. Pandas provides convenient tools to convert data into tabular format for easy analysis and manipulation. With Pandas, we can easily read, process, and store JSON data, simplifying the data analysis process.",{"type":17,"tag":18,"props":12695,"children":12697},{"id":12696},"_4-pandas-and-data-cleaning",[12698],{"type":23,"value":12699},"4. Pandas and Data Cleaning",{"type":17,"tag":26,"props":12701,"children":12702},{},[12703],{"type":23,"value":12704},"Data cleaning is the process of handling useless data. In practice, it is common to encounter missing data, incorrect data formats, erroneous data, or duplicate data. To make the results of data analysis more accurate, these useless data need to be processed. Pandas provides a variety of functions to help clean, inspect, and correct issues in the data.",{"type":17,"tag":96,"props":12706,"children":12708},{"id":12707},"_1-handling-missing-values",[12709],{"type":23,"value":12710},"1. Handling Missing Values",{"type":17,"tag":26,"props":12712,"children":12713},{},[12714],{"type":23,"value":12715},"Handling missing values is a very common and fundamental task in data cleaning. Pandas provides rich methods to find, count, and handle these missing values. Below, we will explain in detail how to effectively use Pandas to handle missing values, especially the best practices for deleting missing values.",{"type":17,"tag":26,"props":12717,"children":12718},{},[12719],{"type":17,"tag":714,"props":12720,"children":12722},{"alt":8,"src":12721},"http://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Pandas/%E7%A9%BA%E5%80%BC%E7%9A%84%E5%A4%84%E7%90%86%20en.png",[],{"type":17,"tag":32,"props":12724,"children":12725},{},[12726],{"type":17,"tag":36,"props":12727,"children":12728},{},[12729,12731,12736,12737,12743,12745,12750],{"type":23,"value":12730},"Find Missing Values: To find missing values in the data, you can use the ",{"type":17,"tag":79,"props":12732,"children":12734},{"className":12733},[],[12735],{"type":23,"value":12170},{"type":23,"value":880},{"type":17,"tag":79,"props":12738,"children":12740},{"className":12739},[],[12741],{"type":23,"value":12742},"isnull()",{"type":23,"value":12744}," methods. These two methods are equivalent and will return a boolean DataFrame where ",{"type":17,"tag":79,"props":12746,"children":12748},{"className":12747},[],[12749],{"type":23,"value":2005},{"type":23,"value":12751}," indicates the value is missing.",{"type":17,"tag":275,"props":12753,"children":12756},{"className":12754,"code":12755,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create data with missing values\ndata = {\n    \"Name\": [\"Alice\", \"Bob\", None],\n    \"Age\": [25, None, 30],\n    \"Salary\": [50000, 60000, None]\n}\ndf = pd.DataFrame(data)\n\n# Find missing values\nprint(df.isna())\n",[12757],{"type":17,"tag":79,"props":12758,"children":12759},{"__ignoreMap":8},[12760],{"type":23,"value":12755},{"type":17,"tag":26,"props":12762,"children":12763},{},[12764],{"type":23,"value":11374},{"type":17,"tag":275,"props":12766,"children":12769},{"className":12767,"code":12768,"language":11380,"meta":8},[11378],"    Name    Age  Salary\n0  False  False   False\n1  False   True   False\n2   True  False    True\n",[12770],{"type":17,"tag":79,"props":12771,"children":12772},{"__ignoreMap":8},[12773],{"type":23,"value":12768},{"type":17,"tag":836,"props":12775,"children":12776},{},[12777,12816],{"type":17,"tag":26,"props":12778,"children":12779},{},[12780,12784,12786,12791,12793,12799,12800,12806,12808,12814],{"type":17,"tag":2020,"props":12781,"children":12782},{},[12783],{"type":23,"value":2024},{"type":23,"value":12785},"\nIt should be noted that in some cases, missing values may not only appear as standard ",{"type":17,"tag":79,"props":12787,"children":12789},{"className":12788},[],[12790],{"type":23,"value":11113},{"type":23,"value":12792},", but also in other forms such as ",{"type":17,"tag":79,"props":12794,"children":12796},{"className":12795},[],[12797],{"type":23,"value":12798},"\"n/a\"",{"type":23,"value":880},{"type":17,"tag":79,"props":12801,"children":12803},{"className":12802},[],[12804],{"type":23,"value":12805},"\"--\"",{"type":23,"value":12807},". Pandas provides the ",{"type":17,"tag":79,"props":12809,"children":12811},{"className":12810},[],[12812],{"type":23,"value":12813},"na_values",{"type":23,"value":12815}," parameter, allowing us to specify these custom missing value types when reading data.",{"type":17,"tag":275,"props":12817,"children":12820},{"className":12818,"code":12819,"language":432,"meta":8},[527],"# Custom missing value forms\nmissing_values = [\"n/a\", \"na\", \"--\"]\ndf = pd.read_csv('example.csv', na_values=missing_values)\n",[12821],{"type":17,"tag":79,"props":12822,"children":12823},{"__ignoreMap":8},[12824],{"type":23,"value":12819},{"type":17,"tag":32,"props":12826,"children":12827},{"start":11},[12828],{"type":17,"tag":36,"props":12829,"children":12830},{},[12831,12833,12838,12839,12844,12846,12851,12853,12858],{"type":23,"value":12832},"Count Missing Values: You can combine the ",{"type":17,"tag":79,"props":12834,"children":12836},{"className":12835},[],[12837],{"type":23,"value":12170},{"type":23,"value":86},{"type":17,"tag":79,"props":12840,"children":12842},{"className":12841},[],[12843],{"type":23,"value":8310},{"type":23,"value":12845}," methods to count the number of missing values in each column. The boolean values returned by ",{"type":17,"tag":79,"props":12847,"children":12849},{"className":12848},[],[12850],{"type":23,"value":12170},{"type":23,"value":12852}," can be summed using ",{"type":17,"tag":79,"props":12854,"children":12856},{"className":12855},[],[12857],{"type":23,"value":8310},{"type":23,"value":12859},", showing the number of missing values in each column.",{"type":17,"tag":275,"props":12861,"children":12864},{"className":12862,"code":12863,"language":432,"meta":8},[527],"# Count the number of missing values in each column\nprint(df.isna().sum())\n",[12865],{"type":17,"tag":79,"props":12866,"children":12867},{"__ignoreMap":8},[12868],{"type":23,"value":12863},{"type":17,"tag":26,"props":12870,"children":12871},{},[12872],{"type":23,"value":11374},{"type":17,"tag":275,"props":12874,"children":12877},{"className":12875,"code":12876,"language":11380,"meta":8},[11378],"Name      1\nAge       1\nSalary    1\ndtype: int64\n",[12878],{"type":17,"tag":79,"props":12879,"children":12880},{"__ignoreMap":8},[12881],{"type":23,"value":12876},{"type":17,"tag":32,"props":12883,"children":12884},{"start":375},[12885],{"type":17,"tag":36,"props":12886,"children":12887},{},[12888,12890,12896,12898,12903],{"type":23,"value":12889},"Delete Missing Values: When handling missing values, deleting rows or columns containing missing values is a common operation, especially when the proportion of missing data is large. You can use the ",{"type":17,"tag":79,"props":12891,"children":12893},{"className":12892},[],[12894],{"type":23,"value":12895},"dropna()",{"type":23,"value":12897}," method to delete missing values. ",{"type":17,"tag":79,"props":12899,"children":12901},{"className":12900},[],[12902],{"type":23,"value":12895},{"type":23,"value":12904}," provides a variety of flexible parameters to decide whether to delete entire rows or columns, or only under certain conditions.",{"type":17,"tag":275,"props":12906,"children":12909},{"className":12907,"code":12908,"language":432,"meta":8},[527],"# Syntax:\nDataFrame.dropna(axis=0, how='any', thresh=None, subset=None, inplace=False)\n",[12910],{"type":17,"tag":79,"props":12911,"children":12912},{"__ignoreMap":8},[12913],{"type":23,"value":12908},{"type":17,"tag":26,"props":12915,"children":12916},{},[12917],{"type":23,"value":12918},"Parameter explanation:",{"type":17,"tag":235,"props":12920,"children":12921},{},[12922,12946,12973,12999,13010],{"type":17,"tag":36,"props":12923,"children":12924},{},[12925,12930,12932,12937,12939,12944],{"type":17,"tag":79,"props":12926,"children":12928},{"className":12927},[],[12929],{"type":23,"value":8377},{"type":23,"value":12931},": Specifies the direction of deletion. The default is ",{"type":17,"tag":79,"props":12933,"children":12935},{"className":12934},[],[12936],{"type":23,"value":1915},{"type":23,"value":12938},", which deletes entire rows containing missing values; if set to ",{"type":17,"tag":79,"props":12940,"children":12942},{"className":12941},[],[12943],{"type":23,"value":1893},{"type":23,"value":12945},", it deletes entire columns containing missing values.",{"type":17,"tag":36,"props":12947,"children":12948},{},[12949,12955,12957,12963,12965,12971],{"type":17,"tag":79,"props":12950,"children":12952},{"className":12951},[],[12953],{"type":23,"value":12954},"how",{"type":23,"value":12956},": Specifies the condition for deletion. The default value is ",{"type":17,"tag":79,"props":12958,"children":12960},{"className":12959},[],[12961],{"type":23,"value":12962},"'any'",{"type":23,"value":12964},", which deletes if any value in a row or column is missing; if set to ",{"type":17,"tag":79,"props":12966,"children":12968},{"className":12967},[],[12969],{"type":23,"value":12970},"'all'",{"type":23,"value":12972},", it deletes only if all values in a row or column are missing.",{"type":17,"tag":36,"props":12974,"children":12975},{},[12976,12982,12984,12989,12991,12997],{"type":17,"tag":79,"props":12977,"children":12979},{"className":12978},[],[12980],{"type":23,"value":12981},"thresh",{"type":23,"value":12983},": Sets a threshold, requiring the row or column to have at least ",{"type":17,"tag":79,"props":12985,"children":12987},{"className":12986},[],[12988],{"type":23,"value":12981},{"type":23,"value":12990}," non-missing values to be retained. For example, if ",{"type":17,"tag":79,"props":12992,"children":12994},{"className":12993},[],[12995],{"type":23,"value":12996},"thresh=2",{"type":23,"value":12998},", it means retaining rows or columns with at least two non-missing values.",{"type":17,"tag":36,"props":13000,"children":13001},{},[13002,13008],{"type":17,"tag":79,"props":13003,"children":13005},{"className":13004},[],[13006],{"type":23,"value":13007},"subset",{"type":23,"value":13009},": Specifies the columns to check for missing values. If you only need to check specific columns, you can pass a list of column names.",{"type":17,"tag":36,"props":13011,"children":13012},{},[13013,13019,13021,13026,13028,13033],{"type":17,"tag":79,"props":13014,"children":13016},{"className":13015},[],[13017],{"type":23,"value":13018},"inplace",{"type":23,"value":13020},": If set to ",{"type":17,"tag":79,"props":13022,"children":13024},{"className":13023},[],[13025],{"type":23,"value":2005},{"type":23,"value":13027},", the deletion operation will be performed on the original DataFrame and will not return a new object; if ",{"type":17,"tag":79,"props":13029,"children":13031},{"className":13030},[],[13032],{"type":23,"value":2012},{"type":23,"value":13034}," (default), it will return a new DataFrame.",{"type":17,"tag":26,"props":13036,"children":13037},{},[13038,13040,13045],{"type":23,"value":13039},"Run the following examples separately to see the comparison with the original ",{"type":17,"tag":79,"props":13041,"children":13043},{"className":13042},[],[13044],{"type":23,"value":10963},{"type":23,"value":920},{"type":17,"tag":275,"props":13047,"children":13050},{"className":13048,"code":13049,"language":432,"meta":8},[527],"# Delete rows containing any missing values\ndf_cleaned = df.dropna()\nprint(df_cleaned)\n\n# Delete rows with missing values only in 'Name' and 'Age' columns\ndf_cleaned_subset = df.dropna(subset=['Name', 'Age'])\nprint(df_cleaned_subset)\n\n# Delete rows containing all missing values\ndf_cleaned_all = df.dropna(how='all')\nprint(df_cleaned_all)\n\n# Retain rows with at least two non-missing values\ndf_thresh = df.dropna(thresh=2)\nprint(df_thresh)\n",[13051],{"type":17,"tag":79,"props":13052,"children":13053},{"__ignoreMap":8},[13054],{"type":23,"value":13049},{"type":17,"tag":26,"props":13056,"children":13057},{},[13058],{"type":23,"value":11374},{"type":17,"tag":275,"props":13060,"children":13063},{"className":13061,"code":13062,"language":11380,"meta":8},[11378],"# Original DataFrame\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob   NaN  60000.0\n2   None  30.0      NaN\n\n# Delete rows containing any missing values:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n\n# Delete rows with missing values only in 'Name' and 'Age' columns:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n\n# Delete rows containing all missing values:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob   NaN  60000.0\n2   None  30.0      NaN\n\n# Retain rows with at least two non-missing values:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob   NaN  60000.0\n",[13064],{"type":17,"tag":79,"props":13065,"children":13066},{"__ignoreMap":8},[13067],{"type":23,"value":13062},{"type":17,"tag":32,"props":13069,"children":13070},{"start":1858},[13071],{"type":17,"tag":36,"props":13072,"children":13073},{},[13074,13076,13081],{"type":23,"value":13075},"Fill Missing Values: Sometimes we do not want to delete data, but rather retain as much information as possible by filling in the missing values. The ",{"type":17,"tag":79,"props":13077,"children":13079},{"className":13078},[],[13080],{"type":23,"value":12178},{"type":23,"value":13082}," method can be used to fill missing values, with common strategies including filling with a fixed value, mean, median, or neighboring values.",{"type":17,"tag":275,"props":13084,"children":13087},{"className":13085,"code":13086,"language":432,"meta":8},[527],"# Fill all missing values with 0\ndf_filled_zero = df.fillna(0)\nprint(df_filled_zero)\n\n# Fill missing values with the previous valid value (forward fill)\ndf_filled_ffill = df.fillna(method='ffill')\nprint(df_filled_ffill)\n\n# Fill missing values with the next valid value (backward fill)\ndf_filled_bfill = df.fillna(method='bfill')\nprint(df_filled_bfill)\n\n# Fill missing values in each column with the column's mean (example with 'Age' column)\ndf['Age'] = df['Age'].fillna(df['Age'].mean())\nprint(df)\n",[13088],{"type":17,"tag":79,"props":13089,"children":13090},{"__ignoreMap":8},[13091],{"type":23,"value":13086},{"type":17,"tag":26,"props":13093,"children":13094},{},[13095],{"type":23,"value":13096},"Run the above code separately, and the results are as follows:",{"type":17,"tag":275,"props":13098,"children":13101},{"className":13099,"code":13100,"language":11380,"meta":8},[11378],"# Original DataFrame\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob   NaN  60000.0\n2   None  30.0      NaN\n\n# Fill all missing values with 0:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob   0.0  60000.0\n2      0  30.0      0.0\n\n# Fill missing values in 'Age' column with the column's mean:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob  27.5  60000.0\n2   None  30.0      NaN\n\n# Fill missing values with the previous valid value:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob  25.0  60000.0\n2    Bob  30.0  60000.0\n\n# Fill missing values with the next valid value:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob  30.0  60000.0\n2   None  30.0      NaN\n",[13102],{"type":17,"tag":79,"props":13103,"children":13104},{"__ignoreMap":8},[13105],{"type":23,"value":13100},{"type":17,"tag":26,"props":13107,"children":13108},{},[13109,13111,13116,13117,13122],{"type":23,"value":13110},"Pandas provides powerful functions for handling missing values, including finding, counting, deleting, and filling. In data cleaning, the choice of appropriate missing value handling methods depends on the specific situation of the data. By using ",{"type":17,"tag":79,"props":13112,"children":13114},{"className":13113},[],[13115],{"type":23,"value":12895},{"type":23,"value":86},{"type":17,"tag":79,"props":13118,"children":13120},{"className":13119},[],[13121],{"type":23,"value":12178},{"type":23,"value":13123}," appropriately, you can effectively maintain data integrity and the accuracy of analysis results.",{"type":17,"tag":96,"props":13125,"children":13127},{"id":13126},"_2-handling-duplicate-values",[13128],{"type":23,"value":13129},"2. Handling Duplicate Values",{"type":17,"tag":26,"props":13131,"children":13132},{},[13133],{"type":23,"value":13134},"Duplicate data can lead to biased analysis results, so it is necessary to remove duplicates.",{"type":17,"tag":26,"props":13136,"children":13137},{},[13138],{"type":17,"tag":714,"props":13139,"children":13141},{"alt":8,"src":13140},"http://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Pandas/%E9%87%8D%E5%A4%8D%E5%80%BC%E7%9A%84%E5%A4%84%E7%90%86%20en.png",[],{"type":17,"tag":32,"props":13143,"children":13144},{},[13145],{"type":17,"tag":36,"props":13146,"children":13147},{},[13148,13150,13156],{"type":23,"value":13149},"Finding Duplicate Data: You can use the ",{"type":17,"tag":79,"props":13151,"children":13153},{"className":13152},[],[13154],{"type":23,"value":13155},"duplicated()",{"type":23,"value":13157}," method to find duplicate data. This method returns a boolean sequence indicating whether each row is a duplicate.",{"type":17,"tag":518,"props":13159,"children":13160},{":editable":520,":show-in-col":520,"max-height":521},[13161],{"type":17,"tag":275,"props":13162,"children":13165},{"className":13163,"code":13164,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create a sample DataFrame\ndata = {\n    'Name': ['Alice', 'Bob', 'Alice', 'David', 'Bob'],\n    'Age': [25, 30, 25, 35, 30],\n    'City': ['New York', 'Los Angeles', 'New York', 'Chicago', 'Los Angeles']\n}\ndf = pd.DataFrame(data)\n\n# Find duplicate rows\nprint(df.duplicated())\n",[13166],{"type":17,"tag":79,"props":13167,"children":13168},{"__ignoreMap":8},[13169],{"type":23,"value":13164},{"type":17,"tag":32,"props":13171,"children":13172},{"start":11},[13173],{"type":17,"tag":36,"props":13174,"children":13175},{},[13176,13178,13184,13186,13191],{"type":23,"value":13177},"Removing Duplicate Data: You can use the ",{"type":17,"tag":79,"props":13179,"children":13181},{"className":13180},[],[13182],{"type":23,"value":13183},"drop_duplicates()",{"type":23,"value":13185}," method to remove duplicate rows. By using the ",{"type":17,"tag":79,"props":13187,"children":13189},{"className":13188},[],[13190],{"type":23,"value":13007},{"type":23,"value":13192}," parameter, you can specify the columns to check for duplicates. If not specified, all columns are checked.",{"type":17,"tag":518,"props":13194,"children":13195},{":editable":520,":show-in-col":520,"max-height":521},[13196],{"type":17,"tag":275,"props":13197,"children":13200},{"className":13198,"code":13199,"language":432,"meta":8},[527],"# Remove duplicate rows\ndf_unique = df.drop_duplicates()\nprint(df_unique)\n\n# Remove duplicate rows based only on the 'Name' column\ndf_unique_name = df.drop_duplicates(subset=['Name'])\nprint(df_unique_name)\n",[13201],{"type":17,"tag":79,"props":13202,"children":13203},{"__ignoreMap":8},[13204],{"type":23,"value":13199},{"type":17,"tag":96,"props":13206,"children":13208},{"id":13207},"_3-converting-data-types",[13209],{"type":23,"value":13210},"3. Converting Data Types",{"type":17,"tag":26,"props":13212,"children":13213},{},[13214,13216,13222],{"type":23,"value":13215},"Sometimes, data may have incorrect data types, such as an age field stored as a string. You can use the ",{"type":17,"tag":79,"props":13217,"children":13219},{"className":13218},[],[13220],{"type":23,"value":13221},"astype()",{"type":23,"value":13223}," method to convert columns to the correct data type.",{"type":17,"tag":275,"props":13225,"children":13228},{"className":13226,"code":13227,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create a sample DataFrame\ndata = {\n    'Name': ['Alice', 'Bob', 'Charlie', 'David'],\n    'Age': ['25', '30', '35', '40'],\n    'City': ['New York', 'Los Angeles', 'Chicago', 'Houston']\n}\ndf = pd.DataFrame(data)\n\n# Convert the 'Age' column to integer type\ndf['Age'] = df['Age'].astype(int)\n\n# View the data types of the DataFrame\nprint(df.dtypes)\n",[13229],{"type":17,"tag":79,"props":13230,"children":13231},{"__ignoreMap":8},[13232],{"type":23,"value":13227},{"type":17,"tag":26,"props":13234,"children":13235},{},[13236],{"type":23,"value":11374},{"type":17,"tag":275,"props":13238,"children":13241},{"className":13239,"code":13240,"language":11380,"meta":8},[11378],"Name    object\nAge      int64\nCity    object\ndtype: object\n",[13242],{"type":17,"tag":79,"props":13243,"children":13244},{"__ignoreMap":8},[13245],{"type":23,"value":13240},{"type":17,"tag":26,"props":13247,"children":13248},{},[13249,13251,13257,13258,13264],{"type":23,"value":13250},"Sometimes, the data type may be correct, but the data format is incorrect. For example, a date column may contain dates in multiple formats. We can use ",{"type":17,"tag":79,"props":13252,"children":13254},{"className":13253},[],[13255],{"type":23,"value":13256},"to_datetime",{"type":23,"value":86},{"type":17,"tag":79,"props":13259,"children":13261},{"className":13260},[],[13262],{"type":23,"value":13263},"strftime",{"type":23,"value":13265}," to unify the format:",{"type":17,"tag":518,"props":13267,"children":13268},{":editable":520,":show-in-col":520,"max-height":521},[13269],{"type":17,"tag":275,"props":13270,"children":13273},{"className":13271,"code":13272,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create a DataFrame with multiple date formats\ndata = {'Date': ['2023-01-01 12:34:56', '2023/02/02', '03/04/2023', '2023-05-06T10:11:12Z']}\ndf = pd.DataFrame(data)\n\n# Use the to_datetime() function, specifying error handling as coerce, and try multiple common date formats\ndf['Date'] = pd.to_datetime(df['Date'], errors='coerce', infer_datetime_format=True)\n\n# Unify the date format to \"YYYY-MM-DD\"\ndf['Date'] = df['Date'].dt.strftime('%Y-%m-%d')\n\nprint(df)\n",[13274],{"type":17,"tag":79,"props":13275,"children":13276},{"__ignoreMap":8},[13277],{"type":23,"value":13272},{"type":17,"tag":96,"props":13279,"children":13281},{"id":13280},"_5-data-standardization",[13282],{"type":23,"value":13283},"5. Data Standardization",{"type":17,"tag":26,"props":13285,"children":13286},{},[13287],{"type":23,"value":13288},"To ensure data standardization, you can convert string fields to lowercase or uppercase, or remove extra spaces.",{"type":17,"tag":275,"props":13290,"children":13293},{"className":13291,"code":13292,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create a sample DataFrame\ndata = {\n    'Name': [' Alice ', 'Bob', ' CHARLIE ', 'David '],\n    'Age': [25, 30, 35, 40],\n    'City': ['New York', 'Los Angeles', 'Chicago', 'Houston']\n}\ndf = pd.DataFrame(data)\n\n# Convert the 'Name' column to lowercase\ndf['Name'] = df['Name'].str.lower()\n\n# Remove extra spaces in the 'Name' column\ndf['Name'] = df['Name'].str.strip()\n\n# Output the processed DataFrame\nprint(df)\n",[13294],{"type":17,"tag":79,"props":13295,"children":13296},{"__ignoreMap":8},[13297],{"type":23,"value":13292},{"type":17,"tag":275,"props":13299,"children":13302},{"className":13300,"code":13301,"language":11380,"meta":8},[11378],"Name  Age         City\n0    alice   25     New York\n1      bob   30  Los Angeles\n2  charlie   35      Chicago\n3    david   40      Houston\n",[13303],{"type":17,"tag":79,"props":13304,"children":13305},{"__ignoreMap":8},[13306],{"type":23,"value":13301},{"type":17,"tag":18,"props":13308,"children":13310},{"id":13309},"_5-summary-of-common-pandas-functions",[13311],{"type":23,"value":13312},"5. Summary of Common Pandas Functions",{"type":17,"tag":96,"props":13314,"children":13316},{"id":13315},"_1-reading-viewing-and-cleaning-data",[13317],{"type":23,"value":13318},"1. Reading, Viewing, and Cleaning Data",{"type":17,"tag":26,"props":13320,"children":13321},{},[13322],{"type":23,"value":13323},"In the above article, we learned the most basic functions of Pandas:",{"type":17,"tag":1211,"props":13325,"children":13326},{},[13327,13342],{"type":17,"tag":1215,"props":13328,"children":13329},{},[13330],{"type":17,"tag":1219,"props":13331,"children":13332},{},[13333,13338],{"type":17,"tag":1223,"props":13334,"children":13335},{},[13336],{"type":23,"value":13337},"Function",{"type":17,"tag":1223,"props":13339,"children":13340},{},[13341],{"type":23,"value":1232},{"type":17,"tag":1234,"props":13343,"children":13344},{},[13345,13358,13371,13384,13397,13410,13423,13436,13449,13462,13475,13488,13501,13514,13527],{"type":17,"tag":1219,"props":13346,"children":13347},{},[13348,13353],{"type":17,"tag":1241,"props":13349,"children":13350},{},[13351],{"type":23,"value":13352},"pd.read_csv(filename)",{"type":17,"tag":1241,"props":13354,"children":13355},{},[13356],{"type":23,"value":13357},"Read a CSV file;",{"type":17,"tag":1219,"props":13359,"children":13360},{},[13361,13366],{"type":17,"tag":1241,"props":13362,"children":13363},{},[13364],{"type":23,"value":13365},"pd.read_excel(filename)",{"type":17,"tag":1241,"props":13367,"children":13368},{},[13369],{"type":23,"value":13370},"Read an Excel file;",{"type":17,"tag":1219,"props":13372,"children":13373},{},[13374,13379],{"type":17,"tag":1241,"props":13375,"children":13376},{},[13377],{"type":23,"value":13378},"pd.read_sql(query, connection_object)",{"type":17,"tag":1241,"props":13380,"children":13381},{},[13382],{"type":23,"value":13383},"Read data from an SQL database;",{"type":17,"tag":1219,"props":13385,"children":13386},{},[13387,13392],{"type":17,"tag":1241,"props":13388,"children":13389},{},[13390],{"type":23,"value":13391},"pd.read_json(json_string)",{"type":17,"tag":1241,"props":13393,"children":13394},{},[13395],{"type":23,"value":13396},"Read data from a JSON string;",{"type":17,"tag":1219,"props":13398,"children":13399},{},[13400,13405],{"type":17,"tag":1241,"props":13401,"children":13402},{},[13403],{"type":23,"value":13404},"pd.read_html(url)",{"type":17,"tag":1241,"props":13406,"children":13407},{},[13408],{"type":23,"value":13409},"Read data from an HTML page;",{"type":17,"tag":1219,"props":13411,"children":13412},{},[13413,13418],{"type":17,"tag":1241,"props":13414,"children":13415},{},[13416],{"type":23,"value":13417},"df.head(n)",{"type":17,"tag":1241,"props":13419,"children":13420},{},[13421],{"type":23,"value":13422},"Display the first n rows of data;",{"type":17,"tag":1219,"props":13424,"children":13425},{},[13426,13431],{"type":17,"tag":1241,"props":13427,"children":13428},{},[13429],{"type":23,"value":13430},"df.tail(n)",{"type":17,"tag":1241,"props":13432,"children":13433},{},[13434],{"type":23,"value":13435},"Display the last n rows of data;",{"type":17,"tag":1219,"props":13437,"children":13438},{},[13439,13444],{"type":17,"tag":1241,"props":13440,"children":13441},{},[13442],{"type":23,"value":13443},"df.info()",{"type":17,"tag":1241,"props":13445,"children":13446},{},[13447],{"type":23,"value":13448},"Display information about the data, including column names, data types, and missing values;",{"type":17,"tag":1219,"props":13450,"children":13451},{},[13452,13457],{"type":17,"tag":1241,"props":13453,"children":13454},{},[13455],{"type":23,"value":13456},"df.describe()",{"type":17,"tag":1241,"props":13458,"children":13459},{},[13460],{"type":23,"value":13461},"Display basic statistical information about the data, including mean, variance, maximum, minimum, etc.;",{"type":17,"tag":1219,"props":13463,"children":13464},{},[13465,13470],{"type":17,"tag":1241,"props":13466,"children":13467},{},[13468],{"type":23,"value":13469},"df.shape",{"type":17,"tag":1241,"props":13471,"children":13472},{},[13473],{"type":23,"value":13474},"Display the number of rows and columns in the data;",{"type":17,"tag":1219,"props":13476,"children":13477},{},[13478,13483],{"type":17,"tag":1241,"props":13479,"children":13480},{},[13481],{"type":23,"value":13482},"df.dropna()",{"type":17,"tag":1241,"props":13484,"children":13485},{},[13486],{"type":23,"value":13487},"Remove rows or columns with missing values;",{"type":17,"tag":1219,"props":13489,"children":13490},{},[13491,13496],{"type":17,"tag":1241,"props":13492,"children":13493},{},[13494],{"type":23,"value":13495},"df.fillna(value)",{"type":17,"tag":1241,"props":13497,"children":13498},{},[13499],{"type":23,"value":13500},"Replace missing values with the specified value;",{"type":17,"tag":1219,"props":13502,"children":13503},{},[13504,13509],{"type":17,"tag":1241,"props":13505,"children":13506},{},[13507],{"type":23,"value":13508},"df.replace(old_value, new_value)",{"type":17,"tag":1241,"props":13510,"children":13511},{},[13512],{"type":23,"value":13513},"Replace specified values with new values;",{"type":17,"tag":1219,"props":13515,"children":13516},{},[13517,13522],{"type":17,"tag":1241,"props":13518,"children":13519},{},[13520],{"type":23,"value":13521},"df.duplicated()",{"type":17,"tag":1241,"props":13523,"children":13524},{},[13525],{"type":23,"value":13526},"Check for duplicate data;",{"type":17,"tag":1219,"props":13528,"children":13529},{},[13530,13535],{"type":17,"tag":1241,"props":13531,"children":13532},{},[13533],{"type":23,"value":13534},"df.drop_duplicates()",{"type":17,"tag":1241,"props":13536,"children":13537},{},[13538],{"type":23,"value":13539},"Remove duplicate data.",{"type":17,"tag":96,"props":13541,"children":13543},{"id":13542},"_2-data-selection-and-slicing",[13544],{"type":23,"value":13545},"2. Data Selection and Slicing",{"type":17,"tag":32,"props":13547,"children":13548},{},[13549],{"type":17,"tag":36,"props":13550,"children":13551},{},[13552,13554],{"type":23,"value":13553},"Directly access a column by its name: ",{"type":17,"tag":79,"props":13555,"children":13557},{"className":13556},[],[13558],{"type":23,"value":13559},"df[column_name]",{"type":17,"tag":518,"props":13561,"children":13562},{":editable":520,":show-in-col":520,"max-height":521},[13563],{"type":17,"tag":275,"props":13564,"children":13567},{"className":13565,"code":13566,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create a DataFrame\ndata = {'Name': ['Alice', 'Bob', 'Charlie'], 'Age': [25, 30, 28]}\ndf = pd.DataFrame(data)\n\n# Select the 'Age' column\nage_column = df['Age']\nprint(age_column)\n",[13568],{"type":17,"tag":79,"props":13569,"children":13570},{"__ignoreMap":8},[13571],{"type":23,"value":13566},{"type":17,"tag":32,"props":13573,"children":13574},{"start":11},[13575],{"type":17,"tag":36,"props":13576,"children":13577},{},[13578,13580],{"type":23,"value":13579},"Select data by label: ",{"type":17,"tag":79,"props":13581,"children":13583},{"className":13582},[],[13584],{"type":23,"value":13585},"df.loc[row_index, column_name]",{"type":17,"tag":518,"props":13587,"children":13588},{":editable":520,":show-in-col":520,"max-height":521},[13589],{"type":17,"tag":275,"props":13590,"children":13593},{"className":13591,"code":13592,"language":432,"meta":8},[527],"# Select the first row, 'Name' column\nfirst_name = df.loc[0, 'Name']\nprint(first_name)\n",[13594],{"type":17,"tag":79,"props":13595,"children":13596},{"__ignoreMap":8},[13597],{"type":23,"value":13592},{"type":17,"tag":32,"props":13599,"children":13600},{"start":375},[13601],{"type":17,"tag":36,"props":13602,"children":13603},{},[13604,13606],{"type":23,"value":13605},"Select data by index: ",{"type":17,"tag":79,"props":13607,"children":13609},{"className":13608},[],[13610],{"type":23,"value":13611},"df.iloc[row_index, column_index]",{"type":17,"tag":518,"props":13613,"children":13614},{":editable":520,":show-in-col":520,"max-height":521},[13615],{"type":17,"tag":275,"props":13616,"children":13619},{"className":13617,"code":13618,"language":432,"meta":8},[527],"# Select the second row, first column (index starts from 0)\nsecond_row_first_column = df.iloc[1, 0]\nprint(second_row_first_column)\n",[13620],{"type":17,"tag":79,"props":13621,"children":13622},{"__ignoreMap":8},[13623],{"type":23,"value":13618},{"type":17,"tag":32,"props":13625,"children":13626},{"start":1858},[13627],{"type":17,"tag":36,"props":13628,"children":13629},{},[13630,13632],{"type":23,"value":13631},"Select multiple columns by a list of column names: ",{"type":17,"tag":79,"props":13633,"children":13635},{"className":13634},[],[13636],{"type":23,"value":13637},"df.filter(items=[column_name1, column_name2])",{"type":17,"tag":518,"props":13639,"children":13640},{":editable":520,":show-in-col":520,"max-height":521},[13641],{"type":17,"tag":275,"props":13642,"children":13645},{"className":13643,"code":13644,"language":432,"meta":8},[527],"# Select the 'Name' and 'Age' columns\nselected_columns = df.filter(items=['Name', 'Age'])\nprint(selected_columns)\n",[13646],{"type":17,"tag":79,"props":13647,"children":13648},{"__ignoreMap":8},[13649],{"type":23,"value":13644},{"type":17,"tag":32,"props":13651,"children":13652},{"start":8271},[13653],{"type":17,"tag":36,"props":13654,"children":13655},{},[13656,13658],{"type":23,"value":13657},"Select columns by matching a regular expression: ",{"type":17,"tag":79,"props":13659,"children":13661},{"className":13660},[],[13662],{"type":23,"value":13663},"df.filter(regex='regex')",{"type":17,"tag":518,"props":13665,"children":13666},{":editable":520,":show-in-col":520,"max-height":521},[13667],{"type":17,"tag":275,"props":13668,"children":13671},{"className":13669,"code":13670,"language":432,"meta":8},[527],"# Select all columns containing 'Age'\nage_related_columns = df.filter(regex='Age')\nprint(age_related_columns)\n",[13672],{"type":17,"tag":79,"props":13673,"children":13674},{"__ignoreMap":8},[13675],{"type":23,"value":13670},{"type":17,"tag":32,"props":13677,"children":13678},{"start":12158},[13679],{"type":17,"tag":36,"props":13680,"children":13681},{},[13682,13684],{"type":23,"value":13683},"Randomly select n rows of data: ",{"type":17,"tag":79,"props":13685,"children":13687},{"className":13686},[],[13688],{"type":23,"value":13689},"df.sample(n)",{"type":17,"tag":518,"props":13691,"children":13692},{":editable":520,":show-in-col":520,"max-height":521},[13693],{"type":17,"tag":275,"props":13694,"children":13697},{"className":13695,"code":13696,"language":432,"meta":8},[527],"# Randomly select 2 rows of data\nsample_df = df.sample(2)\nprint(sample_df)\n",[13698],{"type":17,"tag":79,"props":13699,"children":13700},{"__ignoreMap":8},[13701],{"type":23,"value":13696},{"type":17,"tag":96,"props":13703,"children":13705},{"id":13704},"_3-data-sorting",[13706],{"type":23,"value":13707},"3. Data Sorting",{"type":17,"tag":32,"props":13709,"children":13710},{},[13711],{"type":17,"tag":36,"props":13712,"children":13713},{},[13714,13716,13721],{"type":23,"value":13715},"Sort a ",{"type":17,"tag":79,"props":13717,"children":13719},{"className":13718},[],[13720],{"type":23,"value":10963},{"type":23,"value":13722}," by the values of specified columns:",{"type":17,"tag":275,"props":13724,"children":13727},{"className":13725,"code":13726,"language":432,"meta":8},[527],"DataFrame.sort_values(by, axis=0, ascending=True, inplace=False, kind='quicksort', na_position='last')\n",[13728],{"type":17,"tag":79,"props":13729,"children":13730},{"__ignoreMap":8},[13731],{"type":23,"value":13726},{"type":17,"tag":26,"props":13733,"children":13734},{},[13735],{"type":23,"value":12918},{"type":17,"tag":235,"props":13737,"children":13738},{},[13739,13750,13760,13771,13781,13791],{"type":17,"tag":36,"props":13740,"children":13741},{},[13742,13748],{"type":17,"tag":79,"props":13743,"children":13745},{"className":13744},[],[13746],{"type":23,"value":13747},"by",{"type":23,"value":13749},": The column name or list of column names to sort by.",{"type":17,"tag":36,"props":13751,"children":13752},{},[13753,13758],{"type":17,"tag":79,"props":13754,"children":13756},{"className":13755},[],[13757],{"type":23,"value":8377},{"type":23,"value":13759},": The axis to sort along, 0 for rows, 1 for columns.",{"type":17,"tag":36,"props":13761,"children":13762},{},[13763,13769],{"type":17,"tag":79,"props":13764,"children":13766},{"className":13765},[],[13767],{"type":23,"value":13768},"ascending",{"type":23,"value":13770},": Whether to sort in ascending order, default is True.",{"type":17,"tag":36,"props":13772,"children":13773},{},[13774,13779],{"type":17,"tag":79,"props":13775,"children":13777},{"className":13776},[],[13778],{"type":23,"value":13018},{"type":23,"value":13780},": Whether to modify the original DataFrame, default is False.",{"type":17,"tag":36,"props":13782,"children":13783},{},[13784,13789],{"type":17,"tag":79,"props":13785,"children":13787},{"className":13786},[],[13788],{"type":23,"value":9975},{"type":23,"value":13790},": The sorting algorithm, commonly used are 'quicksort', 'mergesort', 'heapsort'.",{"type":17,"tag":36,"props":13792,"children":13793},{},[13794,13800],{"type":17,"tag":79,"props":13795,"children":13797},{"className":13796},[],[13798],{"type":23,"value":13799},"na_position",{"type":23,"value":13801},": Specify the position of missing values, 'first' to place them at the beginning, 'last' to place them at the end.",{"type":17,"tag":518,"props":13803,"children":13804},{":editable":520,":show-in-col":520,"max-height":521},[13805],{"type":17,"tag":275,"props":13806,"children":13809},{"className":13807,"code":13808,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create a DataFrame\ndata = {'Name': ['Alice', 'Bob', 'Charlie'], 'Age': [25, 30, 28]}\ndf = pd.DataFrame(data)\n\n# Sort by the 'Age' column in ascending order\ndf_sorted_by_age = df.sort_values('Age')\nprint(f\"Sorted by 'Age' column in ascending order:\\n{df_sorted_by_age}\")\n\n# Sort by the 'Name' column in descending order\ndf_sorted_by_name_desc = df.sort_values('Name', ascending=False)\nprint(f\"Sorted by 'Name' column in descending order:\\n{df_sorted_by_name_desc}\")\n\n# Sort by multiple columns, 'Age' in ascending order, 'Name' in descending order\ndf_sorted_multi = df.sort_values(['Age', 'Name'], ascending=[True, False])\nprint(f\"Sorted by multiple columns, 'Age' in ascending order, 'Name' in descending order:\\n{df_sorted_multi}\")\n",[13810],{"type":17,"tag":79,"props":13811,"children":13812},{"__ignoreMap":8},[13813],{"type":23,"value":13808},{"type":17,"tag":32,"props":13815,"children":13816},{"start":11},[13817],{"type":17,"tag":36,"props":13818,"children":13819},{},[13820],{"type":23,"value":13821},"Sort by index",{"type":17,"tag":275,"props":13823,"children":13826},{"className":13824,"code":13825,"language":432,"meta":8},[527],"DataFrame.sort_index(axis=0, ascending=True, inplace=False, kind='quicksort', na_position='last')\n",[13827],{"type":17,"tag":79,"props":13828,"children":13829},{"__ignoreMap":8},[13830],{"type":23,"value":13825},{"type":17,"tag":26,"props":13832,"children":13833},{},[13834],{"type":23,"value":12918},{"type":17,"tag":235,"props":13836,"children":13837},{},[13838,13847,13856,13865,13874],{"type":17,"tag":36,"props":13839,"children":13840},{},[13841,13846],{"type":17,"tag":79,"props":13842,"children":13844},{"className":13843},[],[13845],{"type":23,"value":8377},{"type":23,"value":13759},{"type":17,"tag":36,"props":13848,"children":13849},{},[13850,13855],{"type":17,"tag":79,"props":13851,"children":13853},{"className":13852},[],[13854],{"type":23,"value":13768},{"type":23,"value":13770},{"type":17,"tag":36,"props":13857,"children":13858},{},[13859,13864],{"type":17,"tag":79,"props":13860,"children":13862},{"className":13861},[],[13863],{"type":23,"value":13018},{"type":23,"value":13780},{"type":17,"tag":36,"props":13866,"children":13867},{},[13868,13873],{"type":17,"tag":79,"props":13869,"children":13871},{"className":13870},[],[13872],{"type":23,"value":9975},{"type":23,"value":13790},{"type":17,"tag":36,"props":13875,"children":13876},{},[13877,13882],{"type":17,"tag":79,"props":13878,"children":13880},{"className":13879},[],[13881],{"type":23,"value":13799},{"type":23,"value":13801},{"type":17,"tag":518,"props":13884,"children":13885},{":editable":520,":show-in-col":520,"max-height":521},[13886],{"type":17,"tag":275,"props":13887,"children":13890},{"className":13888,"code":13889,"language":432,"meta":8},[527],"# Create a DataFrame with string index\ndata = {'A': [1, 2, 3], 'B': [4, 5, 6]}\ndf = pd.DataFrame(data, index=['c', 'a', 'b'])\n\n# Sort by index in ascending order\ndf_sorted_by_index = df.sort_index()\nprint(df_sorted_by_index)\n",[13891],{"type":17,"tag":79,"props":13892,"children":13893},{"__ignoreMap":8},[13894],{"type":23,"value":13889},{"type":17,"tag":96,"props":13896,"children":13898},{"id":13897},"_4-data-grouping-and-aggregation",[13899],{"type":23,"value":13900},"4. Data Grouping and Aggregation",{"type":17,"tag":32,"props":13902,"children":13903},{},[13904],{"type":17,"tag":36,"props":13905,"children":13906},{},[13907,13909],{"type":23,"value":13908},"Group data by a specified column: ",{"type":17,"tag":79,"props":13910,"children":13912},{"className":13911},[],[13913],{"type":23,"value":13914},"df.groupby(column_name)",{"type":17,"tag":518,"props":13916,"children":13917},{":editable":520,":show-in-col":520,"max-height":521},[13918],{"type":17,"tag":275,"props":13919,"children":13922},{"className":13920,"code":13921,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create a DataFrame\ndata = {'Name': ['Alice', 'Bob', 'Charlie', 'Alice'], 'Age': [25, 30, 28, 25], 'City': ['New York', 'Los Angeles', 'Chicago', 'New York']}\ndf = pd.DataFrame(data)\n\n# Group by the 'City' column\ngrouped = df.groupby('City')\n\n# Calculate the average age for each group\nprint(grouped['Age'].mean())\n",[13923],{"type":17,"tag":79,"props":13924,"children":13925},{"__ignoreMap":8},[13926],{"type":23,"value":13921},{"type":17,"tag":32,"props":13928,"children":13929},{"start":11},[13930],{"type":17,"tag":36,"props":13931,"children":13932},{},[13933,13935],{"type":23,"value":13934},"Apply aggregation functions to grouped data: ",{"type":17,"tag":79,"props":13936,"children":13938},{"className":13937},[],[13939],{"type":23,"value":13940},"df.aggregate({column_name:[function_name]})",{"type":17,"tag":518,"props":13942,"children":13943},{":editable":520,":show-in-col":520,"max-height":521},[13944],{"type":17,"tag":275,"props":13945,"children":13948},{"className":13946,"code":13947,"language":432,"meta":8},[527],"# Calculate the mean and max for the grouped data\nprint(grouped.aggregate({'Age': ['mean', 'max']}))\n",[13949],{"type":17,"tag":79,"props":13950,"children":13951},{"__ignoreMap":8},[13952],{"type":23,"value":13947},{"type":17,"tag":32,"props":13954,"children":13955},{"start":375},[13956],{"type":17,"tag":36,"props":13957,"children":13958},{},[13959],{"type":23,"value":13960},"Create a pivot table",{"type":17,"tag":275,"props":13962,"children":13965},{"className":13963,"code":13964,"language":432,"meta":8},[527],"DataFrame.pivot_table(values, index, columns, aggfunc)\n",[13966],{"type":17,"tag":79,"props":13967,"children":13968},{"__ignoreMap":8},[13969],{"type":23,"value":13964},{"type":17,"tag":26,"props":13971,"children":13972},{},[13973],{"type":23,"value":12918},{"type":17,"tag":235,"props":13975,"children":13976},{},[13977,13988,13998,14008],{"type":17,"tag":36,"props":13978,"children":13979},{},[13980,13986],{"type":17,"tag":79,"props":13981,"children":13983},{"className":13982},[],[13984],{"type":23,"value":13985},"values",{"type":23,"value":13987},": The column to aggregate.",{"type":17,"tag":36,"props":13989,"children":13990},{},[13991,13996],{"type":17,"tag":79,"props":13992,"children":13994},{"className":13993},[],[13995],{"type":23,"value":11222},{"type":23,"value":13997},": The column(s) to use as row index.",{"type":17,"tag":36,"props":13999,"children":14000},{},[14001,14006],{"type":17,"tag":79,"props":14002,"children":14004},{"className":14003},[],[14005],{"type":23,"value":11801},{"type":23,"value":14007},": The column(s) to use as column index.",{"type":17,"tag":36,"props":14009,"children":14010},{},[14011,14017],{"type":17,"tag":79,"props":14012,"children":14014},{"className":14013},[],[14015],{"type":23,"value":14016},"aggfunc",{"type":23,"value":14018},": The aggregation function.",{"type":17,"tag":518,"props":14020,"children":14021},{":editable":520,":show-in-col":520,"max-height":521},[14022],{"type":17,"tag":275,"props":14023,"children":14026},{"className":14024,"code":14025,"language":432,"meta":8},[527],"# Create a pivot table, grouping by city and age, and counting the number of people in each group\npivot_table = df.pivot_table(values='Name', index='City', columns='Age', aggfunc='count')\nprint(pivot_table)\n",[14027],{"type":17,"tag":79,"props":14028,"children":14029},{"__ignoreMap":8},[14030],{"type":23,"value":14025},{"type":17,"tag":96,"props":14032,"children":14034},{"id":14033},"_5-data-merging",[14035],{"type":23,"value":14036},"5. Data Merging",{"type":17,"tag":32,"props":14038,"children":14039},{},[14040],{"type":17,"tag":36,"props":14041,"children":14042},{},[14043,14045],{"type":23,"value":14044},"Concatenate multiple DataFrames along rows or columns: ",{"type":17,"tag":79,"props":14046,"children":14048},{"className":14047},[],[14049],{"type":23,"value":14050},"pd.concat([df1, df2])",{"type":17,"tag":275,"props":14052,"children":14055},{"className":14053,"code":14054,"language":432,"meta":8},[527],"# Create two DataFrames\ndf1 = pd.DataFrame({'A': [1, 2], 'B': [3, 4]})\ndf2 = pd.DataFrame({'A': [5, 6], 'B': [7, 8]})\n\n# Concatenate along rows\ndf_concat_rows = pd.concat([df1, df2])\nprint(df_concat_rows)\n\n# Concatenate along columns\ndf_concat_cols = pd.concat([df1, df2], axis=1)\nprint(df_concat_cols)\n",[14056],{"type":17,"tag":79,"props":14057,"children":14058},{"__ignoreMap":8},[14059],{"type":23,"value":14054},{"type":17,"tag":26,"props":14061,"children":14062},{},[14063],{"type":23,"value":11374},{"type":17,"tag":275,"props":14065,"children":14068},{"className":14066,"code":14067,"language":11380,"meta":8},[11378],"# Concatenate along rows:\n   A  B\n0  1  3\n1  2  4\n0  5  7\n1  6  8\n# Concatenate along columns:\n   A  B  A  B\n0  1  3  5  7\n1  2  4  6  8\n",[14069],{"type":17,"tag":79,"props":14070,"children":14071},{"__ignoreMap":8},[14072],{"type":23,"value":14067},{"type":17,"tag":32,"props":14074,"children":14075},{"start":11},[14076],{"type":17,"tag":36,"props":14077,"children":14078},{},[14079,14081],{"type":23,"value":14080},"Merge two DataFrames based on a specified column, similar to SQL JOIN: ",{"type":17,"tag":79,"props":14082,"children":14084},{"className":14083},[],[14085],{"type":23,"value":14086},"pd.merge(df1, df2, on=column_name)",{"type":17,"tag":275,"props":14088,"children":14091},{"className":14089,"code":14090,"language":432,"meta":8},[527],"# Create two DataFrames with a common column 'Name'\ndf1 = pd.DataFrame({'Name': ['Alice', 'Bob'], 'Age': [25, 30]})\ndf2 = pd.DataFrame({'Name': ['Alice', 'Charlie'], 'City': ['New York', 'Chicago']})\n\n# Merge on the 'Name' column\ndf_merged = pd.merge(df1, df2, on='Name')\nprint(df_merged)\n",[14092],{"type":17,"tag":79,"props":14093,"children":14094},{"__ignoreMap":8},[14095],{"type":23,"value":14090},{"type":17,"tag":26,"props":14097,"children":14098},{},[14099],{"type":23,"value":11374},{"type":17,"tag":275,"props":14101,"children":14104},{"className":14102,"code":14103,"language":11380,"meta":8},[11378],"Name  Age      City\n0  Alice   25  New York\n",[14105],{"type":17,"tag":79,"props":14106,"children":14107},{"__ignoreMap":8},[14108],{"type":23,"value":14103},{"type":17,"tag":96,"props":14110,"children":14112},{"id":14111},"_6-data-selection-and-filtering",[14113],{"type":23,"value":14114},"6. Data Selection and Filtering",{"type":17,"tag":32,"props":14116,"children":14117},{},[14118],{"type":17,"tag":36,"props":14119,"children":14120},{},[14121,14123],{"type":23,"value":14122},"Conditional filtering: ",{"type":17,"tag":79,"props":14124,"children":14126},{"className":14125},[],[14127],{"type":23,"value":14128},"df[df['column_name'] > value]",{"type":17,"tag":275,"props":14130,"children":14133},{"className":14131,"code":14132,"language":432,"meta":8},[527],"import pandas as pd\n\n# Create a sample DataFrame\ndata = {\n    'Name': ['Alice', 'Bob', 'Charlie', 'David'],\n    'Age': [25, 30, 35, 40],\n    'City': ['New York', 'Los Angeles', 'New York', 'Chicago']\n}\ndf = pd.DataFrame(data)\n\n# Conditional filtering: select people older than 25\ndf_filtered = df[df['Age'] > 25]\nprint(df_filtered)\n",[14134],{"type":17,"tag":79,"props":14135,"children":14136},{"__ignoreMap":8},[14137],{"type":23,"value":14132},{"type":17,"tag":26,"props":14139,"children":14140},{},[14141],{"type":23,"value":11374},{"type":17,"tag":275,"props":14143,"children":14146},{"className":14144,"code":14145,"language":11380,"meta":8},[11378],"Name  Age         City\n1      Bob   30  Los Angeles\n2  Charlie   35     New York\n3    David   40      Chicago\n",[14147],{"type":17,"tag":79,"props":14148,"children":14149},{"__ignoreMap":8},[14150],{"type":23,"value":14145},{"type":17,"tag":32,"props":14152,"children":14153},{"start":11},[14154],{"type":17,"tag":36,"props":14155,"children":14156},{},[14157,14159],{"type":23,"value":14158},"Select rows that meet conditions using a string expression: ",{"type":17,"tag":79,"props":14160,"children":14162},{"className":14161},[],[14163],{"type":23,"value":14164},"df.query('column_name > value')",{"type":17,"tag":518,"props":14166,"children":14167},{":editable":520,":show-in-col":520,"max-height":521},[14168],{"type":17,"tag":275,"props":14169,"children":14172},{"className":14170,"code":14171,"language":432,"meta":8},[527],"# Select rows that meet conditions using a string expression: select people older than 25 and from New York\ndf_filtered_query = df.query('Age > 25 and City == \"New York\"')\nprint(df_filtered_query)\n",[14173],{"type":17,"tag":79,"props":14174,"children":14175},{"__ignoreMap":8},[14176],{"type":23,"value":14171},{"title":8,"searchDepth":11,"depth":11,"links":14178},[14179,14180,14184,14188,14194],{"id":10901,"depth":11,"text":10904},{"id":10950,"depth":11,"text":10953,"children":14181},[14182,14183],{"id":11006,"depth":375,"text":11009},{"id":11584,"depth":375,"text":11587},{"id":12214,"depth":11,"text":12217,"children":14185},[14186,14187],{"id":12220,"depth":375,"text":12223},{"id":12463,"depth":375,"text":12466},{"id":12696,"depth":11,"text":12699,"children":14189},[14190,14191,14192,14193],{"id":12707,"depth":375,"text":12710},{"id":13126,"depth":375,"text":13129},{"id":13207,"depth":375,"text":13210},{"id":13280,"depth":375,"text":13283},{"id":13309,"depth":11,"text":13312,"children":14195},[14196,14197,14198,14199,14200,14201],{"id":13315,"depth":375,"text":13318},{"id":13542,"depth":375,"text":13545},{"id":13704,"depth":375,"text":13707},{"id":13897,"depth":375,"text":13900},{"id":14033,"depth":375,"text":14036},{"id":14111,"depth":375,"text":14114},"content:python-basic:5.pandas.md","python-basic/5.pandas.md","python-basic/5.pandas",{"_path":14206,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":14207,"description":8,"navigation":396,"index":12158,"icon":12,"body":14208,"_type":386,"_id":15469,"_source":388,"_file":15470,"_stem":15471,"_extension":391},"/python-basic/probability","5 Probability and Statistics",{"type":14,"children":14209,"toc":15450},[14210,14216,14221,14243,14249,14254,14260,14286,14291,14314,14319,14331,14337,14342,14360,14365,14372,14377,14385,14390,14408,14414,14419,14424,14436,14444,14450,14522,14528,14533,14538,14550,14555,14560,14578,14583,14588,14655,14661,14666,14679,14684,14690,14695,14708,14714,14719,14725,14730,14735,14761,14766,14778,14784,14789,14794,14807,14812,14824,14830,14896,14902,14907,14973,14978,14984,14989,14994,15007,15012,15018,15084,15090,15095,15101,15109,15114,15137,15143,15155,15161,15263,15268,15274,15280,15293,15312,15318,15351,15357,15362,15380,15386,15391,15396,15401,15424,15429,15435,15440],{"type":17,"tag":18,"props":14211,"children":14213},{"id":14212},"_1-what-is-probability",[14214],{"type":23,"value":14215},"1. What is Probability?",{"type":17,"tag":26,"props":14217,"children":14218},{},[14219],{"type":23,"value":14220},"We all know what probability is - it's a way to describe the likelihood of something happening. For example, if I bet that today's cafeteria will serve Kung Pao Chicken, whether or not there will be Kung Pao Chicken becomes a probability event. Probability is closely related to gambling. For instance, during US election years, everyone tries to predict who will be the next president and what's the probability of Trump taking office. These possibilities can be estimated through calculations, which is why we study probability and statistics.",{"type":17,"tag":26,"props":14222,"children":14223},{},[14224,14226,14233,14235,14241],{"type":23,"value":14225},"Next, we'll reference ",{"type":17,"tag":105,"props":14227,"children":14230},{"href":14228,"rel":14229},"https://zh.d2l.ai/chapter_preliminaries/probability.html",[109],[14231],{"type":23,"value":14232},"《动手学习深度学习》--李沐",{"type":23,"value":14234}," to introduce probability theory. We'll also apply ",{"type":17,"tag":79,"props":14236,"children":14238},{"className":14237},[],[14239],{"type":23,"value":14240},"Numpy",{"type":23,"value":14242}," from Chapter 3 and use code and mathematical formulas for calculations.",{"type":17,"tag":18,"props":14244,"children":14246},{"id":14245},"_2-basic-probability-theory",[14247],{"type":23,"value":14248},"2. Basic Probability Theory",{"type":17,"tag":26,"props":14250,"children":14251},{},[14252],{"type":23,"value":14253},"Probability theory is a discipline that uses mathematical language to describe random events (a college course). It mainly studies the following basic concepts:",{"type":17,"tag":96,"props":14255,"children":14257},{"id":14256},"basic-definitions",[14258],{"type":23,"value":14259},"Basic Definitions",{"type":17,"tag":235,"props":14261,"children":14262},{},[14263,14268],{"type":17,"tag":36,"props":14264,"children":14265},{},[14266],{"type":23,"value":14267},"Random Events: Events with uncertainty in life",{"type":17,"tag":36,"props":14269,"children":14270},{},[14271,14273],{"type":23,"value":14272},"Probability: A value between 0-1 that describes the likelihood of an event occurring",{"type":17,"tag":235,"props":14274,"children":14275},{},[14276,14281],{"type":17,"tag":36,"props":14277,"children":14278},{},[14279],{"type":23,"value":14280},"0 means impossible to occur",{"type":17,"tag":36,"props":14282,"children":14283},{},[14284],{"type":23,"value":14285},"1 means certain to occur",{"type":17,"tag":26,"props":14287,"children":14288},{},[14289],{"type":23,"value":14290},"Let's understand the basic concepts of probability theory through a simple lottery game.",{"type":17,"tag":235,"props":14292,"children":14293},{},[14294,14299,14304,14309],{"type":17,"tag":36,"props":14295,"children":14296},{},[14297],{"type":23,"value":14298},"Basic probability calculation methods",{"type":17,"tag":36,"props":14300,"children":14301},{},[14302],{"type":23,"value":14303},"How to conduct probability experiments using Python",{"type":17,"tag":36,"props":14305,"children":14306},{},[14307],{"type":23,"value":14308},"How to understand probability distributions through visualization",{"type":17,"tag":36,"props":14310,"children":14311},{},[14312],{"type":23,"value":14313},"The relationship between theoretical and experimental probability",{"type":17,"tag":26,"props":14315,"children":14316},{},[14317],{"type":23,"value":14318},"First, let's install and import the necessary packages.",{"type":17,"tag":518,"props":14320,"children":14321},{":editable":520,":show-in-col":520,"max-height":521},[14322],{"type":17,"tag":275,"props":14323,"children":14326},{"code":14324,"language":432,"meta":8,"className":14325},"  import pyodide_js\n  await pyodide_js.loadPackage(\"micropip\")\n\n  import micropip\n  await micropip.install(\"numpy\")\n  await micropip.install(\"matplotlib\")\n",[527],[14327],{"type":17,"tag":79,"props":14328,"children":14329},{"__ignoreMap":8},[14330],{"type":23,"value":14324},{"type":17,"tag":1561,"props":14332,"children":14334},{"id":14333},"lottery-game-example",[14335],{"type":23,"value":14336},"Lottery Game Example",{"type":17,"tag":26,"props":14338,"children":14339},{},[14340],{"type":23,"value":14341},"Suppose we have a lottery box containing:",{"type":17,"tag":235,"props":14343,"children":14344},{},[14345,14350,14355],{"type":17,"tag":36,"props":14346,"children":14347},{},[14348],{"type":23,"value":14349},"30 red balls (first prize)",{"type":17,"tag":36,"props":14351,"children":14352},{},[14353],{"type":23,"value":14354},"50 blue balls (second prize)",{"type":17,"tag":36,"props":14356,"children":14357},{},[14358],{"type":23,"value":14359},"120 white balls (no prize)",{"type":17,"tag":26,"props":14361,"children":14362},{},[14363],{"type":23,"value":14364},"Question: What is the probability of drawing each type of ball?",{"type":17,"tag":14366,"props":14367,"children":14369},"h5",{"id":14368},"theoretical-calculation",[14370],{"type":23,"value":14371},"Theoretical Calculation",{"type":17,"tag":26,"props":14373,"children":14374},{},[14375],{"type":23,"value":14376},"According to the basic definition of probability:",{"type":17,"tag":275,"props":14378,"children":14380},{"code":14379},"Probability of an event = Number of favorable outcomes ÷ Total number of possible outcomes\n",[14381],{"type":17,"tag":79,"props":14382,"children":14383},{"__ignoreMap":8},[14384],{"type":23,"value":14379},{"type":17,"tag":26,"props":14386,"children":14387},{},[14388],{"type":23,"value":14389},"Therefore:",{"type":17,"tag":235,"props":14391,"children":14392},{},[14393,14398,14403],{"type":17,"tag":36,"props":14394,"children":14395},{},[14396],{"type":23,"value":14397},"Probability of drawing a red ball = 30/(30+50+120) = 0.15 (15%)",{"type":17,"tag":36,"props":14399,"children":14400},{},[14401],{"type":23,"value":14402},"Probability of drawing a blue ball = 50/(30+50+120) = 0.25 (25%)",{"type":17,"tag":36,"props":14404,"children":14405},{},[14406],{"type":23,"value":14407},"Probability of drawing a white ball = 120/(30+50+120) = 0.60 (60%)",{"type":17,"tag":1561,"props":14409,"children":14411},{"id":14410},"python-simulation-verification",[14412],{"type":23,"value":14413},"Python Simulation Verification",{"type":17,"tag":26,"props":14415,"children":14416},{},[14417],{"type":23,"value":14418},"Let's briefly explain that simulation verification is an important research method, and it's actually a specialized university course. We can use simulated data to infer the probability of an event. For example, when launching rockets, we can't actually launch a thousand times to determine the success rate. This is where we need to repeatedly simulate data to verify and continuously improve our success probability.",{"type":17,"tag":26,"props":14420,"children":14421},{},[14422],{"type":23,"value":14423},"Now, let's use code to simulate this lottery process:",{"type":17,"tag":518,"props":14425,"children":14426},{":editable":520,":show-in-col":520,"max-height":521},[14427],{"type":17,"tag":275,"props":14428,"children":14431},{"code":14429,"language":432,"meta":8,"className":14430},"import numpy as np\n\n# Set random seed for reproducibility\nnp.random.seed(42)\n\n# Create prize pool (1=red, 2=blue, 3=white)\nprize_pool = np.array([1]*30 + [2]*50 + [3]*120)\n\n# Different numbers of trials\nn_trials_list = [100, 1000, 10000]\n\nprint(\"Simulation Probability Results:\")\nprint(\"-\" * 40)\nprint(\"Trials\\t\\tRed\\t\\tBlue\\t\\tWhite\")\nprint(\"Theory:\\t\\t0.150\\t\\t0.250\\t\\t0.600\")\nprint(\"-\" * 40)\n\n# Perform simulations with different numbers of trials\nfor n_trials in n_trials_list:\n    results = np.random.choice(prize_pool, size=n_trials)\n    unique, counts = np.unique(results, return_counts=True)\n    probabilities = counts / n_trials\n    print(f\"{n_trials}:\\t\\t{probabilities[0]:.3f}\\t\\t{probabilities[1]:.3f}\\t\\t{probabilities[2]:.3f}\")\n",[527],[14432],{"type":17,"tag":79,"props":14433,"children":14434},{"__ignoreMap":8},[14435],{"type":23,"value":14429},{"type":17,"tag":26,"props":14437,"children":14438},{},[14439],{"type":17,"tag":714,"props":14440,"children":14443},{"alt":14441,"src":14442},"Probability Distribution Simulation","../public/images/probability_simulation.png",[],{"type":17,"tag":1561,"props":14445,"children":14447},{"id":14446},"key-points-to-understand",[14448],{"type":23,"value":14449},"Key Points to Understand",{"type":17,"tag":32,"props":14451,"children":14452},{},[14453,14463,14473,14500],{"type":17,"tag":36,"props":14454,"children":14455},{},[14456,14461],{"type":17,"tag":1136,"props":14457,"children":14458},{},[14459],{"type":23,"value":14460},"Sample Space",{"type":23,"value":14462},": The set of all possible outcomes, in this case, the collection of 200 balls",{"type":17,"tag":36,"props":14464,"children":14465},{},[14466,14471],{"type":17,"tag":1136,"props":14467,"children":14468},{},[14469],{"type":23,"value":14470},"Event",{"type":23,"value":14472},": A specific outcome from the sample space, such as drawing a red ball",{"type":17,"tag":36,"props":14474,"children":14475},{},[14476,14481,14482],{"type":17,"tag":1136,"props":14477,"children":14478},{},[14479],{"type":23,"value":14480},"Probability",{"type":23,"value":920},{"type":17,"tag":235,"props":14483,"children":14484},{},[14485,14490,14495],{"type":17,"tag":36,"props":14486,"children":14487},{},[14488],{"type":23,"value":14489},"Theoretical probability is calculated based on possibilities",{"type":17,"tag":36,"props":14491,"children":14492},{},[14493],{"type":23,"value":14494},"Actual probability can be estimated through numerous experiments",{"type":17,"tag":36,"props":14496,"children":14497},{},[14498],{"type":23,"value":14499},"As the number of experiments increases, the experimental probability approaches the theoretical probability",{"type":17,"tag":36,"props":14501,"children":14502},{},[14503,14508,14509],{"type":17,"tag":1136,"props":14504,"children":14505},{},[14506],{"type":23,"value":14507},"Law of Large Numbers",{"type":23,"value":920},{"type":17,"tag":235,"props":14510,"children":14511},{},[14512,14517],{"type":17,"tag":36,"props":14513,"children":14514},{},[14515],{"type":23,"value":14516},"By increasing the number of trials (e.g., from 1,000 to 10,000), experimental results get closer to theoretical values",{"type":17,"tag":36,"props":14518,"children":14519},{},[14520],{"type":23,"value":14521},"This is why we simulated large numbers of draws in our code",{"type":17,"tag":96,"props":14523,"children":14525},{"id":14524},"_21-probability-axioms",[14526],{"type":23,"value":14527},"2.1 Probability Axioms",{"type":17,"tag":26,"props":14529,"children":14530},{},[14531],{"type":23,"value":14532},"In our lottery game example, we've already introduced basic probability concepts. Now let's delve deeper into the fundamental axioms of probability theory.",{"type":17,"tag":26,"props":14534,"children":14535},{},[14536],{"type":23,"value":14537},"Probability theory mainly studies two things:",{"type":17,"tag":32,"props":14539,"children":14540},{},[14541,14545],{"type":17,"tag":36,"props":14542,"children":14543},{},[14544],{"type":23,"value":14460},{"type":17,"tag":36,"props":14546,"children":14547},{},[14548],{"type":23,"value":14549},"Probability Function",{"type":17,"tag":1561,"props":14551,"children":14553},{"id":14552},"sample-space",[14554],{"type":23,"value":14460},{"type":17,"tag":26,"props":14556,"children":14557},{},[14558],{"type":23,"value":14559},"The Sample Space is the set of all possible outcomes. In our lottery game:",{"type":17,"tag":235,"props":14561,"children":14562},{},[14563,14568,14573],{"type":17,"tag":36,"props":14564,"children":14565},{},[14566],{"type":23,"value":14567},"Sample Space S = {red ball, blue ball, white ball}",{"type":17,"tag":36,"props":14569,"children":14570},{},[14571],{"type":23,"value":14572},"Each ball represents a basic event",{"type":17,"tag":36,"props":14574,"children":14575},{},[14576],{"type":23,"value":14577},"Total of 200 balls constitutes the complete sample space",{"type":17,"tag":1561,"props":14579,"children":14581},{"id":14580},"probability-function",[14582],{"type":23,"value":14549},{"type":17,"tag":26,"props":14584,"children":14585},{},[14586],{"type":23,"value":14587},"A Probability Function maps events to real numbers and must satisfy these axioms:",{"type":17,"tag":32,"props":14589,"children":14590},{},[14591,14619,14637],{"type":17,"tag":36,"props":14592,"children":14593},{},[14594,14599,14601],{"type":17,"tag":1136,"props":14595,"children":14596},{},[14597],{"type":23,"value":14598},"Non-negativity",{"type":23,"value":14600},": For any event A, probability must be greater than or equal to 0",{"type":17,"tag":235,"props":14602,"children":14603},{},[14604,14609,14614],{"type":17,"tag":36,"props":14605,"children":14606},{},[14607],{"type":23,"value":14608},"P(red ball) = 0.15 > 0",{"type":17,"tag":36,"props":14610,"children":14611},{},[14612],{"type":23,"value":14613},"P(blue ball) = 0.25 > 0",{"type":17,"tag":36,"props":14615,"children":14616},{},[14617],{"type":23,"value":14618},"P(white ball) = 0.60 > 0",{"type":17,"tag":36,"props":14620,"children":14621},{},[14622,14627,14629],{"type":17,"tag":1136,"props":14623,"children":14624},{},[14625],{"type":23,"value":14626},"Normalization",{"type":23,"value":14628},": The sum of probabilities for all events in sample space S equals 1",{"type":17,"tag":235,"props":14630,"children":14631},{},[14632],{"type":17,"tag":36,"props":14633,"children":14634},{},[14635],{"type":23,"value":14636},"P(red) + P(blue) + P(white) = 0.15 + 0.25 + 0.60 = 1",{"type":17,"tag":36,"props":14638,"children":14639},{},[14640,14645,14647],{"type":17,"tag":1136,"props":14641,"children":14642},{},[14643],{"type":23,"value":14644},"Additivity",{"type":23,"value":14646},": For mutually exclusive events, the probability of their union equals the sum of their individual probabilities",{"type":17,"tag":235,"props":14648,"children":14649},{},[14650],{"type":17,"tag":36,"props":14651,"children":14652},{},[14653],{"type":23,"value":14654},"Example: P(winning a prize) = P(red) + P(blue) = 0.15 + 0.25 = 0.40",{"type":17,"tag":1561,"props":14656,"children":14658},{"id":14657},"conditional-probability",[14659],{"type":23,"value":14660},"Conditional Probability",{"type":17,"tag":26,"props":14662,"children":14663},{},[14664],{"type":23,"value":14665},"In our lottery game, we can introduce the concept of conditional probability. For example:",{"type":17,"tag":235,"props":14667,"children":14668},{},[14669,14674],{"type":17,"tag":36,"props":14670,"children":14671},{},[14672],{"type":23,"value":14673},"If we know a prize was won, what's the probability it was a red ball?",{"type":17,"tag":36,"props":14675,"children":14676},{},[14677],{"type":23,"value":14678},"P(red|win) = P(red) / P(win) = 0.15 / 0.40 = 0.375",{"type":17,"tag":26,"props":14680,"children":14681},{},[14682],{"type":23,"value":14683},"This means that given we won a prize, there's a 37.5% chance it's the first prize (red ball).",{"type":17,"tag":1561,"props":14685,"children":14687},{"id":14686},"independence",[14688],{"type":23,"value":14689},"Independence",{"type":17,"tag":26,"props":14691,"children":14692},{},[14693],{"type":23,"value":14694},"Two events A and B are independent if the occurrence of one event doesn't affect the probability of the other. In our lottery game:",{"type":17,"tag":235,"props":14696,"children":14697},{},[14698,14703],{"type":17,"tag":36,"props":14699,"children":14700},{},[14701],{"type":23,"value":14702},"With replacement: Each draw is independent",{"type":17,"tag":36,"props":14704,"children":14705},{},[14706],{"type":23,"value":14707},"Without replacement: Events are not independent, as previous results affect subsequent probabilities",{"type":17,"tag":96,"props":14709,"children":14711},{"id":14710},"_22-random-variables",[14712],{"type":23,"value":14713},"2.2 Random Variables",{"type":17,"tag":26,"props":14715,"children":14716},{},[14717],{"type":23,"value":14718},"A random variable is a core concept in probability theory, representing a function mapping from the sample space to real numbers. Simply put, it's a numerical representation of random experiment outcomes.",{"type":17,"tag":1561,"props":14720,"children":14722},{"id":14721},"discrete-random-variables",[14723],{"type":23,"value":14724},"Discrete Random Variables",{"type":17,"tag":26,"props":14726,"children":14727},{},[14728],{"type":23,"value":14729},"A discrete random variable can only take on a finite or countably infinite number of values.",{"type":17,"tag":26,"props":14731,"children":14732},{},[14733],{"type":23,"value":14734},"Let's continue with our lottery example:",{"type":17,"tag":235,"props":14736,"children":14737},{},[14738],{"type":17,"tag":36,"props":14739,"children":14740},{},[14741,14743],{"type":23,"value":14742},"X = Prize value\n",{"type":17,"tag":235,"props":14744,"children":14745},{},[14746,14751,14756],{"type":17,"tag":36,"props":14747,"children":14748},{},[14749],{"type":23,"value":14750},"Red ball (first prize) = 1000 yuan",{"type":17,"tag":36,"props":14752,"children":14753},{},[14754],{"type":23,"value":14755},"Blue ball (second prize) = 500 yuan",{"type":17,"tag":36,"props":14757,"children":14758},{},[14759],{"type":23,"value":14760},"White ball (no prize) = 0 yuan",{"type":17,"tag":26,"props":14762,"children":14763},{},[14764],{"type":23,"value":14765},"Here, X is a discrete random variable because it can only take these three specific values.",{"type":17,"tag":518,"props":14767,"children":14768},{":editable":520,":show-in-col":520,"max-height":521},[14769],{"type":17,"tag":275,"props":14770,"children":14773},{"code":14771,"language":432,"meta":8,"className":14772},"# Second code block - Lottery Simulation\nimport numpy as np\n\n# Define prize values\nprizes = {\n    1: 1000,  # Red ball worth 1000 yuan\n    2: 500,   # Blue ball worth 500 yuan\n    3: 0      # White ball worth 0 yuan\n}\n\n# Simulate 1000 draws\nnp.random.seed(42)\ndraws = np.random.choice([1, 2, 3], size=1000, p=[0.15, 0.25, 0.60])\n\n# Calculate expected value (average prize money)\nexpected_value = sum(prizes[ball] * count/1000 \n                    for ball, count in zip(*np.unique(draws, return_counts=True)))\n\nprint(\"Lottery Simulation Results:\")\nprint(f\"Average prize: {expected_value:.2f} yuan\")\nprint(\"\\nFrequency of each outcome:\")\nfor ball, count in zip(*np.unique(draws, return_counts=True)):\n    print(f\"Prize worth {prizes[ball]} yuan: {count} times ({count/10:.1f}%)\")\n",[527],[14774],{"type":17,"tag":79,"props":14775,"children":14776},{"__ignoreMap":8},[14777],{"type":23,"value":14771},{"type":17,"tag":1561,"props":14779,"children":14781},{"id":14780},"continuous-random-variables",[14782],{"type":23,"value":14783},"Continuous Random Variables",{"type":17,"tag":26,"props":14785,"children":14786},{},[14787],{"type":23,"value":14788},"A continuous random variable can take any real value within an interval.",{"type":17,"tag":26,"props":14790,"children":14791},{},[14792],{"type":23,"value":14793},"For example: The lifespan X (in hours) of light bulbs produced by a factory",{"type":17,"tag":235,"props":14795,"children":14796},{},[14797,14802],{"type":17,"tag":36,"props":14798,"children":14799},{},[14800],{"type":23,"value":14801},"X can be any real number between 1000 and 2000 hours",{"type":17,"tag":36,"props":14803,"children":14804},{},[14805],{"type":23,"value":14806},"The probability of different lifespans is described by a probability density function",{"type":17,"tag":26,"props":14808,"children":14809},{},[14810],{"type":23,"value":14811},"Let's simulate the distribution of bulb lifespans:",{"type":17,"tag":518,"props":14813,"children":14814},{":editable":520,":show-in-col":520,"max-height":521},[14815],{"type":17,"tag":275,"props":14816,"children":14819},{"code":14817,"language":432,"meta":8,"className":14818},"# First code block - Light Bulb Lifetime Simulation\nimport numpy as np\n\n# Generate 1000 light bulb lifetimes following normal distribution\n# Mean: 1500 hours, Standard deviation: 100 hours\nnp.random.seed(42)\nlifetimes = np.random.normal(1500, 100, 1000)\n\n# Calculate basic statistics\nmean_lifetime = np.mean(lifetimes)\nstd_lifetime = np.std(lifetimes)\nmin_lifetime = np.min(lifetimes)\nmax_lifetime = np.max(lifetimes)\n\nprint(\"Light Bulb Lifetime Statistics:\")\nprint(f\"Average lifetime: {mean_lifetime:.2f} hours\")\nprint(f\"Standard deviation: {std_lifetime:.2f} hours\")\nprint(f\"Minimum lifetime: {min_lifetime:.2f} hours\")\nprint(f\"Maximum lifetime: {max_lifetime:.2f} hours\")\n\n# Calculate number of bulbs in different lifetime intervals\nintervals = [1200, 1400, 1600, 1800]\ncounts = np.histogram(lifetimes, bins=intervals)[0]\nprint(\"\\nLifetime Distribution:\")\nfor i in range(len(counts)):\n    start = intervals[i]\n    end = intervals[i+1]\n    count = counts[i]\n    print(f\"{start}-{end} hours: {count} bulbs ({count/10:.1f}%)\")\n",[527],[14820],{"type":17,"tag":79,"props":14821,"children":14822},{"__ignoreMap":8},[14823],{"type":23,"value":14817},{"type":17,"tag":1561,"props":14825,"children":14827},{"id":14826},"key-characteristics-of-random-variables",[14828],{"type":23,"value":14829},"Key Characteristics of Random Variables",{"type":17,"tag":32,"props":14831,"children":14832},{},[14833,14854,14875],{"type":17,"tag":36,"props":14834,"children":14835},{},[14836,14841],{"type":17,"tag":1136,"props":14837,"children":14838},{},[14839],{"type":23,"value":14840},"Expected Value (E(X))",{"type":17,"tag":235,"props":14842,"children":14843},{},[14844,14849],{"type":17,"tag":36,"props":14845,"children":14846},{},[14847],{"type":23,"value":14848},"Discrete: Sum of each possible value multiplied by its probability",{"type":17,"tag":36,"props":14850,"children":14851},{},[14852],{"type":23,"value":14853},"Continuous: Integral of the probability density function times the value",{"type":17,"tag":36,"props":14855,"children":14856},{},[14857,14862],{"type":17,"tag":1136,"props":14858,"children":14859},{},[14860],{"type":23,"value":14861},"Variance (Var(X))",{"type":17,"tag":235,"props":14863,"children":14864},{},[14865,14870],{"type":17,"tag":36,"props":14866,"children":14867},{},[14868],{"type":23,"value":14869},"Describes the spread of the random variable",{"type":17,"tag":36,"props":14871,"children":14872},{},[14873],{"type":23,"value":14874},"Larger variance indicates more dispersed data",{"type":17,"tag":36,"props":14876,"children":14877},{},[14878,14883],{"type":17,"tag":1136,"props":14879,"children":14880},{},[14881],{"type":23,"value":14882},"Distribution Functions",{"type":17,"tag":235,"props":14884,"children":14885},{},[14886,14891],{"type":17,"tag":36,"props":14887,"children":14888},{},[14889],{"type":23,"value":14890},"Discrete: Probability Mass Function (PMF)",{"type":17,"tag":36,"props":14892,"children":14893},{},[14894],{"type":23,"value":14895},"Continuous: Probability Density Function (PDF)",{"type":17,"tag":1561,"props":14897,"children":14899},{"id":14898},"practical-applications",[14900],{"type":23,"value":14901},"Practical Applications",{"type":17,"tag":26,"props":14903,"children":14904},{},[14905],{"type":23,"value":14906},"Random variables have wide applications in real life:",{"type":17,"tag":32,"props":14908,"children":14909},{},[14910,14931,14952],{"type":17,"tag":36,"props":14911,"children":14912},{},[14913,14918],{"type":17,"tag":1136,"props":14914,"children":14915},{},[14916],{"type":23,"value":14917},"Quality Control",{"type":17,"tag":235,"props":14919,"children":14920},{},[14921,14926],{"type":17,"tag":36,"props":14922,"children":14923},{},[14924],{"type":23,"value":14925},"Product dimensions (continuous)",{"type":17,"tag":36,"props":14927,"children":14928},{},[14929],{"type":23,"value":14930},"Number of defects (discrete)",{"type":17,"tag":36,"props":14932,"children":14933},{},[14934,14939],{"type":17,"tag":1136,"props":14935,"children":14936},{},[14937],{"type":23,"value":14938},"Financial Analysis",{"type":17,"tag":235,"props":14940,"children":14941},{},[14942,14947],{"type":17,"tag":36,"props":14943,"children":14944},{},[14945],{"type":23,"value":14946},"Stock prices (continuous)",{"type":17,"tag":36,"props":14948,"children":14949},{},[14950],{"type":23,"value":14951},"Daily transaction count (discrete)",{"type":17,"tag":36,"props":14953,"children":14954},{},[14955,14960],{"type":17,"tag":1136,"props":14956,"children":14957},{},[14958],{"type":23,"value":14959},"Medical Research",{"type":17,"tag":235,"props":14961,"children":14962},{},[14963,14968],{"type":17,"tag":36,"props":14964,"children":14965},{},[14966],{"type":23,"value":14967},"Patient recovery time (continuous)",{"type":17,"tag":36,"props":14969,"children":14970},{},[14971],{"type":23,"value":14972},"Daily new cases (discrete)",{"type":17,"tag":26,"props":14974,"children":14975},{},[14976],{"type":23,"value":14977},"Understanding the types and characteristics of random variables is crucial for proper modeling and analysis of real-world problems. In machine learning, we frequently deal with both types of random variables and must choose appropriate models and algorithms based on their characteristics.",{"type":17,"tag":18,"props":14979,"children":14981},{"id":14980},"_3-handling-multiple-random-variables",[14982],{"type":23,"value":14983},"3. Handling Multiple Random Variables",{"type":17,"tag":26,"props":14985,"children":14986},{},[14987],{"type":23,"value":14988},"In the real world, we often need to deal with multiple random variables simultaneously. Let's understand this through a medical diagnosis example:",{"type":17,"tag":26,"props":14990,"children":14991},{},[14992],{"type":23,"value":14993},"Suppose we are interested in two random variables:",{"type":17,"tag":235,"props":14995,"children":14996},{},[14997,15002],{"type":17,"tag":36,"props":14998,"children":14999},{},[15000],{"type":23,"value":15001},"D: Whether a patient has a certain disease (positive or negative)",{"type":17,"tag":36,"props":15003,"children":15004},{},[15005],{"type":23,"value":15006},"T: The result of the diagnostic test (positive or negative)",{"type":17,"tag":26,"props":15008,"children":15009},{},[15010],{"type":23,"value":15011},"This example involves several types of probabilities:",{"type":17,"tag":96,"props":15013,"children":15015},{"id":15014},"_31-basic-probability-types",[15016],{"type":23,"value":15017},"3.1 Basic Probability Types",{"type":17,"tag":32,"props":15019,"children":15020},{},[15021,15042,15063],{"type":17,"tag":36,"props":15022,"children":15023},{},[15024,15029],{"type":17,"tag":1136,"props":15025,"children":15026},{},[15027],{"type":23,"value":15028},"Joint Probability P(D,T)",{"type":17,"tag":235,"props":15030,"children":15031},{},[15032,15037],{"type":17,"tag":36,"props":15033,"children":15034},{},[15035],{"type":23,"value":15036},"The probability of two events occurring simultaneously",{"type":17,"tag":36,"props":15038,"children":15039},{},[15040],{"type":23,"value":15041},"Example: P(having disease AND testing positive)",{"type":17,"tag":36,"props":15043,"children":15044},{},[15045,15050],{"type":17,"tag":1136,"props":15046,"children":15047},{},[15048],{"type":23,"value":15049},"Marginal Probability P(D) or P(T)",{"type":17,"tag":235,"props":15051,"children":15052},{},[15053,15058],{"type":17,"tag":36,"props":15054,"children":15055},{},[15056],{"type":23,"value":15057},"The probability of a single event occurring",{"type":17,"tag":36,"props":15059,"children":15060},{},[15061],{"type":23,"value":15062},"Example: P(having disease) or P(testing positive)",{"type":17,"tag":36,"props":15064,"children":15065},{},[15066,15071],{"type":17,"tag":1136,"props":15067,"children":15068},{},[15069],{"type":23,"value":15070},"Conditional Probability P(D|T)",{"type":17,"tag":235,"props":15072,"children":15073},{},[15074,15079],{"type":17,"tag":36,"props":15075,"children":15076},{},[15077],{"type":23,"value":15078},"The probability of one event occurring given that another event has occurred",{"type":17,"tag":36,"props":15080,"children":15081},{},[15082],{"type":23,"value":15083},"Example: P(having disease|testing positive) = probability of actually having the disease when test is positive",{"type":17,"tag":96,"props":15085,"children":15087},{"id":15086},"_32-bayes-theorem-the-cornerstone-of-probability-theory",[15088],{"type":23,"value":15089},"3.2 Bayes' Theorem: The Cornerstone of Probability Theory",{"type":17,"tag":26,"props":15091,"children":15092},{},[15093],{"type":23,"value":15094},"Bayes' Theorem is one of the most important theorems in probability theory, providing a mathematical framework for updating beliefs. In machine learning and artificial intelligence, it forms the theoretical foundation for many algorithms.",{"type":17,"tag":1561,"props":15096,"children":15098},{"id":15097},"mathematical-formula",[15099],{"type":23,"value":15100},"Mathematical Formula",{"type":17,"tag":275,"props":15102,"children":15104},{"code":15103},"$$P(D|T) = \\frac{P(T|D)P(D)}{P(T)}$$\n",[15105],{"type":17,"tag":79,"props":15106,"children":15107},{"__ignoreMap":8},[15108],{"type":23,"value":15103},{"type":17,"tag":26,"props":15110,"children":15111},{},[15112],{"type":23,"value":15113},"Where:",{"type":17,"tag":235,"props":15115,"children":15116},{},[15117,15122,15127,15132],{"type":17,"tag":36,"props":15118,"children":15119},{},[15120],{"type":23,"value":15121},"P(D|T) is the posterior probability: new understanding of D after observing evidence T",{"type":17,"tag":36,"props":15123,"children":15124},{},[15125],{"type":23,"value":15126},"P(T|D) is the likelihood: probability of observing T when D is true",{"type":17,"tag":36,"props":15128,"children":15129},{},[15130],{"type":23,"value":15131},"P(D) is the prior probability: understanding of D before observing T",{"type":17,"tag":36,"props":15133,"children":15134},{},[15135],{"type":23,"value":15136},"P(T) is the normalization constant: sum of probabilities for all possible scenarios",{"type":17,"tag":1561,"props":15138,"children":15140},{"id":15139},"code-implementation-of-medical-diagnosis-case",[15141],{"type":23,"value":15142},"Code Implementation of Medical Diagnosis Case",{"type":17,"tag":518,"props":15144,"children":15145},{":editable":520,":show-in-col":520,"max-height":521},[15146],{"type":17,"tag":275,"props":15147,"children":15150},{"code":15148,"language":432,"meta":8,"className":15149},"import numpy as np\n\n# Known probabilities\nP_disease = 0.01  # Disease prevalence (prior probability)\nP_positive_given_disease = 0.95  # Probability of positive test if diseased (sensitivity)\nP_negative_given_healthy = 0.90  # Probability of negative test if healthy (specificity)\n\n# Calculate P(T): Total probability of positive test\nP_positive = (P_positive_given_disease * P_disease + \n             (1 - P_negative_given_healthy) * (1 - P_disease))\n\n# Calculate posterior probability using Bayes' theorem\nP_disease_given_positive = (P_positive_given_disease * P_disease) / P_positive\n\nprint(\"Medical Diagnosis Probability Analysis:\")\nprint(f\"Disease prevalence: {P_disease:.1%}\")\nprint(f\"Test accuracy (sensitivity): {P_positive_given_disease:.1%}\")\nprint(f\"Test specificity: {P_negative_given_healthy:.1%}\")\nprint(f\"\\nProbability of having disease if test is positive: {P_disease_given_positive:.1%}\")\n",[527],[15151],{"type":17,"tag":79,"props":15152,"children":15153},{"__ignoreMap":8},[15154],{"type":23,"value":15148},{"type":17,"tag":1561,"props":15156,"children":15158},{"id":15157},"importance-of-bayes-theorem",[15159],{"type":23,"value":15160},"Importance of Bayes' Theorem",{"type":17,"tag":32,"props":15162,"children":15163},{},[15164,15185,15211,15237],{"type":17,"tag":36,"props":15165,"children":15166},{},[15167,15172],{"type":17,"tag":1136,"props":15168,"children":15169},{},[15170],{"type":23,"value":15171},"Quantification of Uncertainty",{"type":17,"tag":235,"props":15173,"children":15174},{},[15175,15180],{"type":17,"tag":36,"props":15176,"children":15177},{},[15178],{"type":23,"value":15179},"Helps update probability estimates when new information is received",{"type":17,"tag":36,"props":15181,"children":15182},{},[15183],{"type":23,"value":15184},"Provides a mathematical framework for handling uncertainty",{"type":17,"tag":36,"props":15186,"children":15187},{},[15188,15193],{"type":17,"tag":1136,"props":15189,"children":15190},{},[15191],{"type":23,"value":15192},"Machine Learning Applications",{"type":17,"tag":235,"props":15194,"children":15195},{},[15196,15201,15206],{"type":17,"tag":36,"props":15197,"children":15198},{},[15199],{"type":23,"value":15200},"Naive Bayes classifiers",{"type":17,"tag":36,"props":15202,"children":15203},{},[15204],{"type":23,"value":15205},"Bayesian neural networks",{"type":17,"tag":36,"props":15207,"children":15208},{},[15209],{"type":23,"value":15210},"Probabilistic graphical models",{"type":17,"tag":36,"props":15212,"children":15213},{},[15214,15219],{"type":17,"tag":1136,"props":15215,"children":15216},{},[15217],{"type":23,"value":15218},"Decision Support",{"type":17,"tag":235,"props":15220,"children":15221},{},[15222,15227,15232],{"type":17,"tag":36,"props":15223,"children":15224},{},[15225],{"type":23,"value":15226},"Medical diagnosis",{"type":17,"tag":36,"props":15228,"children":15229},{},[15230],{"type":23,"value":15231},"Risk assessment",{"type":17,"tag":36,"props":15233,"children":15234},{},[15235],{"type":23,"value":15236},"Scientific reasoning",{"type":17,"tag":36,"props":15238,"children":15239},{},[15240,15245],{"type":17,"tag":1136,"props":15241,"children":15242},{},[15243],{"type":23,"value":15244},"Foundation of Modern AI",{"type":17,"tag":235,"props":15246,"children":15247},{},[15248,15253,15258],{"type":17,"tag":36,"props":15249,"children":15250},{},[15251],{"type":23,"value":15252},"Probabilistic reasoning",{"type":17,"tag":36,"props":15254,"children":15255},{},[15256],{"type":23,"value":15257},"Uncertainty modeling",{"type":17,"tag":36,"props":15259,"children":15260},{},[15261],{"type":23,"value":15262},"Adaptive learning systems",{"type":17,"tag":26,"props":15264,"children":15265},{},[15266],{"type":23,"value":15267},"Bayes' theorem is not just a mathematical formula; it's a way of thinking. It teaches us how to rationally update our beliefs when new evidence emerges, which is particularly crucial in today's data-driven age. Whether in medical diagnosis, spam filtering, or artificial intelligence systems, Bayesian methods play a vital role.",{"type":17,"tag":18,"props":15269,"children":15271},{"id":15270},"gpu-and-deep-learning",[15272],{"type":23,"value":15273},"GPU and Deep Learning",{"type":17,"tag":96,"props":15275,"children":15277},{"id":15276},"rise-and-impact-of-gpu",[15278],{"type":23,"value":15279},"Rise and Impact of GPU",{"type":17,"tag":26,"props":15281,"children":15282},{},[15283,15285,15291],{"type":23,"value":15284},"Graphics Processing Units (",{"type":17,"tag":79,"props":15286,"children":15288},{"className":15287},[],[15289],{"type":23,"value":15290},"GPUs",{"type":23,"value":15292},") were initially designed for graphics and gaming. However, researchers discovered that GPU's parallel computing architecture is highly suitable for handling large-scale mathematical computations in machine learning. Since 2000, GPU performance has improved approximately 1000-fold every decade, providing a powerful hardware foundation for deep learning development.",{"type":17,"tag":26,"props":15294,"children":15295},{},[15296,15302,15304,15310],{"type":17,"tag":79,"props":15297,"children":15299},{"className":15298},[],[15300],{"type":23,"value":15301},"NVIDIA",{"type":23,"value":15303}," revolutionized the field by introducing ",{"type":17,"tag":79,"props":15305,"children":15307},{"className":15306},[],[15308],{"type":23,"value":15309},"CUDA",{"type":23,"value":15311}," (Compute Unified Device Architecture), transforming GPUs from mere graphics processors into general-purpose parallel computing processors. This transformation fundamentally changed the trajectory of deep learning. While traditional CPUs excel at serial computations, GPUs can handle thousands of parallel tasks simultaneously, perfectly matching the requirements of large-scale matrix operations in deep learning.",{"type":17,"tag":96,"props":15313,"children":15315},{"id":15314},"revolutionary-impact-on-machine-learning",[15316],{"type":23,"value":15317},"Revolutionary Impact on Machine Learning",{"type":17,"tag":32,"props":15319,"children":15320},{},[15321,15331,15341],{"type":17,"tag":36,"props":15322,"children":15323},{},[15324,15329],{"type":17,"tag":1136,"props":15325,"children":15326},{},[15327],{"type":23,"value":15328},"Quantum Leap in Training Speed",{"type":23,"value":15330},": Model training that once took weeks can now be completed in hours, greatly accelerating algorithm development and model optimization.",{"type":17,"tag":36,"props":15332,"children":15333},{},[15334,15339],{"type":17,"tag":1136,"props":15335,"children":15336},{},[15337],{"type":23,"value":15338},"Enabling Larger Scale Models",{"type":23,"value":15340},": From early neural networks with few layers to today's models with hundreds of billions of parameters (like the GPT series), this development wouldn't be possible without GPU computing power.",{"type":17,"tag":36,"props":15342,"children":15343},{},[15344,15349],{"type":17,"tag":1136,"props":15345,"children":15346},{},[15347],{"type":23,"value":15348},"Lower Entry Barriers",{"type":23,"value":15350},": Researchers no longer need expensive supercomputers; a personal computer equipped with a GPU is sufficient for deep learning research.",{"type":17,"tag":96,"props":15352,"children":15354},{"id":15353},"applications-in-probability-and-statistics",[15355],{"type":23,"value":15356},"Applications in Probability and Statistics",{"type":17,"tag":26,"props":15358,"children":15359},{},[15360],{"type":23,"value":15361},"In probability and statistics, GPU's parallel computing capability has brought revolutionary changes. For example, in Monte Carlo simulations, we can simultaneously conduct millions of random trials, which would be impractical on traditional CPUs. This enhanced computing power enables us to:",{"type":17,"tag":235,"props":15363,"children":15364},{},[15365,15370,15375],{"type":17,"tag":36,"props":15366,"children":15367},{},[15368],{"type":23,"value":15369},"Process larger datasets",{"type":17,"tag":36,"props":15371,"children":15372},{},[15373],{"type":23,"value":15374},"Make more precise probability estimates",{"type":17,"tag":36,"props":15376,"children":15377},{},[15378],{"type":23,"value":15379},"Implement more complex statistical models",{"type":17,"tag":96,"props":15381,"children":15383},{"id":15382},"real-world-case-weather-forecasting-model",[15384],{"type":23,"value":15385},"Real-world Case: Weather Forecasting Model",{"type":17,"tag":26,"props":15387,"children":15388},{},[15389],{"type":23,"value":15390},"Let's illustrate the importance of GPUs through weather forecasting:",{"type":17,"tag":26,"props":15392,"children":15393},{},[15394],{"type":23,"value":15395},"Traditional weather forecasting models must consider millions of data points (temperature, pressure, wind speed, etc.) and perform extensive probability calculations to predict future weather. In the CPU era, producing an accurate 48-hour weather forecast could take 24 hours of computation time, meaning the forecast results would be available too late to be optimally useful.",{"type":17,"tag":26,"props":15397,"children":15398},{},[15399],{"type":23,"value":15400},"With GPU acceleration:",{"type":17,"tag":32,"props":15402,"children":15403},{},[15404,15409,15414,15419],{"type":17,"tag":36,"props":15405,"children":15406},{},[15407],{"type":23,"value":15408},"Computation time can be reduced to 1-2 hours",{"type":17,"tag":36,"props":15410,"children":15411},{},[15412],{"type":23,"value":15413},"Multiple weather scenarios can be calculated simultaneously",{"type":17,"tag":36,"props":15415,"children":15416},{},[15417],{"type":23,"value":15418},"Higher resolution meteorological data can be processed",{"type":17,"tag":36,"props":15420,"children":15421},{},[15422],{"type":23,"value":15423},"Forecast accuracy and timeliness are significantly improved",{"type":17,"tag":26,"props":15425,"children":15426},{},[15427],{"type":23,"value":15428},"This example effectively demonstrates how GPUs, through their powerful parallel computing capabilities, have transformed traditional computation-intensive tasks. Similar revolutionary changes are occurring in financial analysis, gene sequencing, drug development, and many other fields.",{"type":17,"tag":96,"props":15430,"children":15432},{"id":15431},"future-outlook",[15433],{"type":23,"value":15434},"Future Outlook",{"type":17,"tag":26,"props":15436,"children":15437},{},[15438],{"type":23,"value":15439},"As AI technology continues to evolve, the demand for computing power keeps growing. The emergence of next-generation GPU architectures (like NVIDIA's Hopper) and specialized AI chips indicates we're entering an era of explosive growth in computing power. This will bring more possibilities to machine learning and deep learning, pushing AI technology toward broader and deeper development.",{"type":17,"tag":26,"props":15441,"children":15442},{},[15443],{"type":17,"tag":105,"props":15444,"children":15447},{"href":15445,"rel":15446},"https://zh.d2l.ai/chapter_deep-learning-computation/use-gpu.html",[109],[15448],{"type":23,"value":15449},"Reference: Deep Learning Computation - Using GPU",{"title":8,"searchDepth":11,"depth":11,"links":15451},[15452,15453,15458,15462],{"id":14212,"depth":11,"text":14215},{"id":14245,"depth":11,"text":14248,"children":15454},[15455,15456,15457],{"id":14256,"depth":375,"text":14259},{"id":14524,"depth":375,"text":14527},{"id":14710,"depth":375,"text":14713},{"id":14980,"depth":11,"text":14983,"children":15459},[15460,15461],{"id":15014,"depth":375,"text":15017},{"id":15086,"depth":375,"text":15089},{"id":15270,"depth":11,"text":15273,"children":15463},[15464,15465,15466,15467,15468],{"id":15276,"depth":375,"text":15279},{"id":15314,"depth":375,"text":15317},{"id":15353,"depth":375,"text":15356},{"id":15382,"depth":375,"text":15385},{"id":15431,"depth":375,"text":15434},"content:python-basic:6.probability.md","python-basic/6.probability.md","python-basic/6.probability",{"_path":15473,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":15474,"description":15475,"navigation":10,"index":11,"icon":12,"body":15476,"_type":386,"_id":16030,"_source":388,"_file":16031,"_stem":16032,"_extension":391},"/python-basic/cursor-tutorial","Cursor Tutorial","Notes for AI beginners",{"type":14,"children":15477,"toc":16014},[15478,15499,15518,15526,15538,15551,15557,15582,15588,15596,15603,15611,15618,15626,15633,15639,15657,15664,15670,15683,15696,15701,15706,15736,15743,15751,15758,15763,15781,15787,15798,15804,15809,15815,15820,15828,15836,15878,15886,15899,15907,15915,15923,15931,15939,15947,15965],{"type":17,"tag":15479,"props":15480,"children":15482},"div",{"style":15481},"display: flex; align-items: center;",[15483,15485],{"type":23,"value":15484},"\n  ",{"type":17,"tag":15486,"props":15487,"children":15489},"video",{"style":15488,"autoPlay":10,"loop":10,"muted":10,"playsInline":10},"width: 50px;",[15490,15492,15498],{"type":23,"value":15491},"\n    ",{"type":17,"tag":15493,"props":15494,"children":15497},"source",{"src":15495,"type":15496},"https://www.cursor.com/assets/images/logo-resized.mp4","video/mp4",[],{"type":23,"value":15484},{"type":17,"tag":26,"props":15500,"children":15501},{},[15502,15507,15509,15516],{"type":17,"tag":1136,"props":15503,"children":15504},{},[15505],{"type":23,"value":15506},"AI-Powered Development with Cursor: A Beginner's Guide",{"type":23,"value":15508},"\nWhile ChatGPT and Kimi are powerful AI tools that many of you may be familiar with, we recommend Cursor or GitHub Copilot for programming, as they are specifically designed for coding environments. Let's explore how ",{"type":17,"tag":105,"props":15510,"children":15513},{"href":15511,"rel":15512},"https://www.cursor.com/",[109],[15514],{"type":23,"value":15515},"Cursor",{"type":23,"value":15517}," can enhance your programming experience.",{"type":17,"tag":26,"props":15519,"children":15520},{},[15521],{"type":17,"tag":1136,"props":15522,"children":15523},{},[15524],{"type":23,"value":15525},"Getting Started with Cursor: An AI-Enhanced Code Editor",{"type":17,"tag":26,"props":15527,"children":15528},{},[15529,15531],{"type":23,"value":15530},"Before starting to program, we need to choose a suitable development environment. A code editor is a programmer's core tool, just like a painter needs brushes. It's not just a text editor but a powerful development environment. VS Code (Visual Studio Code), developed by Microsoft, is one of the most popular code editors. Beyond writing code, it's more like a platform with thousands of extensions that can be customized based on your programming language needs, such as Python, JavaScript, SQL, C, and other mainstream programming languages. Cursor perfectly inherits VS Code's UI interface and functionality while adding more powerful features. ",{"type":17,"tag":105,"props":15532,"children":15535},{"href":15533,"rel":15534},"https://www.cursor.com/features",[109],[15536],{"type":23,"value":15537},"Curosr Features",{"type":17,"tag":18,"props":15539,"children":15541},{"id":15540},"cursors-ai-chat-feature",[15542,15544],{"type":23,"value":15543},"Cursor's AI ",{"type":17,"tag":105,"props":15545,"children":15548},{"href":15546,"rel":15547},"https://docs.cursor.com/chat/overview",[109],[15549],{"type":23,"value":15550},"Chat Feature",{"type":17,"tag":96,"props":15552,"children":15554},{"id":15553},"how-to-use",[15555],{"type":23,"value":15556},"How to Use:",{"type":17,"tag":26,"props":15558,"children":15559},{},[15560,15562,15567,15568,15573,15575,15580],{"type":23,"value":15561},"Cursor has a powerful built-in AI chat feature that you can quickly access using the shortcut ",{"type":17,"tag":1136,"props":15563,"children":15564},{},[15565],{"type":23,"value":15566},"⌘L (Mac)",{"type":23,"value":880},{"type":17,"tag":1136,"props":15569,"children":15570},{},[15571],{"type":23,"value":15572},"Ctrl+L (Windows)",{"type":23,"value":15574},". Alternatively, you can select code/text in a file and click ",{"type":17,"tag":1136,"props":15576,"children":15577},{},[15578],{"type":23,"value":15579},"Add to Chat",{"type":23,"value":15581}," to automatically add it to the chat panel for questions or debugging. This is one of my most frequently used features.",{"type":17,"tag":96,"props":15583,"children":15585},{"id":15584},"key-features",[15586],{"type":23,"value":15587},"Key Features:",{"type":17,"tag":32,"props":15589,"children":15590},{},[15591],{"type":17,"tag":36,"props":15592,"children":15593},{},[15594],{"type":23,"value":15595},"Intelligent context understanding, automatic analysis of current code environment or Terminal bug parsing",{"type":17,"tag":26,"props":15597,"children":15598},{},[15599],{"type":17,"tag":714,"props":15600,"children":15602},{"alt":8,"src":15601},"https://image.typedream.com/cdn-cgi/image/width=750,format=auto,fit=scale-down,quality=100/https://api.typedream.com/v0/document/public/a5b28d16-5aa9-469f-9376-1e7b815081bb/2Ti4BqIun4NLvVVOgEO9HtcgY1V_Example_Image.png",[],{"type":17,"tag":32,"props":15604,"children":15605},{"start":11},[15606],{"type":17,"tag":36,"props":15607,"children":15608},{},[15609],{"type":23,"value":15610},"Use @ symbol to reference project files or website links",{"type":17,"tag":26,"props":15612,"children":15613},{},[15614],{"type":17,"tag":714,"props":15615,"children":15617},{"alt":8,"src":15616},"https://www.cursor.com/_next/image?url=%2Ffeatures%2Fchat_at.png&w=3840&q=75",[],{"type":17,"tag":32,"props":15619,"children":15620},{"start":375},[15621],{"type":17,"tag":36,"props":15622,"children":15623},{},[15624],{"type":23,"value":15625},"Support for copy/paste images with image content recognition",{"type":17,"tag":26,"props":15627,"children":15628},{},[15629],{"type":17,"tag":714,"props":15630,"children":15632},{"alt":8,"src":15631},"https://image.typedream.com/cdn-cgi/image/width=1920,format=auto,fit=scale-down,quality=100/https://api.typedream.com/v0/document/public/a5b28d16-5aa9-469f-9376-1e7b815081bb/2ThfEKglVaej5ZiDez1Rj9osnOQ_Header_Image.png",[],{"type":17,"tag":96,"props":15634,"children":15636},{"id":15635},"ai-model-support",[15637],{"type":23,"value":15638},"AI Model Support:",{"type":17,"tag":235,"props":15640,"children":15641},{},[15642,15647,15652],{"type":17,"tag":36,"props":15643,"children":15644},{},[15645],{"type":23,"value":15646},"Claude 3.5 Sonnet: Excels at code understanding and generation (default)",{"type":17,"tag":36,"props":15648,"children":15649},{},[15650],{"type":23,"value":15651},"cursor-small: Suitable for simple quick queries",{"type":17,"tag":36,"props":15653,"children":15654},{},[15655],{"type":23,"value":15656},"GPT-4: Powerful general capabilities",{"type":17,"tag":26,"props":15658,"children":15659},{},[15660],{"type":17,"tag":714,"props":15661,"children":15663},{"alt":8,"src":15662},"https://global.discourse-cdn.com/flex020/uploads/cursor1/original/2X/e/e81ce6be4ac62d6629ec176de5a2160049411061.png",[],{"type":17,"tag":96,"props":15665,"children":15667},{"id":15666},"cursor-demo-how-to-use-cursor-chat",[15668],{"type":23,"value":15669},"Cursor Demo: How to Use Cursor CHAT",{"type":17,"tag":26,"props":15671,"children":15672},{},[15673],{"type":17,"tag":15486,"props":15674,"children":15676},{"width":15675,"autoPlay":10,"loop":10,"muted":10,"playsInline":10,"controls":10},"100%",[15677,15681],{"type":17,"tag":15493,"props":15678,"children":15680},{"src":15679,"type":15496},"https://www.cursor.com/videos/chat.mp4",[],{"type":23,"value":15682},"\nYour browser does not support the video tag.\n",{"type":17,"tag":18,"props":15684,"children":15686},{"id":15685},"cursor-composer-ai-driven-project-creation-assistant",[15687,15694],{"type":17,"tag":105,"props":15688,"children":15691},{"href":15689,"rel":15690},"https://docs.cursor.com/cmdk/overview",[109],[15692],{"type":23,"value":15693},"Cursor Composer",{"type":23,"value":15695},": AI-Driven Project Creation Assistant",{"type":17,"tag":26,"props":15697,"children":15698},{},[15699],{"type":23,"value":15700},"Composer is a powerful feature in Cursor that helps you quickly create and scaffold project frameworks. Through simple natural language descriptions, you can have AI help you generate complete project structures and code.",{"type":17,"tag":96,"props":15702,"children":15704},{"id":15703},"how-to-use-1",[15705],{"type":23,"value":15556},{"type":17,"tag":32,"props":15707,"children":15708},{},[15709,15731],{"type":17,"tag":36,"props":15710,"children":15711},{},[15712,15714,15719,15720,15725,15727],{"type":23,"value":15713},"Use shortcut ",{"type":17,"tag":1136,"props":15715,"children":15716},{},[15717],{"type":23,"value":15718},"⌘K (Mac)",{"type":23,"value":880},{"type":17,"tag":1136,"props":15721,"children":15722},{},[15723],{"type":23,"value":15724},"Ctrl+K (Windows)",{"type":23,"value":15726}," to open the command palette\n",{"type":17,"tag":714,"props":15728,"children":15730},{"alt":8,"src":15729},"https://bear-images.sfo2.cdn.digitaloceanspaces.com/technoclub/34.png",[],{"type":17,"tag":36,"props":15732,"children":15733},{},[15734],{"type":23,"value":15735},"Enter your project description",{"type":17,"tag":26,"props":15737,"children":15738},{},[15739],{"type":17,"tag":714,"props":15740,"children":15742},{"alt":8,"src":15741},"https://bear-images.sfo2.cdn.digitaloceanspaces.com/technoclub/40.png",[],{"type":17,"tag":32,"props":15744,"children":15745},{"start":375},[15746],{"type":17,"tag":36,"props":15747,"children":15748},{},[15749],{"type":23,"value":15750},"AI will generate the appropriate project framework based on your description",{"type":17,"tag":26,"props":15752,"children":15753},{},[15754],{"type":17,"tag":714,"props":15755,"children":15757},{"alt":8,"src":15756},"https://bear-images.sfo2.cdn.digitaloceanspaces.com/technoclub/11-1.png",[],{"type":17,"tag":96,"props":15759,"children":15761},{"id":15760},"key-features-1",[15762],{"type":23,"value":15587},{"type":17,"tag":32,"props":15764,"children":15765},{},[15766,15771,15776],{"type":17,"tag":36,"props":15767,"children":15768},{},[15769],{"type":23,"value":15770},"Generate project script frameworks",{"type":17,"tag":36,"props":15772,"children":15773},{},[15774],{"type":23,"value":15775},"Automatically add comments, documentation, and code completion",{"type":17,"tag":36,"props":15777,"children":15778},{},[15779],{"type":23,"value":15780},"Interactive development with continuous project structure optimization",{"type":17,"tag":96,"props":15782,"children":15784},{"id":15783},"cursor-demo-how-to-use-cursor-composer",[15785],{"type":23,"value":15786},"Cursor Demo: How to Use Cursor Composer",{"type":17,"tag":26,"props":15788,"children":15789},{},[15790],{"type":17,"tag":15486,"props":15791,"children":15792},{"width":15675,"autoPlay":10,"loop":10,"muted":10,"playsInline":10,"controls":10},[15793,15797],{"type":17,"tag":15493,"props":15794,"children":15796},{"src":15795,"type":15496},"https://www.cursor.com/videos/cmdkloop2.mp4",[],{"type":23,"value":15682},{"type":17,"tag":18,"props":15799,"children":15801},{"id":15800},"how-to-improve-ai-query-efficiency",[15802],{"type":23,"value":15803},"How to Improve AI Query Efficiency?",{"type":17,"tag":26,"props":15805,"children":15806},{},[15807],{"type":23,"value":15808},"Our method is to first outline ideas through chat, then use composer to implement step by step. For example, in CHAT, ask \"Help me list what knowledge is needed to master Python programming? List a learning process for beginners.\" Notice how we clearly specify \"beginner,\" \"Python,\" and \"process,\" which helps AI provide more targeted answers. Then we can take the process given by Chat and put it into Composer step by step, letting it generate actual Python code examples with explanations. It's important to note that we shouldn't give too much at once, as this can lead to misleading responses. Instead, we should break it down into steps and get results through continuous questioning.",{"type":17,"tag":1561,"props":15810,"children":15812},{"id":15811},"step-by-step-query-strategy",[15813],{"type":23,"value":15814},"Step-by-Step Query Strategy",{"type":17,"tag":26,"props":15816,"children":15817},{},[15818],{"type":23,"value":15819},"In Cursor, we can adopt a \"Chat First, Composer Follow\" strategy to improve AI interaction efficiency.",{"type":17,"tag":26,"props":15821,"children":15822},{},[15823],{"type":17,"tag":1136,"props":15824,"children":15825},{},[15826],{"type":23,"value":15827},"Step One: Use Chat for Concept Organization",{"type":17,"tag":32,"props":15829,"children":15830},{},[15831],{"type":17,"tag":36,"props":15832,"children":15833},{},[15834],{"type":23,"value":15835},"Clear Keywords",{"type":17,"tag":235,"props":15837,"children":15838},{},[15839,15844,15868,15873],{"type":17,"tag":36,"props":15840,"children":15841},{},[15842],{"type":23,"value":15843},"Example: \"Help me list what knowledge is needed to master Python programming? List a learning process for beginners\"",{"type":17,"tag":36,"props":15845,"children":15846},{},[15847,15849,15854,15855,15860,15861,15866],{"type":23,"value":15848},"Use specific and clear keywords (like ",{"type":17,"tag":1136,"props":15850,"children":15851},{},[15852],{"type":23,"value":15853},"beginner",{"type":23,"value":1895},{"type":17,"tag":1136,"props":15856,"children":15857},{},[15858],{"type":23,"value":15859},"Python",{"type":23,"value":1895},{"type":17,"tag":1136,"props":15862,"children":15863},{},[15864],{"type":23,"value":15865},"process",{"type":23,"value":15867},")",{"type":17,"tag":36,"props":15869,"children":15870},{},[15871],{"type":23,"value":15872},"Use @ for file references to specify the context of the question",{"type":17,"tag":36,"props":15874,"children":15875},{},[15876],{"type":23,"value":15877},"Avoid vague or ambiguous expressions",{"type":17,"tag":32,"props":15879,"children":15880},{"start":11},[15881],{"type":17,"tag":36,"props":15882,"children":15883},{},[15884],{"type":23,"value":15885},"Structured Questioning",{"type":17,"tag":235,"props":15887,"children":15888},{},[15889,15894],{"type":17,"tag":36,"props":15890,"children":15891},{},[15892],{"type":23,"value":15893},"Break complex problems into small steps",{"type":17,"tag":36,"props":15895,"children":15896},{},[15897],{"type":23,"value":15898},"Use clear items or outline format to help AI understand your needs",{"type":17,"tag":26,"props":15900,"children":15901},{},[15902],{"type":17,"tag":1136,"props":15903,"children":15904},{},[15905],{"type":23,"value":15906},"Step Two: Implement Code with Composer",{"type":17,"tag":32,"props":15908,"children":15909},{},[15910],{"type":17,"tag":36,"props":15911,"children":15912},{},[15913],{"type":23,"value":15914},"Progressive Implementation",{"type":17,"tag":235,"props":15916,"children":15917},{},[15918],{"type":17,"tag":36,"props":15919,"children":15920},{},[15921],{"type":23,"value":15922},"Implement based on Chat feedback step by step",{"type":17,"tag":32,"props":15924,"children":15925},{"start":11},[15926],{"type":17,"tag":36,"props":15927,"children":15928},{},[15929],{"type":23,"value":15930},"Focus on One Feature at a Time",{"type":17,"tag":235,"props":15932,"children":15933},{},[15934],{"type":17,"tag":36,"props":15935,"children":15936},{},[15937],{"type":23,"value":15938},"Avoid requesting too many features at once",{"type":17,"tag":32,"props":15940,"children":15941},{"start":375},[15942],{"type":17,"tag":36,"props":15943,"children":15944},{},[15945],{"type":23,"value":15946},"Iterative Optimization",{"type":17,"tag":235,"props":15948,"children":15949},{},[15950,15955,15960],{"type":17,"tag":36,"props":15951,"children":15952},{},[15953],{"type":23,"value":15954},"Adjust based on AI responses",{"type":17,"tag":36,"props":15956,"children":15957},{},[15958],{"type":23,"value":15959},"Continuously refine and improve requirements",{"type":17,"tag":36,"props":15961,"children":15962},{},[15963],{"type":23,"value":15964},"Maintain conversation coherence",{"type":17,"tag":15479,"props":15966,"children":15970},{"className":15967,"style":15969},[15968],"tip","\n  background-color: #e8f5e9; \n  padding: 10px; \n  border-radius: 5px; \n  border-left: 4px solid #4caf50;\n  color: #000;\n  @media (prefers-color-scheme: dark) {\n    background-color: #1b3320;\n    border-left-color: #2e7d32;\n    color: #fff;\n  }\n",[15971,15976,15981,16004,16009],{"type":17,"tag":26,"props":15972,"children":15973},{},[15974],{"type":23,"value":15975},"💡 Cursor Pricing",{"type":17,"tag":26,"props":15977,"children":15978},{},[15979],{"type":23,"value":15980},"Free Plan Includes:",{"type":17,"tag":235,"props":15982,"children":15983},{},[15984,15989,15994,15999],{"type":17,"tag":36,"props":15985,"children":15986},{},[15987],{"type":23,"value":15988},"14-day Pro trial",{"type":17,"tag":36,"props":15990,"children":15991},{},[15992],{"type":23,"value":15993},"50 slow premium model uses",{"type":17,"tag":36,"props":15995,"children":15996},{},[15997],{"type":23,"value":15998},"200 cursor-small model uses",{"type":17,"tag":36,"props":16000,"children":16001},{},[16002],{"type":23,"value":16003},"2,000 completions uses",{"type":17,"tag":26,"props":16005,"children":16006},{},[16007],{"type":23,"value":16008},"Pro Plan ($20/month)",{"type":17,"tag":26,"props":16010,"children":16011},{},[16012],{"type":23,"value":16013},"The free plan, combined with 200 monthly cursor-small model uses, should be sufficient for beginners exploring Python programming. We recommend starting with the 14-day Pro trial to experience all features before deciding on a subscription.",{"title":8,"searchDepth":11,"depth":11,"links":16015},[16016,16023,16029],{"id":15540,"depth":11,"text":16017,"children":16018},"Cursor's AI Chat Feature",[16019,16020,16021,16022],{"id":15553,"depth":375,"text":15556},{"id":15584,"depth":375,"text":15587},{"id":15635,"depth":375,"text":15638},{"id":15666,"depth":375,"text":15669},{"id":15685,"depth":11,"text":16024,"children":16025},"Cursor Composer: AI-Driven Project Creation Assistant",[16026,16027,16028],{"id":15703,"depth":375,"text":15556},{"id":15760,"depth":375,"text":15587},{"id":15783,"depth":375,"text":15786},{"id":15800,"depth":11,"text":15803},"content:python-basic:cursor-tutorial.md","python-basic/cursor-tutorial.md","python-basic/cursor-tutorial",{"_path":16034,"_dir":8,"_draft":7,"_partial":7,"_locale":8,"title":16035,"description":395,"navigation":10,"index":16036,"icon":12,"body":16037,"_type":386,"_id":16121,"_source":388,"_file":16122,"_stem":16123,"_extension":391},"/python-basic","Preface",1,{"type":14,"children":16038,"toc":16119},[16039,16044,16058,16065,16074,16097,16102,16114],{"type":17,"tag":26,"props":16040,"children":16041},{},[16042],{"type":23,"value":16043},"Welcome to our Python Basic Learning Platform",{"type":17,"tag":26,"props":16045,"children":16046},{},[16047,16049,16056],{"type":23,"value":16048},"This website is dedicated to teaching Python basics, primarily designed for users with no prior programming experience or those new to Python. Our content structure is inspired by the book ",{"type":17,"tag":105,"props":16050,"children":16053},{"href":16051,"rel":16052},"https://wesmckinney.com/book/",[109],[16054],{"type":23,"value":16055},"\"Python for Data Analysis\" by Wes McKinney",{"type":23,"value":16057},", along with other relevant online resources.",{"type":17,"tag":26,"props":16059,"children":16060},{},[16061],{"type":17,"tag":714,"props":16062,"children":16064},{"alt":8,"src":16063},"https://m.media-amazon.com/images/I/41ZHhv1MT4L._SY445_SX342_.jpg",[],{"type":17,"tag":26,"props":16066,"children":16067},{},[16068,16073],{"type":17,"tag":1136,"props":16069,"children":16070},{},[16071],{"type":23,"value":16072},"Website Features",{"type":23,"value":920},{"type":17,"tag":235,"props":16075,"children":16076},{},[16077,16082,16087,16092],{"type":17,"tag":36,"props":16078,"children":16079},{},[16080],{"type":23,"value":16081},"Concise and accessible knowledge points",{"type":17,"tag":36,"props":16083,"children":16084},{},[16085],{"type":23,"value":16086},"Short video introductions for each chapter",{"type":17,"tag":36,"props":16088,"children":16089},{},[16090],{"type":23,"value":16091},"Highlighted annotations for challenging concepts",{"type":17,"tag":36,"props":16093,"children":16094},{},[16095],{"type":23,"value":16096},"Interactive comment section (coming soon) for community discussions",{"type":17,"tag":26,"props":16098,"children":16099},{},[16100],{"type":23,"value":16101},"Our goal is to provide a streamlined, user-friendly learning experience that caters to beginners while offering comprehensive Python fundamentals. Whether you're looking to start a career in programming or simply curious about Python, this platform is your ideal starting point.",{"type":17,"tag":26,"props":16103,"children":16104},{},[16105,16107,16112],{"type":23,"value":16106},"Additionally, we strongly encourage using AI to assist in learning. In fact, AI can be considered the best \"teacher.\" We recommend using ",{"type":17,"tag":105,"props":16108,"children":16110},{"href":15511,"rel":16109},[109],[16111],{"type":23,"value":15515},{"type":23,"value":16113},", and we will provide usage tutorials in the future.",{"type":17,"tag":26,"props":16115,"children":16116},{},[16117],{"type":23,"value":16118},"Join us on this exciting journey into the world of Python programming!",{"title":8,"searchDepth":11,"depth":11,"links":16120},[],"content:python-basic:index.md","python-basic/index.md","python-basic/index",[16125,16409,17606,21471,25382,28228,29260,29704],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":8,"navigation":10,"index":11,"icon":12,"body":16126,"_type":386,"_id":387,"_source":388,"_file":389,"_stem":390,"_extension":391},{"type":14,"children":16127,"toc":16392},[16128,16132,16136,16155,16159,16163,16167,16183,16187,16196,16200,16209,16213,16222,16226,16235,16239,16248,16252,16261,16265,16274,16278,16282,16286,16290,16313,16317,16321,16328,16344,16348,16355,16359,16381,16385],{"type":17,"tag":18,"props":16129,"children":16130},{"id":20},[16131],{"type":23,"value":24},{"type":17,"tag":26,"props":16133,"children":16134},{},[16135],{"type":23,"value":30},{"type":17,"tag":32,"props":16137,"children":16138},{},[16139,16143,16147,16151],{"type":17,"tag":36,"props":16140,"children":16141},{},[16142],{"type":23,"value":40},{"type":17,"tag":36,"props":16144,"children":16145},{},[16146],{"type":23,"value":45},{"type":17,"tag":36,"props":16148,"children":16149},{},[16150],{"type":23,"value":50},{"type":17,"tag":36,"props":16152,"children":16153},{},[16154],{"type":23,"value":55},{"type":17,"tag":18,"props":16156,"children":16157},{"id":58},[16158],{"type":23,"value":61},{"type":17,"tag":26,"props":16160,"children":16161},{},[16162],{"type":23,"value":66},{"type":17,"tag":18,"props":16164,"children":16165},{"id":69},[16166],{"type":23,"value":72},{"type":17,"tag":26,"props":16168,"children":16169},{},[16170,16171,16176,16177,16182],{"type":23,"value":77},{"type":17,"tag":79,"props":16172,"children":16174},{"className":16173},[],[16175],{"type":23,"value":84},{"type":23,"value":86},{"type":17,"tag":79,"props":16178,"children":16180},{"className":16179},[],[16181],{"type":23,"value":92},{"type":23,"value":94},{"type":17,"tag":96,"props":16184,"children":16185},{"id":98},[16186],{"type":23,"value":84},{"type":17,"tag":26,"props":16188,"children":16189},{},[16190,16195],{"type":17,"tag":105,"props":16191,"children":16193},{"href":107,"rel":16192},[109],[16194],{"type":23,"value":84},{"type":23,"value":113},{"type":17,"tag":96,"props":16197,"children":16198},{"id":116},[16199],{"type":23,"value":116},{"type":17,"tag":26,"props":16201,"children":16202},{},[16203,16208],{"type":17,"tag":105,"props":16204,"children":16206},{"href":124,"rel":16205},[109],[16207],{"type":23,"value":116},{"type":23,"value":129},{"type":17,"tag":96,"props":16210,"children":16211},{"id":132},[16212],{"type":23,"value":132},{"type":17,"tag":26,"props":16214,"children":16215},{},[16216,16221],{"type":17,"tag":105,"props":16217,"children":16219},{"href":140,"rel":16218},[109],[16220],{"type":23,"value":132},{"type":23,"value":145},{"type":17,"tag":96,"props":16223,"children":16224},{"id":148},[16225],{"type":23,"value":151},{"type":17,"tag":26,"props":16227,"children":16228},{},[16229,16234],{"type":17,"tag":105,"props":16230,"children":16232},{"href":157,"rel":16231},[109],[16233],{"type":23,"value":161},{"type":23,"value":163},{"type":17,"tag":96,"props":16236,"children":16237},{"id":166},[16238],{"type":23,"value":169},{"type":17,"tag":26,"props":16240,"children":16241},{},[16242,16247],{"type":17,"tag":105,"props":16243,"children":16245},{"href":175,"rel":16244},[109],[16246],{"type":23,"value":169},{"type":23,"value":180},{"type":17,"tag":96,"props":16249,"children":16250},{"id":183},[16251],{"type":23,"value":183},{"type":17,"tag":26,"props":16253,"children":16254},{},[16255,16260],{"type":17,"tag":105,"props":16256,"children":16258},{"href":191,"rel":16257},[109],[16259],{"type":23,"value":183},{"type":23,"value":196},{"type":17,"tag":96,"props":16262,"children":16263},{"id":199},[16264],{"type":23,"value":199},{"type":17,"tag":26,"props":16266,"children":16267},{},[16268,16273],{"type":17,"tag":105,"props":16269,"children":16271},{"href":207,"rel":16270},[109],[16272],{"type":23,"value":199},{"type":23,"value":212},{"type":17,"tag":18,"props":16275,"children":16276},{"id":215},[16277],{"type":23,"value":218},{"type":17,"tag":26,"props":16279,"children":16280},{},[16281],{"type":23,"value":223},{"type":17,"tag":26,"props":16283,"children":16284},{},[16285],{"type":23,"value":228},{"type":17,"tag":26,"props":16287,"children":16288},{},[16289],{"type":23,"value":233},{"type":17,"tag":235,"props":16291,"children":16292},{},[16293,16297,16301,16305,16309],{"type":17,"tag":36,"props":16294,"children":16295},{},[16296],{"type":23,"value":242},{"type":17,"tag":36,"props":16298,"children":16299},{},[16300],{"type":23,"value":247},{"type":17,"tag":36,"props":16302,"children":16303},{},[16304],{"type":23,"value":252},{"type":17,"tag":36,"props":16306,"children":16307},{},[16308],{"type":23,"value":257},{"type":17,"tag":36,"props":16310,"children":16311},{},[16312],{"type":23,"value":262},{"type":17,"tag":96,"props":16314,"children":16315},{"id":265},[16316],{"type":23,"value":268},{"type":17,"tag":26,"props":16318,"children":16319},{},[16320],{"type":23,"value":273},{"type":17,"tag":275,"props":16322,"children":16323},{"code":277},[16324],{"type":17,"tag":79,"props":16325,"children":16326},{"__ignoreMap":8},[16327],{"type":23,"value":277},{"type":17,"tag":26,"props":16329,"children":16330},{},[16331,16332,16337,16338,16343],{"type":23,"value":287},{"type":17,"tag":79,"props":16333,"children":16335},{"className":16334},[],[16336],{"type":23,"value":293},{"type":23,"value":295},{"type":17,"tag":79,"props":16339,"children":16341},{"className":16340},[],[16342],{"type":23,"value":301},{"type":23,"value":303},{"type":17,"tag":26,"props":16345,"children":16346},{},[16347],{"type":23,"value":308},{"type":17,"tag":275,"props":16349,"children":16350},{"code":311},[16351],{"type":17,"tag":79,"props":16352,"children":16353},{"__ignoreMap":8},[16354],{"type":23,"value":311},{"type":17,"tag":96,"props":16356,"children":16357},{"id":319},[16358],{"type":23,"value":322},{"type":17,"tag":26,"props":16360,"children":16361},{},[16362,16363,16368,16369,16374,16375,16380],{"type":23,"value":327},{"type":17,"tag":105,"props":16364,"children":16366},{"href":330,"rel":16365},[109],[16367],{"type":23,"value":334},{"type":23,"value":336},{"type":17,"tag":105,"props":16370,"children":16372},{"href":339,"rel":16371},[109],[16373],{"type":23,"value":343},{"type":23,"value":345},{"type":17,"tag":105,"props":16376,"children":16378},{"href":348,"rel":16377},[109],[16379],{"type":23,"value":352},{"type":23,"value":354},{"type":17,"tag":26,"props":16382,"children":16383},{},[16384],{"type":23,"value":359},{"type":17,"tag":275,"props":16386,"children":16387},{"code":362},[16388],{"type":17,"tag":79,"props":16389,"children":16390},{"__ignoreMap":8},[16391],{"type":23,"value":362},{"title":8,"searchDepth":11,"depth":11,"links":16393},[16394,16395,16396,16405],{"id":20,"depth":11,"text":24},{"id":58,"depth":11,"text":61},{"id":69,"depth":11,"text":72,"children":16397},[16398,16399,16400,16401,16402,16403,16404],{"id":98,"depth":375,"text":84},{"id":116,"depth":375,"text":116},{"id":132,"depth":375,"text":132},{"id":148,"depth":375,"text":151},{"id":166,"depth":375,"text":169},{"id":183,"depth":375,"text":183},{"id":199,"depth":375,"text":199},{"id":215,"depth":11,"text":218,"children":16406},[16407,16408],{"id":265,"depth":375,"text":268},{"id":319,"depth":375,"text":322},{"_path":393,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":394,"description":395,"navigation":396,"index":375,"icon":12,"body":16410,"_type":386,"_id":1852,"_source":388,"_file":1853,"_stem":1854,"_extension":391},{"type":14,"children":16411,"toc":17587},[16412,16421,16425,16429,16439,16446,16467,16487,16494,16503,16514,16518,16522,16526,16536,16543,16547,16554,16570,16591,16598,16602,16616,16632,16639,16654,16660,16664,16670,16674,16684,16691,16700,16707,16711,16718,16722,16726,16778,16782,16798,16879,16904,16908,16918,16929,16951,16985,17000,17018,17022,17032,17057,17068,17072,17246,17250,17254,17258,17297,17301,17323,17327,17331,17339,17343,17358,17362,17370,17382,17390,17394,17398,17409,17416,17427,17434,17483,17495,17499,17507,17514,17522,17529,17562],{"type":17,"tag":26,"props":16413,"children":16414},{},[16415,16416],{"type":23,"value":403},{"type":17,"tag":105,"props":16417,"children":16419},{"href":406,"rel":16418},[109],[16420],{"type":23,"value":410},{"type":17,"tag":26,"props":16422,"children":16423},{},[16424],{"type":23,"value":415},{"type":17,"tag":18,"props":16426,"children":16427},{"id":418},[16428],{"type":23,"value":421},{"type":17,"tag":26,"props":16430,"children":16431},{},[16432,16433,16438],{"type":23,"value":426},{"type":17,"tag":79,"props":16434,"children":16436},{"className":16435},[],[16437],{"type":23,"value":432},{"type":23,"value":434},{"type":17,"tag":275,"props":16440,"children":16441},{"code":437},[16442],{"type":17,"tag":79,"props":16443,"children":16444},{"__ignoreMap":8},[16445],{"type":23,"value":437},{"type":17,"tag":26,"props":16447,"children":16448},{},[16449,16450,16455,16456,16460,16461,16466],{"type":23,"value":447},{"type":17,"tag":79,"props":16451,"children":16453},{"className":16452},[],[16454],{"type":23,"value":453},{"type":23,"value":455},{"type":17,"tag":457,"props":16457,"children":16458},{},[16459],{"type":23,"value":461},{"type":23,"value":463},{"type":17,"tag":79,"props":16462,"children":16464},{"className":16463},[],[16465],{"type":23,"value":469},{"type":23,"value":471},{"type":17,"tag":26,"props":16468,"children":16469},{},[16470,16471,16476,16477,16481,16482,16486],{"type":23,"value":476},{"type":17,"tag":79,"props":16472,"children":16474},{"className":16473},[],[16475],{"type":23,"value":432},{"type":23,"value":483},{"type":17,"tag":457,"props":16478,"children":16479},{},[16480],{"type":23,"value":488},{"type":23,"value":490},{"type":17,"tag":457,"props":16483,"children":16484},{},[16485],{"type":23,"value":495},{"type":23,"value":497},{"type":17,"tag":275,"props":16488,"children":16489},{"code":500},[16490],{"type":17,"tag":79,"props":16491,"children":16492},{"__ignoreMap":8},[16493],{"type":23,"value":500},{"type":17,"tag":26,"props":16495,"children":16496},{},[16497,16498,16502],{"type":23,"value":510},{"type":17,"tag":457,"props":16499,"children":16500},{},[16501],{"type":23,"value":495},{"type":23,"value":516},{"type":17,"tag":518,"props":16504,"children":16505},{":editable":520,":show-in-col":520,"max-height":521},[16506],{"type":17,"tag":275,"props":16507,"children":16509},{"code":525,"language":432,"meta":8,"className":16508},[527],[16510],{"type":17,"tag":79,"props":16511,"children":16512},{"__ignoreMap":8},[16513],{"type":23,"value":525},{"type":17,"tag":18,"props":16515,"children":16516},{"id":535},[16517],{"type":23,"value":538},{"type":17,"tag":26,"props":16519,"children":16520},{},[16521],{"type":23,"value":543},{"type":17,"tag":96,"props":16523,"children":16524},{"id":546},[16525],{"type":23,"value":549},{"type":17,"tag":26,"props":16527,"children":16528},{},[16529,16530,16535],{"type":23,"value":554},{"type":17,"tag":79,"props":16531,"children":16533},{"className":16532},[],[16534],{"type":23,"value":560},{"type":23,"value":562},{"type":17,"tag":275,"props":16537,"children":16538},{"code":565},[16539],{"type":17,"tag":79,"props":16540,"children":16541},{"__ignoreMap":8},[16542],{"type":23,"value":565},{"type":17,"tag":26,"props":16544,"children":16545},{},[16546],{"type":23,"value":575},{"type":17,"tag":275,"props":16548,"children":16549},{"code":578},[16550],{"type":17,"tag":79,"props":16551,"children":16552},{"__ignoreMap":8},[16553],{"type":23,"value":578},{"type":17,"tag":26,"props":16555,"children":16556},{},[16557,16558,16563,16564,16569],{"type":23,"value":588},{"type":17,"tag":79,"props":16559,"children":16561},{"className":16560},[],[16562],{"type":23,"value":594},{"type":23,"value":596},{"type":17,"tag":79,"props":16565,"children":16567},{"className":16566},[],[16568],{"type":23,"value":594},{"type":23,"value":603},{"type":17,"tag":26,"props":16571,"children":16572},{},[16573,16574,16578,16579,16584,16585,16590],{"type":23,"value":608},{"type":17,"tag":457,"props":16575,"children":16576},{},[16577],{"type":23,"value":613},{"type":23,"value":615},{"type":17,"tag":79,"props":16580,"children":16582},{"className":16581},[],[16583],{"type":23,"value":621},{"type":23,"value":623},{"type":17,"tag":79,"props":16586,"children":16588},{"className":16587},[],[16589],{"type":23,"value":594},{"type":23,"value":630},{"type":17,"tag":275,"props":16592,"children":16593},{"code":633},[16594],{"type":17,"tag":79,"props":16595,"children":16596},{"__ignoreMap":8},[16597],{"type":23,"value":633},{"type":17,"tag":96,"props":16599,"children":16600},{"id":641},[16601],{"type":23,"value":644},{"type":17,"tag":26,"props":16603,"children":16604},{},[16605,16606,16610,16611,16615],{"type":23,"value":649},{"type":17,"tag":457,"props":16607,"children":16608},{},[16609],{"type":23,"value":654},{"type":23,"value":656},{"type":17,"tag":457,"props":16612,"children":16613},{},[16614],{"type":23,"value":661},{"type":23,"value":663},{"type":17,"tag":26,"props":16617,"children":16618},{},[16619,16620,16625,16626,16631],{"type":23,"value":668},{"type":17,"tag":79,"props":16621,"children":16623},{"className":16622},[],[16624],{"type":23,"value":674},{"type":23,"value":676},{"type":17,"tag":79,"props":16627,"children":16629},{"className":16628},[],[16630],{"type":23,"value":654},{"type":23,"value":434},{"type":17,"tag":275,"props":16633,"children":16634},{"code":685},[16635],{"type":17,"tag":79,"props":16636,"children":16637},{"__ignoreMap":8},[16638],{"type":23,"value":685},{"type":17,"tag":26,"props":16640,"children":16641},{},[16642,16643,16648,16649],{"type":23,"value":695},{"type":17,"tag":79,"props":16644,"children":16646},{"className":16645},[],[16647],{"type":23,"value":701},{"type":23,"value":703},{"type":17,"tag":79,"props":16650,"children":16652},{"className":16651},[],[16653],{"type":23,"value":709},{"type":17,"tag":26,"props":16655,"children":16656},{},[16657],{"type":17,"tag":714,"props":16658,"children":16659},{"alt":716,"src":717},[],{"type":17,"tag":26,"props":16661,"children":16662},{},[16663],{"type":23,"value":723},{"type":17,"tag":26,"props":16665,"children":16666},{},[16667],{"type":17,"tag":714,"props":16668,"children":16669},{"alt":729,"src":730},[],{"type":17,"tag":96,"props":16671,"children":16672},{"id":734},[16673],{"type":23,"value":737},{"type":17,"tag":26,"props":16675,"children":16676},{},[16677,16678,16683],{"type":23,"value":742},{"type":17,"tag":79,"props":16679,"children":16681},{"className":16680},[],[16682],{"type":23,"value":748},{"type":23,"value":750},{"type":17,"tag":275,"props":16685,"children":16686},{"code":753},[16687],{"type":17,"tag":79,"props":16688,"children":16689},{"__ignoreMap":8},[16690],{"type":23,"value":753},{"type":17,"tag":26,"props":16692,"children":16693},{},[16694,16695,16699],{"type":23,"value":763},{"type":17,"tag":457,"props":16696,"children":16697},{},[16698],{"type":23,"value":768},{"type":23,"value":770},{"type":17,"tag":275,"props":16701,"children":16702},{"code":773},[16703],{"type":17,"tag":79,"props":16704,"children":16705},{"__ignoreMap":8},[16706],{"type":23,"value":773},{"type":17,"tag":26,"props":16708,"children":16709},{},[16710],{"type":23,"value":783},{"type":17,"tag":275,"props":16712,"children":16713},{"code":786},[16714],{"type":17,"tag":79,"props":16715,"children":16716},{"__ignoreMap":8},[16717],{"type":23,"value":786},{"type":17,"tag":18,"props":16719,"children":16720},{"id":794},[16721],{"type":23,"value":797},{"type":17,"tag":96,"props":16723,"children":16724},{"id":800},[16725],{"type":23,"value":803},{"type":17,"tag":518,"props":16727,"children":16728},{":editable":520,":show-in-col":520,"max-height":521},[16729,16733,16741,16745,16753],{"type":17,"tag":26,"props":16730,"children":16731},{},[16732],{"type":23,"value":811},{"type":17,"tag":275,"props":16734,"children":16736},{"code":814,"language":432,"meta":8,"className":16735},[527],[16737],{"type":17,"tag":79,"props":16738,"children":16739},{"__ignoreMap":8},[16740],{"type":23,"value":814},{"type":17,"tag":26,"props":16742,"children":16743},{},[16744],{"type":23,"value":825},{"type":17,"tag":275,"props":16746,"children":16748},{"code":828,"language":432,"meta":8,"className":16747},[527],[16749],{"type":17,"tag":79,"props":16750,"children":16751},{"__ignoreMap":8},[16752],{"type":23,"value":828},{"type":17,"tag":836,"props":16754,"children":16755},{},[16756],{"type":17,"tag":836,"props":16757,"children":16758},{},[16759],{"type":17,"tag":836,"props":16760,"children":16761},{},[16762],{"type":17,"tag":836,"props":16763,"children":16764},{},[16765],{"type":17,"tag":836,"props":16766,"children":16767},{},[16768],{"type":17,"tag":836,"props":16769,"children":16770},{},[16771],{"type":17,"tag":836,"props":16772,"children":16773},{},[16774],{"type":17,"tag":26,"props":16775,"children":16776},{},[16777],{"type":23,"value":861},{"type":17,"tag":96,"props":16779,"children":16780},{"id":864},[16781],{"type":23,"value":867},{"type":17,"tag":26,"props":16783,"children":16784},{},[16785,16786,16791,16792,16797],{"type":23,"value":872},{"type":17,"tag":79,"props":16787,"children":16789},{"className":16788},[],[16790],{"type":23,"value":878},{"type":23,"value":880},{"type":17,"tag":79,"props":16793,"children":16795},{"className":16794},[],[16796],{"type":23,"value":886},{"type":23,"value":888},{"type":17,"tag":518,"props":16799,"children":16800},{":editable":520,":show-in-col":520,"max-height":521},[16801,16805,16813,16817,16833,16837,16864],{"type":17,"tag":26,"props":16802,"children":16803},{},[16804],{"type":23,"value":811},{"type":17,"tag":275,"props":16806,"children":16808},{"code":898,"language":432,"meta":8,"className":16807},[527],[16809],{"type":17,"tag":79,"props":16810,"children":16811},{"__ignoreMap":8},[16812],{"type":23,"value":898},{"type":17,"tag":26,"props":16814,"children":16815},{},[16816],{"type":23,"value":909},{"type":17,"tag":26,"props":16818,"children":16819},{},[16820,16821,16826,16827,16832],{"type":23,"value":914},{"type":17,"tag":79,"props":16822,"children":16824},{"className":16823},[],[16825],{"type":23,"value":920},{"type":23,"value":922},{"type":17,"tag":79,"props":16828,"children":16830},{"className":16829},[],[16831],{"type":23,"value":920},{"type":23,"value":929},{"type":17,"tag":96,"props":16834,"children":16835},{"id":932},[16836],{"type":23,"value":935},{"type":17,"tag":26,"props":16838,"children":16839},{},[16840,16841,16846,16847,16851,16852,16857,16858,16863],{"type":23,"value":940},{"type":17,"tag":79,"props":16842,"children":16844},{"className":16843},[],[16845],{"type":23,"value":946},{"type":23,"value":948},{"type":17,"tag":457,"props":16848,"children":16849},{},[16850],{"type":23,"value":953},{"type":23,"value":955},{"type":17,"tag":79,"props":16853,"children":16855},{"className":16854},[],[16856],{"type":23,"value":961},{"type":23,"value":880},{"type":17,"tag":79,"props":16859,"children":16861},{"className":16860},[],[16862],{"type":23,"value":968},{"type":23,"value":970},{"type":17,"tag":518,"props":16865,"children":16866},{":editable":520,":show-in-col":520,"max-height":521},[16867,16875],{"type":17,"tag":275,"props":16868,"children":16870},{"code":976,"language":432,"meta":8,"className":16869},[527],[16871],{"type":17,"tag":79,"props":16872,"children":16873},{"__ignoreMap":8},[16874],{"type":23,"value":976},{"type":17,"tag":984,"props":16876,"children":16877},{"id":986},[16878],{"type":23,"value":811},{"type":17,"tag":836,"props":16880,"children":16881},{},[16882],{"type":17,"tag":836,"props":16883,"children":16884},{},[16885],{"type":17,"tag":836,"props":16886,"children":16887},{},[16888],{"type":17,"tag":836,"props":16889,"children":16890},{},[16891],{"type":17,"tag":836,"props":16892,"children":16893},{},[16894],{"type":17,"tag":836,"props":16895,"children":16896},{},[16897],{"type":17,"tag":836,"props":16898,"children":16899},{},[16900],{"type":17,"tag":26,"props":16901,"children":16902},{},[16903],{"type":23,"value":1014},{"type":17,"tag":96,"props":16905,"children":16906},{"id":1017},[16907],{"type":23,"value":1020},{"type":17,"tag":26,"props":16909,"children":16910},{},[16911,16912,16917],{"type":23,"value":1025},{"type":17,"tag":79,"props":16913,"children":16915},{"className":16914},[],[16916],{"type":23,"value":1031},{"type":23,"value":1033},{"type":17,"tag":518,"props":16919,"children":16920},{":editable":520,":show-in-col":520,"max-height":521},[16921],{"type":17,"tag":275,"props":16922,"children":16924},{"code":1039,"language":432,"meta":8,"className":16923},[527],[16925],{"type":17,"tag":79,"props":16926,"children":16927},{"__ignoreMap":8},[16928],{"type":23,"value":1039},{"type":17,"tag":26,"props":16930,"children":16931},{},[16932,16933,16938,16939,16944,16945,16950],{"type":23,"value":1050},{"type":17,"tag":79,"props":16934,"children":16936},{"className":16935},[],[16937],{"type":23,"value":105},{"type":23,"value":1057},{"type":17,"tag":79,"props":16940,"children":16942},{"className":16941},[],[16943],{"type":23,"value":105},{"type":23,"value":1064},{"type":17,"tag":79,"props":16946,"children":16948},{"className":16947},[],[16949],{"type":23,"value":1070},{"type":23,"value":920},{"type":17,"tag":26,"props":16952,"children":16953},{},[16954,16955,16960,16961,16966,16967,16972,16973,16978,16979,16984],{"type":23,"value":1076},{"type":17,"tag":79,"props":16956,"children":16958},{"className":16957},[],[16959],{"type":23,"value":105},{"type":23,"value":86},{"type":17,"tag":79,"props":16962,"children":16964},{"className":16963},[],[16965],{"type":23,"value":1070},{"type":23,"value":1089},{"type":17,"tag":79,"props":16968,"children":16970},{"className":16969},[],[16971],{"type":23,"value":1095},{"type":23,"value":1097},{"type":17,"tag":79,"props":16974,"children":16976},{"className":16975},[],[16977],{"type":23,"value":105},{"type":23,"value":1104},{"type":17,"tag":79,"props":16980,"children":16982},{"className":16981},[],[16983],{"type":23,"value":1070},{"type":23,"value":920},{"type":17,"tag":518,"props":16986,"children":16987},{":editable":520,":show-in-col":520,"max-height":521},[16988,16996],{"type":17,"tag":275,"props":16989,"children":16991},{"code":1116,"language":432,"meta":8,"className":16990},[527],[16992],{"type":17,"tag":79,"props":16993,"children":16994},{"__ignoreMap":8},[16995],{"type":23,"value":1116},{"type":17,"tag":26,"props":16997,"children":16998},{},[16999],{"type":23,"value":811},{"type":17,"tag":836,"props":17001,"children":17002},{},[17003],{"type":17,"tag":26,"props":17004,"children":17005},{},[17006,17007,17011,17012,17017],{"type":23,"value":1134},{"type":17,"tag":1136,"props":17008,"children":17009},{},[17010],{"type":23,"value":1140},{"type":23,"value":1142},{"type":17,"tag":79,"props":17013,"children":17015},{"className":17014},[],[17016],{"type":23,"value":1148},{"type":23,"value":1150},{"type":17,"tag":26,"props":17019,"children":17020},{},[17021],{"type":23,"value":909},{"type":17,"tag":26,"props":17023,"children":17024},{},[17025,17026,17031],{"type":23,"value":1159},{"type":17,"tag":79,"props":17027,"children":17029},{"className":17028},[],[17030],{"type":23,"value":1148},{"type":23,"value":1166},{"type":17,"tag":836,"props":17033,"children":17034},{},[17035],{"type":17,"tag":836,"props":17036,"children":17037},{},[17038],{"type":17,"tag":836,"props":17039,"children":17040},{},[17041],{"type":17,"tag":836,"props":17042,"children":17043},{},[17044],{"type":17,"tag":836,"props":17045,"children":17046},{},[17047],{"type":17,"tag":836,"props":17048,"children":17049},{},[17050],{"type":17,"tag":836,"props":17051,"children":17052},{},[17053],{"type":17,"tag":26,"props":17054,"children":17055},{},[17056],{"type":23,"value":861},{"type":17,"tag":518,"props":17058,"children":17059},{":editable":520,":show-in-col":520,"max-height":521},[17060],{"type":17,"tag":275,"props":17061,"children":17063},{"code":1197,"language":432,"meta":8,"className":17062},[527],[17064],{"type":17,"tag":79,"props":17065,"children":17066},{"__ignoreMap":8},[17067],{"type":23,"value":1197},{"type":17,"tag":96,"props":17069,"children":17070},{"id":1206},[17071],{"type":23,"value":1209},{"type":17,"tag":1211,"props":17073,"children":17074},{},[17075,17089],{"type":17,"tag":1215,"props":17076,"children":17077},{},[17078],{"type":17,"tag":1219,"props":17079,"children":17080},{},[17081,17085],{"type":17,"tag":1223,"props":17082,"children":17083},{},[17084],{"type":23,"value":1227},{"type":17,"tag":1223,"props":17086,"children":17087},{},[17088],{"type":23,"value":1232},{"type":17,"tag":1234,"props":17090,"children":17091},{},[17092,17103,17114,17125,17136,17147,17158,17169,17180,17191,17202,17213,17224,17235],{"type":17,"tag":1219,"props":17093,"children":17094},{},[17095,17099],{"type":17,"tag":1241,"props":17096,"children":17097},{},[17098],{"type":23,"value":1245},{"type":17,"tag":1241,"props":17100,"children":17101},{},[17102],{"type":23,"value":1250},{"type":17,"tag":1219,"props":17104,"children":17105},{},[17106,17110],{"type":17,"tag":1241,"props":17107,"children":17108},{},[17109],{"type":23,"value":1258},{"type":17,"tag":1241,"props":17111,"children":17112},{},[17113],{"type":23,"value":1263},{"type":17,"tag":1219,"props":17115,"children":17116},{},[17117,17121],{"type":17,"tag":1241,"props":17118,"children":17119},{},[17120],{"type":23,"value":1271},{"type":17,"tag":1241,"props":17122,"children":17123},{},[17124],{"type":23,"value":1276},{"type":17,"tag":1219,"props":17126,"children":17127},{},[17128,17132],{"type":17,"tag":1241,"props":17129,"children":17130},{},[17131],{"type":23,"value":1284},{"type":17,"tag":1241,"props":17133,"children":17134},{},[17135],{"type":23,"value":1289},{"type":17,"tag":1219,"props":17137,"children":17138},{},[17139,17143],{"type":17,"tag":1241,"props":17140,"children":17141},{},[17142],{"type":23,"value":1297},{"type":17,"tag":1241,"props":17144,"children":17145},{},[17146],{"type":23,"value":1302},{"type":17,"tag":1219,"props":17148,"children":17149},{},[17150,17154],{"type":17,"tag":1241,"props":17151,"children":17152},{},[17153],{"type":23,"value":1310},{"type":17,"tag":1241,"props":17155,"children":17156},{},[17157],{"type":23,"value":1315},{"type":17,"tag":1219,"props":17159,"children":17160},{},[17161,17165],{"type":17,"tag":1241,"props":17162,"children":17163},{},[17164],{"type":23,"value":1323},{"type":17,"tag":1241,"props":17166,"children":17167},{},[17168],{"type":23,"value":1328},{"type":17,"tag":1219,"props":17170,"children":17171},{},[17172,17176],{"type":17,"tag":1241,"props":17173,"children":17174},{},[17175],{"type":23,"value":1336},{"type":17,"tag":1241,"props":17177,"children":17178},{},[17179],{"type":23,"value":1341},{"type":17,"tag":1219,"props":17181,"children":17182},{},[17183,17187],{"type":17,"tag":1241,"props":17184,"children":17185},{},[17186],{"type":23,"value":1349},{"type":17,"tag":1241,"props":17188,"children":17189},{},[17190],{"type":23,"value":1354},{"type":17,"tag":1219,"props":17192,"children":17193},{},[17194,17198],{"type":17,"tag":1241,"props":17195,"children":17196},{},[17197],{"type":23,"value":1362},{"type":17,"tag":1241,"props":17199,"children":17200},{},[17201],{"type":23,"value":1367},{"type":17,"tag":1219,"props":17203,"children":17204},{},[17205,17209],{"type":17,"tag":1241,"props":17206,"children":17207},{},[17208],{"type":23,"value":1375},{"type":17,"tag":1241,"props":17210,"children":17211},{},[17212],{"type":23,"value":1380},{"type":17,"tag":1219,"props":17214,"children":17215},{},[17216,17220],{"type":17,"tag":1241,"props":17217,"children":17218},{},[17219],{"type":23,"value":1388},{"type":17,"tag":1241,"props":17221,"children":17222},{},[17223],{"type":23,"value":1393},{"type":17,"tag":1219,"props":17225,"children":17226},{},[17227,17231],{"type":17,"tag":1241,"props":17228,"children":17229},{},[17230],{"type":23,"value":1401},{"type":17,"tag":1241,"props":17232,"children":17233},{},[17234],{"type":23,"value":1406},{"type":17,"tag":1219,"props":17236,"children":17237},{},[17238,17242],{"type":17,"tag":1241,"props":17239,"children":17240},{},[17241],{"type":23,"value":1414},{"type":17,"tag":1241,"props":17243,"children":17244},{},[17245],{"type":23,"value":1419},{"type":17,"tag":26,"props":17247,"children":17248},{},[17249],{"type":23,"value":1424},{"type":17,"tag":96,"props":17251,"children":17252},{"id":1427},[17253],{"type":23,"value":1430},{"type":17,"tag":26,"props":17255,"children":17256},{},[17257],{"type":23,"value":1435},{"type":17,"tag":235,"props":17259,"children":17260},{},[17261,17265,17269,17273,17277,17281,17285,17289,17293],{"type":17,"tag":36,"props":17262,"children":17263},{},[17264],{"type":23,"value":1443},{"type":17,"tag":36,"props":17266,"children":17267},{},[17268],{"type":23,"value":1448},{"type":17,"tag":36,"props":17270,"children":17271},{},[17272],{"type":23,"value":1453},{"type":17,"tag":36,"props":17274,"children":17275},{},[17276],{"type":23,"value":1458},{"type":17,"tag":36,"props":17278,"children":17279},{},[17280],{"type":23,"value":1463},{"type":17,"tag":36,"props":17282,"children":17283},{},[17284],{"type":23,"value":1468},{"type":17,"tag":36,"props":17286,"children":17287},{},[17288],{"type":23,"value":1473},{"type":17,"tag":36,"props":17290,"children":17291},{},[17292],{"type":23,"value":1478},{"type":17,"tag":36,"props":17294,"children":17295},{},[17296],{"type":23,"value":1483},{"type":17,"tag":96,"props":17298,"children":17299},{"id":1486},[17300],{"type":23,"value":1489},{"type":17,"tag":26,"props":17302,"children":17303},{},[17304,17305,17310,17311,17316,17317,17322],{"type":23,"value":1494},{"type":17,"tag":79,"props":17306,"children":17308},{"className":17307},[],[17309],{"type":23,"value":1500},{"type":23,"value":1502},{"type":17,"tag":79,"props":17312,"children":17314},{"className":17313},[],[17315],{"type":23,"value":920},{"type":23,"value":1509},{"type":17,"tag":79,"props":17318,"children":17320},{"className":17319},[],[17321],{"type":23,"value":1515},{"type":23,"value":1517},{"type":17,"tag":26,"props":17324,"children":17325},{},[17326],{"type":23,"value":1522},{"type":17,"tag":26,"props":17328,"children":17329},{},[17330],{"type":23,"value":1527},{"type":17,"tag":275,"props":17332,"children":17334},{"code":1530,"language":432,"meta":8,"className":17333},[527],[17335],{"type":17,"tag":79,"props":17336,"children":17337},{"__ignoreMap":8},[17338],{"type":23,"value":1530},{"type":17,"tag":26,"props":17340,"children":17341},{},[17342],{"type":23,"value":1541},{"type":17,"tag":235,"props":17344,"children":17345},{},[17346,17350,17354],{"type":17,"tag":36,"props":17347,"children":17348},{},[17349],{"type":23,"value":1549},{"type":17,"tag":36,"props":17351,"children":17352},{},[17353],{"type":23,"value":1554},{"type":17,"tag":36,"props":17355,"children":17356},{},[17357],{"type":23,"value":1559},{"type":17,"tag":1561,"props":17359,"children":17360},{"id":1563},[17361],{"type":23,"value":1566},{"type":17,"tag":275,"props":17363,"children":17365},{"code":1569,"language":432,"meta":8,"className":17364},[527],[17366],{"type":17,"tag":79,"props":17367,"children":17368},{"__ignoreMap":8},[17369],{"type":23,"value":1569},{"type":17,"tag":836,"props":17371,"children":17372},{},[17373],{"type":17,"tag":26,"props":17374,"children":17375},{},[17376,17377,17381],{"type":23,"value":1134},{"type":17,"tag":1136,"props":17378,"children":17379},{},[17380],{"type":23,"value":1587},{"type":23,"value":1589},{"type":17,"tag":275,"props":17383,"children":17385},{"code":1592,"language":432,"meta":8,"className":17384},[527],[17386],{"type":17,"tag":79,"props":17387,"children":17388},{"__ignoreMap":8},[17389],{"type":23,"value":1592},{"type":17,"tag":26,"props":17391,"children":17392},{},[17393],{"type":23,"value":811},{"type":17,"tag":96,"props":17395,"children":17396},{"id":1605},[17397],{"type":23,"value":1608},{"type":17,"tag":26,"props":17399,"children":17400},{},[17401,17405,17408],{"type":17,"tag":1136,"props":17402,"children":17403},{},[17404],{"type":23,"value":1616},{"type":17,"tag":1618,"props":17406,"children":17407},{},[],{"type":23,"value":1622},{"type":17,"tag":26,"props":17410,"children":17411},{},[17412],{"type":17,"tag":1136,"props":17413,"children":17414},{},[17415],{"type":23,"value":1630},{"type":17,"tag":518,"props":17417,"children":17418},{":editable":520,":show-in-col":520,"max-height":521},[17419],{"type":17,"tag":275,"props":17420,"children":17422},{"code":1636,"language":432,"meta":8,"className":17421},[527],[17423],{"type":17,"tag":79,"props":17424,"children":17425},{"__ignoreMap":8},[17426],{"type":23,"value":1636},{"type":17,"tag":26,"props":17428,"children":17429},{},[17430],{"type":17,"tag":1136,"props":17431,"children":17432},{},[17433],{"type":23,"value":1650},{"type":17,"tag":32,"props":17435,"children":17436},{},[17437,17447,17463,17473],{"type":17,"tag":36,"props":17438,"children":17439},{},[17440,17441,17446],{"type":23,"value":1658},{"type":17,"tag":79,"props":17442,"children":17444},{"className":17443},[],[17445],{"type":23,"value":1500},{"type":23,"value":1665},{"type":17,"tag":36,"props":17448,"children":17449},{},[17450,17451,17456,17457,17462],{"type":23,"value":1670},{"type":17,"tag":79,"props":17452,"children":17454},{"className":17453},[],[17455],{"type":23,"value":1676},{"type":23,"value":1678},{"type":17,"tag":79,"props":17458,"children":17460},{"className":17459},[],[17461],{"type":23,"value":1684},{"type":23,"value":1686},{"type":17,"tag":36,"props":17464,"children":17465},{},[17466,17467,17472],{"type":23,"value":1691},{"type":17,"tag":79,"props":17468,"children":17470},{"className":17469},[],[17471],{"type":23,"value":1697},{"type":23,"value":1699},{"type":17,"tag":36,"props":17474,"children":17475},{},[17476,17477,17482],{"type":23,"value":1704},{"type":17,"tag":79,"props":17478,"children":17480},{"className":17479},[],[17481],{"type":23,"value":1710},{"type":23,"value":1712},{"type":17,"tag":836,"props":17484,"children":17485},{},[17486],{"type":17,"tag":26,"props":17487,"children":17488},{},[17489,17490,17494],{"type":23,"value":1134},{"type":17,"tag":1136,"props":17491,"children":17492},{},[17493],{"type":23,"value":1140},{"type":23,"value":1725},{"type":17,"tag":96,"props":17496,"children":17497},{"id":1728},[17498],{"type":23,"value":1731},{"type":17,"tag":26,"props":17500,"children":17501},{},[17502,17506],{"type":17,"tag":1136,"props":17503,"children":17504},{},[17505],{"type":23,"value":1739},{"type":23,"value":1741},{"type":17,"tag":26,"props":17508,"children":17509},{},[17510],{"type":17,"tag":1136,"props":17511,"children":17512},{},[17513],{"type":23,"value":1749},{"type":17,"tag":275,"props":17515,"children":17517},{"code":1752,"language":432,"meta":8,"className":17516},[527],[17518],{"type":17,"tag":79,"props":17519,"children":17520},{"__ignoreMap":8},[17521],{"type":23,"value":1752},{"type":17,"tag":26,"props":17523,"children":17524},{},[17525],{"type":17,"tag":1136,"props":17526,"children":17527},{},[17528],{"type":23,"value":1766},{"type":17,"tag":32,"props":17530,"children":17531},{},[17532,17542,17552],{"type":17,"tag":36,"props":17533,"children":17534},{},[17535,17536,17541],{"type":23,"value":1774},{"type":17,"tag":79,"props":17537,"children":17539},{"className":17538},[],[17540],{"type":23,"value":1500},{"type":23,"value":1781},{"type":17,"tag":36,"props":17543,"children":17544},{},[17545,17546,17551],{"type":23,"value":1786},{"type":17,"tag":79,"props":17547,"children":17549},{"className":17548},[],[17550],{"type":23,"value":1792},{"type":23,"value":1794},{"type":17,"tag":36,"props":17553,"children":17554},{},[17555,17556,17561],{"type":23,"value":1799},{"type":17,"tag":79,"props":17557,"children":17559},{"className":17558},[],[17560],{"type":23,"value":1805},{"type":23,"value":1807},{"type":17,"tag":836,"props":17563,"children":17564},{},[17565],{"type":17,"tag":836,"props":17566,"children":17567},{},[17568],{"type":17,"tag":836,"props":17569,"children":17570},{},[17571],{"type":17,"tag":836,"props":17572,"children":17573},{},[17574],{"type":17,"tag":836,"props":17575,"children":17576},{},[17577],{"type":17,"tag":836,"props":17578,"children":17579},{},[17580],{"type":17,"tag":836,"props":17581,"children":17582},{},[17583],{"type":17,"tag":26,"props":17584,"children":17585},{},[17586],{"type":23,"value":861},{"title":8,"searchDepth":11,"depth":11,"links":17588},[17589,17590,17595],{"id":418,"depth":11,"text":421},{"id":535,"depth":11,"text":538,"children":17591},[17592,17593,17594],{"id":546,"depth":375,"text":549},{"id":641,"depth":375,"text":644},{"id":734,"depth":375,"text":737},{"id":794,"depth":11,"text":797,"children":17596},[17597,17598,17599,17600,17601,17602,17603,17604,17605],{"id":800,"depth":375,"text":803},{"id":864,"depth":375,"text":867},{"id":932,"depth":375,"text":935},{"id":1017,"depth":375,"text":1020},{"id":1206,"depth":375,"text":1209},{"id":1427,"depth":375,"text":1430},{"id":1486,"depth":375,"text":1489},{"id":1605,"depth":375,"text":1608},{"id":1728,"depth":375,"text":1731},{"_path":1856,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":1857,"description":395,"navigation":396,"index":1858,"icon":12,"body":17607,"_type":386,"_id":6393,"_source":388,"_file":6394,"_stem":6395,"_extension":391},{"type":14,"children":17608,"toc":21446},[17609,17613,17617,17734,17769,17779,17790,17794,17816,17827,17831,17882,17898,17914,17925,17929,17940,17968,17979,17983,18029,18040,18044,18055,18077,18088,18140,18150,18160,18171,18175,18244,18248,18267,18278,18294,18305,18357,18368,18372,18376,18387,18445,18479,18490,18500,18511,18556,18567,18571,18587,18598,18614,18625,18659,18670,18686,18708,18719,18723,18784,18788,18810,18832,18862,18866,18877,18899,18903,18914,18936,18946,18957,18985,19013,19024,19040,19093,19097,19125,19168,19172,19176,19192,19203,19207,19218,19222,19238,19249,19271,19282,19292,19303,19307,19318,19334,19345,19349,19365,19369,19373,19384,19388,19399,19403,19414,19425,19436,19440,19456,19460,19464,19475,19485,19496,19507,19523,19534,19538,19549,19565,19569,19580,19609,19631,19642,19646,19668,19672,19676,19718,19770,19774,19821,19825,19833,19837,19841,19849,19907,19911,19915,19926,19936,19947,19957,19968,19990,20001,20005,20016,20020,20031,20035,20039,20043,20083,20094,20116,20120,20131,20177,20193,20197,20201,20205,20216,20232,20248,20252,20263,20297,20307,20318,20340,20344,20348,20352,20356,20360,20371,20387,20391,20395,20399,20403,20414,20430,20434,20450,20460,20476,20484,20536,20546,20557,20597,20607,20615,20625,20635,20657,20668,20676,20710,20720,20731,20747,20757,20768,20796,20812,20823,20845,20853,20905,20921,20932,20948,20958,20969,20979,20990,20994,21005,21027,21043,21054,21058,21062,21092,21102,21113,21153,21163,21174,21214,21224,21235,21269,21273,21277,21293,21304,21338,21366,21370,21381,21403,21407,21418],{"type":17,"tag":96,"props":17610,"children":17611},{"id":1863},[17612],{"type":23,"value":1866},{"type":17,"tag":26,"props":17614,"children":17615},{},[17616],{"type":23,"value":1871},{"type":17,"tag":235,"props":17618,"children":17619},{},[17620,17653,17686,17713],{"type":17,"tag":36,"props":17621,"children":17622},{},[17623,17624,17629,17630,17635,17636,17641,17642,17647,17648],{"type":23,"value":1879},{"type":17,"tag":79,"props":17625,"children":17627},{"className":17626},[],[17628],{"type":23,"value":1885},{"type":23,"value":1887},{"type":17,"tag":79,"props":17631,"children":17633},{"className":17632},[],[17634],{"type":23,"value":1893},{"type":23,"value":1895},{"type":17,"tag":79,"props":17637,"children":17639},{"className":17638},[],[17640],{"type":23,"value":1901},{"type":23,"value":1895},{"type":17,"tag":79,"props":17643,"children":17645},{"className":17644},[],[17646],{"type":23,"value":1908},{"type":23,"value":1895},{"type":17,"tag":79,"props":17649,"children":17651},{"className":17650},[],[17652],{"type":23,"value":1915},{"type":17,"tag":36,"props":17654,"children":17655},{},[17656,17657,17662,17663,17668,17669,17674,17675,17680,17681],{"type":23,"value":1920},{"type":17,"tag":79,"props":17658,"children":17660},{"className":17659},[],[17661],{"type":23,"value":1926},{"type":23,"value":1887},{"type":17,"tag":79,"props":17664,"children":17666},{"className":17665},[],[17667],{"type":23,"value":1933},{"type":23,"value":1895},{"type":17,"tag":79,"props":17670,"children":17672},{"className":17671},[],[17673],{"type":23,"value":1940},{"type":23,"value":1895},{"type":17,"tag":79,"props":17676,"children":17678},{"className":17677},[],[17679],{"type":23,"value":1947},{"type":23,"value":1895},{"type":17,"tag":79,"props":17682,"children":17684},{"className":17683},[],[17685],{"type":23,"value":1954},{"type":17,"tag":36,"props":17687,"children":17688},{},[17689,17690,17695,17696,17701,17702,17707,17708],{"type":23,"value":1959},{"type":17,"tag":79,"props":17691,"children":17693},{"className":17692},[],[17694],{"type":23,"value":1965},{"type":23,"value":1887},{"type":17,"tag":79,"props":17697,"children":17699},{"className":17698},[],[17700],{"type":23,"value":1972},{"type":23,"value":1895},{"type":17,"tag":79,"props":17703,"children":17705},{"className":17704},[],[17706],{"type":23,"value":1979},{"type":23,"value":1895},{"type":17,"tag":79,"props":17709,"children":17711},{"className":17710},[],[17712],{"type":23,"value":1986},{"type":17,"tag":36,"props":17714,"children":17715},{},[17716,17717,17722,17723,17728,17729],{"type":23,"value":1991},{"type":17,"tag":79,"props":17718,"children":17720},{"className":17719},[],[17721],{"type":23,"value":1997},{"type":23,"value":1999},{"type":17,"tag":79,"props":17724,"children":17726},{"className":17725},[],[17727],{"type":23,"value":2005},{"type":23,"value":86},{"type":17,"tag":79,"props":17730,"children":17732},{"className":17731},[],[17733],{"type":23,"value":2012},{"type":17,"tag":836,"props":17735,"children":17736},{},[17737],{"type":17,"tag":26,"props":17738,"children":17739},{},[17740,17744,17745,17750,17751,17756,17757,17762,17763,17768],{"type":17,"tag":2020,"props":17741,"children":17742},{},[17743],{"type":23,"value":2024},{"type":23,"value":2026},{"type":17,"tag":79,"props":17746,"children":17748},{"className":17747},[],[17749],{"type":23,"value":2032},{"type":23,"value":2034},{"type":17,"tag":79,"props":17752,"children":17754},{"className":17753},[],[17755],{"type":23,"value":2040},{"type":23,"value":2042},{"type":17,"tag":79,"props":17758,"children":17760},{"className":17759},[],[17761],{"type":23,"value":968},{"type":23,"value":2049},{"type":17,"tag":79,"props":17764,"children":17766},{"className":17765},[],[17767],{"type":23,"value":961},{"type":23,"value":1517},{"type":17,"tag":26,"props":17770,"children":17771},{},[17772,17773,17778],{"type":23,"value":2060},{"type":17,"tag":79,"props":17774,"children":17776},{"className":17775},[],[17777],{"type":23,"value":2066},{"type":23,"value":2068},{"type":17,"tag":518,"props":17780,"children":17781},{":editable":520,":show-in-col":520,"max-height":521},[17782],{"type":17,"tag":275,"props":17783,"children":17785},{"className":17784,"code":2075,"language":432,"meta":8},[527],[17786],{"type":17,"tag":79,"props":17787,"children":17788},{"__ignoreMap":8},[17789],{"type":23,"value":2075},{"type":17,"tag":96,"props":17791,"children":17792},{"id":2083},[17793],{"type":23,"value":2086},{"type":17,"tag":26,"props":17795,"children":17796},{},[17797,17798,17803,17804,17809,17810,17815],{"type":23,"value":2091},{"type":17,"tag":79,"props":17799,"children":17801},{"className":17800},[],[17802],{"type":23,"value":1031},{"type":23,"value":2098},{"type":17,"tag":79,"props":17805,"children":17807},{"className":17806},[],[17808],{"type":23,"value":1031},{"type":23,"value":2105},{"type":17,"tag":79,"props":17811,"children":17813},{"className":17812},[],[17814],{"type":23,"value":1031},{"type":23,"value":1517},{"type":17,"tag":518,"props":17817,"children":17818},{":editable":520,":show-in-col":520,"max-height":521},[17819],{"type":17,"tag":275,"props":17820,"children":17822},{"className":17821,"code":2118,"language":432,"meta":8},[527],[17823],{"type":17,"tag":79,"props":17824,"children":17825},{"__ignoreMap":8},[17826],{"type":23,"value":2118},{"type":17,"tag":26,"props":17828,"children":17829},{},[17830],{"type":23,"value":2128},{"type":17,"tag":235,"props":17832,"children":17833},{},[17834,17844,17866],{"type":17,"tag":36,"props":17835,"children":17836},{},[17837,17838,17843],{"type":23,"value":2136},{"type":17,"tag":79,"props":17839,"children":17841},{"className":17840},[],[17842],{"type":23,"value":2142},{"type":23,"value":2144},{"type":17,"tag":36,"props":17845,"children":17846},{},[17847,17848,17853,17854,17859,17860,17865],{"type":23,"value":2149},{"type":17,"tag":79,"props":17849,"children":17851},{"className":17850},[],[17852],{"type":23,"value":2155},{"type":23,"value":1895},{"type":17,"tag":79,"props":17855,"children":17857},{"className":17856},[],[17858],{"type":23,"value":2162},{"type":23,"value":1895},{"type":17,"tag":79,"props":17861,"children":17863},{"className":17862},[],[17864],{"type":23,"value":2169},{"type":23,"value":2171},{"type":17,"tag":36,"props":17867,"children":17868},{},[17869,17870,17875,17876,17881],{"type":23,"value":2176},{"type":17,"tag":79,"props":17871,"children":17873},{"className":17872},[],[17874],{"type":23,"value":105},{"type":23,"value":86},{"type":17,"tag":79,"props":17877,"children":17879},{"className":17878},[],[17880],{"type":23,"value":2188},{"type":23,"value":2190},{"type":17,"tag":26,"props":17883,"children":17884},{},[17885,17886,17891,17892,17897],{"type":23,"value":2195},{"type":17,"tag":79,"props":17887,"children":17889},{"className":17888},[],[17890],{"type":23,"value":2201},{"type":23,"value":2203},{"type":17,"tag":79,"props":17893,"children":17895},{"className":17894},[],[17896],{"type":23,"value":105},{"type":23,"value":1517},{"type":17,"tag":26,"props":17899,"children":17900},{},[17901,17902,17907,17908,17913],{"type":23,"value":2214},{"type":17,"tag":79,"props":17903,"children":17905},{"className":17904},[],[17906],{"type":23,"value":2220},{"type":23,"value":2222},{"type":17,"tag":79,"props":17909,"children":17911},{"className":17910},[],[17912],{"type":23,"value":2228},{"type":23,"value":2230},{"type":17,"tag":518,"props":17915,"children":17916},{":editable":520,":show-in-col":520,"max-height":521},[17917],{"type":17,"tag":275,"props":17918,"children":17920},{"className":17919,"code":2237,"language":432,"meta":8},[527],[17921],{"type":17,"tag":79,"props":17922,"children":17923},{"__ignoreMap":8},[17924],{"type":23,"value":2237},{"type":17,"tag":26,"props":17926,"children":17927},{},[17928],{"type":23,"value":2247},{"type":17,"tag":518,"props":17930,"children":17931},{":editable":520,":show-in-col":520,"max-height":521},[17932],{"type":17,"tag":275,"props":17933,"children":17935},{"className":17934,"code":2254,"language":432,"meta":8},[527],[17936],{"type":17,"tag":79,"props":17937,"children":17938},{"__ignoreMap":8},[17939],{"type":23,"value":2254},{"type":17,"tag":26,"props":17941,"children":17942},{},[17943,17944,17949,17950,17955,17956,17961,17962,17967],{"type":23,"value":2264},{"type":17,"tag":79,"props":17945,"children":17947},{"className":17946},[],[17948],{"type":23,"value":2270},{"type":23,"value":2272},{"type":17,"tag":79,"props":17951,"children":17953},{"className":17952},[],[17954],{"type":23,"value":1515},{"type":23,"value":2279},{"type":17,"tag":79,"props":17957,"children":17959},{"className":17958},[],[17960],{"type":23,"value":1515},{"type":23,"value":2286},{"type":17,"tag":79,"props":17963,"children":17965},{"className":17964},[],[17966],{"type":23,"value":1676},{"type":23,"value":2293},{"type":17,"tag":518,"props":17969,"children":17970},{":editable":520,":show-in-col":520,"max-height":521},[17971],{"type":17,"tag":275,"props":17972,"children":17974},{"className":17973,"code":2300,"language":432,"meta":8},[527],[17975],{"type":17,"tag":79,"props":17976,"children":17977},{"__ignoreMap":8},[17978],{"type":23,"value":2300},{"type":17,"tag":96,"props":17980,"children":17981},{"id":2308},[17982],{"type":23,"value":2311},{"type":17,"tag":26,"props":17984,"children":17985},{},[17986,17987,17992,17993,17998,17999,18004,18005,18010,18011,18016,18017,18022,18023,18028],{"type":23,"value":2316},{"type":17,"tag":79,"props":17988,"children":17990},{"className":17989},[],[17991],{"type":23,"value":1676},{"type":23,"value":2323},{"type":17,"tag":79,"props":17994,"children":17996},{"className":17995},[],[17997],{"type":23,"value":2329},{"type":23,"value":2331},{"type":17,"tag":79,"props":18000,"children":18002},{"className":18001},[],[18003],{"type":23,"value":2337},{"type":23,"value":2339},{"type":17,"tag":79,"props":18006,"children":18008},{"className":18007},[],[18009],{"type":23,"value":1684},{"type":23,"value":2346},{"type":17,"tag":79,"props":18012,"children":18014},{"className":18013},[],[18015],{"type":23,"value":2352},{"type":23,"value":2354},{"type":17,"tag":79,"props":18018,"children":18020},{"className":18019},[],[18021],{"type":23,"value":2360},{"type":23,"value":2362},{"type":17,"tag":79,"props":18024,"children":18026},{"className":18025},[],[18027],{"type":23,"value":2368},{"type":23,"value":2370},{"type":17,"tag":518,"props":18030,"children":18031},{":editable":520,":show-in-col":520,"max-height":521},[18032],{"type":17,"tag":275,"props":18033,"children":18035},{"className":18034,"code":2377,"language":432,"meta":8},[527],[18036],{"type":17,"tag":79,"props":18037,"children":18038},{"__ignoreMap":8},[18039],{"type":23,"value":2377},{"type":17,"tag":26,"props":18041,"children":18042},{},[18043],{"type":23,"value":2387},{"type":17,"tag":518,"props":18045,"children":18046},{":editable":520,":show-in-col":520,"max-height":521},[18047],{"type":17,"tag":275,"props":18048,"children":18050},{"className":18049,"code":2394,"language":432,"meta":8},[527],[18051],{"type":17,"tag":79,"props":18052,"children":18053},{"__ignoreMap":8},[18054],{"type":23,"value":2394},{"type":17,"tag":26,"props":18056,"children":18057},{},[18058,18059,18064,18065,18070,18071,18076],{"type":23,"value":2404},{"type":17,"tag":79,"props":18060,"children":18062},{"className":18061},[],[18063],{"type":23,"value":2410},{"type":23,"value":2412},{"type":17,"tag":79,"props":18066,"children":18068},{"className":18067},[],[18069],{"type":23,"value":2410},{"type":23,"value":2419},{"type":17,"tag":79,"props":18072,"children":18074},{"className":18073},[],[18075],{"type":23,"value":2425},{"type":23,"value":1517},{"type":17,"tag":518,"props":18078,"children":18079},{":editable":520,":show-in-col":520,"max-height":521},[18080],{"type":17,"tag":275,"props":18081,"children":18083},{"className":18082,"code":2433,"language":432,"meta":8},[527],[18084],{"type":17,"tag":79,"props":18085,"children":18086},{"__ignoreMap":8},[18087],{"type":23,"value":2433},{"type":17,"tag":26,"props":18089,"children":18090},{},[18091,18092,18097,18098,18103,18104,18109,18110,18115,18116,18121,18122,18127,18128,18133,18134,18139],{"type":23,"value":2443},{"type":17,"tag":79,"props":18093,"children":18095},{"className":18094},[],[18096],{"type":23,"value":2425},{"type":23,"value":2450},{"type":17,"tag":79,"props":18099,"children":18101},{"className":18100},[],[18102],{"type":23,"value":2456},{"type":23,"value":2458},{"type":17,"tag":79,"props":18105,"children":18107},{"className":18106},[],[18108],{"type":23,"value":2464},{"type":23,"value":1895},{"type":17,"tag":79,"props":18111,"children":18113},{"className":18112},[],[18114],{"type":23,"value":2471},{"type":23,"value":1895},{"type":17,"tag":79,"props":18117,"children":18119},{"className":18118},[],[18120],{"type":23,"value":2478},{"type":23,"value":1895},{"type":17,"tag":79,"props":18123,"children":18125},{"className":18124},[],[18126],{"type":23,"value":2485},{"type":23,"value":1895},{"type":17,"tag":79,"props":18129,"children":18131},{"className":18130},[],[18132],{"type":23,"value":2492},{"type":23,"value":1895},{"type":17,"tag":79,"props":18135,"children":18137},{"className":18136},[],[18138],{"type":23,"value":2499},{"type":23,"value":1517},{"type":17,"tag":26,"props":18141,"children":18142},{},[18143,18144,18149],{"type":23,"value":2505},{"type":17,"tag":79,"props":18145,"children":18147},{"className":18146},[],[18148],{"type":23,"value":2511},{"type":23,"value":2513},{"type":17,"tag":26,"props":18151,"children":18152},{},[18153,18154,18159],{"type":23,"value":2518},{"type":17,"tag":79,"props":18155,"children":18157},{"className":18156},[],[18158],{"type":23,"value":2352},{"type":23,"value":2525},{"type":17,"tag":518,"props":18161,"children":18162},{":editable":520,":show-in-col":520,"max-height":521},[18163],{"type":17,"tag":275,"props":18164,"children":18166},{"className":18165,"code":2532,"language":432,"meta":8},[527],[18167],{"type":17,"tag":79,"props":18168,"children":18169},{"__ignoreMap":8},[18170],{"type":23,"value":2532},{"type":17,"tag":26,"props":18172,"children":18173},{},[18174],{"type":23,"value":2542},{"type":17,"tag":235,"props":18176,"children":18177},{},[18178,18193],{"type":17,"tag":36,"props":18179,"children":18180},{},[18181,18182,18187,18188],{"type":23,"value":2550},{"type":17,"tag":79,"props":18183,"children":18185},{"className":18184},[],[18186],{"type":23,"value":105},{"type":23,"value":86},{"type":17,"tag":79,"props":18189,"children":18191},{"className":18190},[],[18192],{"type":23,"value":1070},{"type":17,"tag":36,"props":18194,"children":18195},{},[18196,18197,18202,18203,18208,18209,18214,18215,18220,18221,18226,18227,18232,18233,18238,18239],{"type":23,"value":2566},{"type":17,"tag":79,"props":18198,"children":18200},{"className":18199},[],[18201],{"type":23,"value":2572},{"type":23,"value":2574},{"type":17,"tag":79,"props":18204,"children":18206},{"className":18205},[],[18207],{"type":23,"value":1676},{"type":23,"value":1895},{"type":17,"tag":79,"props":18210,"children":18212},{"className":18211},[],[18213],{"type":23,"value":2329},{"type":23,"value":1895},{"type":17,"tag":79,"props":18216,"children":18218},{"className":18217},[],[18219],{"type":23,"value":2337},{"type":23,"value":1895},{"type":17,"tag":79,"props":18222,"children":18224},{"className":18223},[],[18225],{"type":23,"value":1684},{"type":23,"value":1895},{"type":17,"tag":79,"props":18228,"children":18230},{"className":18229},[],[18231],{"type":23,"value":2352},{"type":23,"value":1895},{"type":17,"tag":79,"props":18234,"children":18236},{"className":18235},[],[18237],{"type":23,"value":2360},{"type":23,"value":1895},{"type":17,"tag":79,"props":18240,"children":18242},{"className":18241},[],[18243],{"type":23,"value":2368},{"type":17,"tag":26,"props":18245,"children":18246},{},[18247],{"type":23,"value":2620},{"type":17,"tag":235,"props":18249,"children":18250},{},[18251],{"type":17,"tag":36,"props":18252,"children":18253},{},[18254,18255,18260,18261,18266],{"type":23,"value":2628},{"type":17,"tag":79,"props":18256,"children":18258},{"className":18257},[],[18259],{"type":23,"value":105},{"type":23,"value":86},{"type":17,"tag":79,"props":18262,"children":18264},{"className":18263},[],[18265],{"type":23,"value":1070},{"type":23,"value":2641},{"type":17,"tag":518,"props":18268,"children":18269},{":editable":520,":show-in-col":520,"max-height":521},[18270],{"type":17,"tag":275,"props":18271,"children":18273},{"className":18272,"code":2648,"language":432,"meta":8},[527],[18274],{"type":17,"tag":79,"props":18275,"children":18276},{"__ignoreMap":8},[18277],{"type":23,"value":2648},{"type":17,"tag":26,"props":18279,"children":18280},{},[18281,18282,18287,18288,18293],{"type":23,"value":2658},{"type":17,"tag":79,"props":18283,"children":18285},{"className":18284},[],[18286],{"type":23,"value":1676},{"type":23,"value":2665},{"type":17,"tag":79,"props":18289,"children":18291},{"className":18290},[],[18292],{"type":23,"value":2337},{"type":23,"value":2672},{"type":17,"tag":518,"props":18295,"children":18296},{":editable":520,":show-in-col":520,"max-height":521},[18297],{"type":17,"tag":275,"props":18298,"children":18300},{"className":18299,"code":2679,"language":432,"meta":8},[527],[18301],{"type":17,"tag":79,"props":18302,"children":18303},{"__ignoreMap":8},[18304],{"type":23,"value":2679},{"type":17,"tag":26,"props":18306,"children":18307},{},[18308,18309,18314,18315,18320,18321,18326,18327,18332,18333,18338,18339,18344,18345,18350,18351,18356],{"type":23,"value":2689},{"type":17,"tag":79,"props":18310,"children":18312},{"className":18311},[],[18313],{"type":23,"value":2695},{"type":23,"value":2697},{"type":17,"tag":79,"props":18316,"children":18318},{"className":18317},[],[18319],{"type":23,"value":2703},{"type":23,"value":2705},{"type":17,"tag":79,"props":18322,"children":18324},{"className":18323},[],[18325],{"type":23,"value":1710},{"type":23,"value":2712},{"type":17,"tag":79,"props":18328,"children":18330},{"className":18329},[],[18331],{"type":23,"value":2718},{"type":23,"value":2720},{"type":17,"tag":79,"props":18334,"children":18336},{"className":18335},[],[18337],{"type":23,"value":2726},{"type":23,"value":2728},{"type":17,"tag":79,"props":18340,"children":18342},{"className":18341},[],[18343],{"type":23,"value":2734},{"type":23,"value":2736},{"type":17,"tag":79,"props":18346,"children":18348},{"className":18347},[],[18349],{"type":23,"value":2005},{"type":23,"value":880},{"type":17,"tag":79,"props":18352,"children":18354},{"className":18353},[],[18355],{"type":23,"value":2012},{"type":23,"value":1517},{"type":17,"tag":518,"props":18358,"children":18359},{":editable":520,":show-in-col":520,"max-height":521},[18360],{"type":17,"tag":275,"props":18361,"children":18363},{"className":18362,"code":2755,"language":432,"meta":8},[527],[18364],{"type":17,"tag":79,"props":18365,"children":18366},{"__ignoreMap":8},[18367],{"type":23,"value":2755},{"type":17,"tag":96,"props":18369,"children":18370},{"id":2763},[18371],{"type":23,"value":2766},{"type":17,"tag":26,"props":18373,"children":18374},{},[18375],{"type":23,"value":2771},{"type":17,"tag":518,"props":18377,"children":18378},{":editable":520,":show-in-col":520,"max-height":521},[18379],{"type":17,"tag":275,"props":18380,"children":18382},{"className":18381,"code":2778,"language":432,"meta":8},[527],[18383],{"type":17,"tag":79,"props":18384,"children":18385},{"__ignoreMap":8},[18386],{"type":23,"value":2778},{"type":17,"tag":26,"props":18388,"children":18389},{},[18390,18391,18396,18397,18402,18403,18408,18409,18414,18415,18420,18421,18426,18427,18432,18433,18438,18439,18444],{"type":23,"value":2788},{"type":17,"tag":79,"props":18392,"children":18394},{"className":18393},[],[18395],{"type":23,"value":2794},{"type":23,"value":2796},{"type":17,"tag":79,"props":18398,"children":18400},{"className":18399},[],[18401],{"type":23,"value":2802},{"type":23,"value":2804},{"type":17,"tag":79,"props":18404,"children":18406},{"className":18405},[],[18407],{"type":23,"value":1245},{"type":23,"value":2796},{"type":17,"tag":79,"props":18410,"children":18412},{"className":18411},[],[18413],{"type":23,"value":2816},{"type":23,"value":2818},{"type":17,"tag":79,"props":18416,"children":18418},{"className":18417},[],[18419],{"type":23,"value":105},{"type":23,"value":86},{"type":17,"tag":79,"props":18422,"children":18424},{"className":18423},[],[18425],{"type":23,"value":1070},{"type":23,"value":2831},{"type":17,"tag":79,"props":18428,"children":18430},{"className":18429},[],[18431],{"type":23,"value":1676},{"type":23,"value":2838},{"type":17,"tag":79,"props":18434,"children":18436},{"className":18435},[],[18437],{"type":23,"value":105},{"type":23,"value":86},{"type":17,"tag":79,"props":18440,"children":18442},{"className":18441},[],[18443],{"type":23,"value":1070},{"type":23,"value":2851},{"type":17,"tag":26,"props":18446,"children":18447},{},[18448,18449,18454,18455,18460,18461,18466,18467,18472,18473,18478],{"type":23,"value":2856},{"type":17,"tag":79,"props":18450,"children":18452},{"className":18451},[],[18453],{"type":23,"value":2862},{"type":23,"value":2864},{"type":17,"tag":79,"props":18456,"children":18458},{"className":18457},[],[18459],{"type":23,"value":2870},{"type":23,"value":2872},{"type":17,"tag":79,"props":18462,"children":18464},{"className":18463},[],[18465],{"type":23,"value":2878},{"type":23,"value":2880},{"type":17,"tag":79,"props":18468,"children":18470},{"className":18469},[],[18471],{"type":23,"value":105},{"type":23,"value":86},{"type":17,"tag":79,"props":18474,"children":18476},{"className":18475},[],[18477],{"type":23,"value":1070},{"type":23,"value":2893},{"type":17,"tag":518,"props":18480,"children":18481},{":editable":520,":show-in-col":520,"max-height":521},[18482],{"type":17,"tag":275,"props":18483,"children":18485},{"className":18484,"code":2900,"language":432,"meta":8},[527],[18486],{"type":17,"tag":79,"props":18487,"children":18488},{"__ignoreMap":8},[18489],{"type":23,"value":2900},{"type":17,"tag":26,"props":18491,"children":18492},{},[18493,18494,18499],{"type":23,"value":2910},{"type":17,"tag":79,"props":18495,"children":18497},{"className":18496},[],[18498],{"type":23,"value":2916},{"type":23,"value":2918},{"type":17,"tag":518,"props":18501,"children":18502},{":editable":520,":show-in-col":520,"max-height":521},[18503],{"type":17,"tag":275,"props":18504,"children":18506},{"className":18505,"code":2925,"language":432,"meta":8},[527],[18507],{"type":17,"tag":79,"props":18508,"children":18509},{"__ignoreMap":8},[18510],{"type":23,"value":2925},{"type":17,"tag":836,"props":18512,"children":18513},{},[18514,18522],{"type":17,"tag":26,"props":18515,"children":18516},{},[18517,18521],{"type":17,"tag":2020,"props":18518,"children":18519},{},[18520],{"type":23,"value":2024},{"type":23,"value":2942},{"type":17,"tag":26,"props":18523,"children":18524},{},[18525,18526,18531,18532,18537,18538,18543,18544,18549,18550,18555],{"type":23,"value":2947},{"type":17,"tag":79,"props":18527,"children":18529},{"className":18528},[],[18530],{"type":23,"value":1933},{"type":23,"value":86},{"type":17,"tag":79,"props":18533,"children":18535},{"className":18534},[],[18536],{"type":23,"value":2959},{"type":23,"value":2961},{"type":17,"tag":79,"props":18539,"children":18541},{"className":18540},[],[18542],{"type":23,"value":2967},{"type":23,"value":2969},{"type":17,"tag":79,"props":18545,"children":18547},{"className":18546},[],[18548],{"type":23,"value":2975},{"type":23,"value":2977},{"type":17,"tag":79,"props":18551,"children":18553},{"className":18552},[],[18554],{"type":23,"value":2983},{"type":23,"value":2985},{"type":17,"tag":518,"props":18557,"children":18558},{":editable":520,":show-in-col":520,"max-height":521},[18559],{"type":17,"tag":275,"props":18560,"children":18562},{"className":18561,"code":2992,"language":432,"meta":8},[527],[18563],{"type":17,"tag":79,"props":18564,"children":18565},{"__ignoreMap":8},[18566],{"type":23,"value":2992},{"type":17,"tag":18,"props":18568,"children":18569},{"id":3000},[18570],{"type":23,"value":3003},{"type":17,"tag":26,"props":18572,"children":18573},{},[18574,18575,18580,18581,18586],{"type":23,"value":3008},{"type":17,"tag":79,"props":18576,"children":18578},{"className":18577},[],[18579],{"type":23,"value":2155},{"type":23,"value":3015},{"type":17,"tag":79,"props":18582,"children":18584},{"className":18583},[],[18585],{"type":23,"value":2155},{"type":23,"value":3022},{"type":17,"tag":518,"props":18588,"children":18589},{":editable":520,":show-in-col":520,"max-height":521},[18590],{"type":17,"tag":275,"props":18591,"children":18593},{"className":18592,"code":3029,"language":432,"meta":8},[527],[18594],{"type":17,"tag":79,"props":18595,"children":18596},{"__ignoreMap":8},[18597],{"type":23,"value":3029},{"type":17,"tag":26,"props":18599,"children":18600},{},[18601,18602,18607,18608,18613],{"type":23,"value":3039},{"type":17,"tag":79,"props":18603,"children":18605},{"className":18604},[],[18606],{"type":23,"value":2228},{"type":23,"value":3046},{"type":17,"tag":79,"props":18609,"children":18611},{"className":18610},[],[18612],{"type":23,"value":3052},{"type":23,"value":3054},{"type":17,"tag":518,"props":18615,"children":18616},{":editable":520,":show-in-col":520,"max-height":521},[18617],{"type":17,"tag":275,"props":18618,"children":18620},{"className":18619,"code":3061,"language":432,"meta":8},[527],[18621],{"type":17,"tag":79,"props":18622,"children":18623},{"__ignoreMap":8},[18624],{"type":23,"value":3061},{"type":17,"tag":26,"props":18626,"children":18627},{},[18628,18629,18634,18635,18640,18641,18646,18647,18652,18653,18658],{"type":23,"value":3071},{"type":17,"tag":79,"props":18630,"children":18632},{"className":18631},[],[18633],{"type":23,"value":2155},{"type":23,"value":3078},{"type":17,"tag":79,"props":18636,"children":18638},{"className":18637},[],[18639],{"type":23,"value":2410},{"type":23,"value":3085},{"type":17,"tag":79,"props":18642,"children":18644},{"className":18643},[],[18645],{"type":23,"value":3091},{"type":23,"value":3093},{"type":17,"tag":79,"props":18648,"children":18650},{"className":18649},[],[18651],{"type":23,"value":3099},{"type":23,"value":3101},{"type":17,"tag":79,"props":18654,"children":18656},{"className":18655},[],[18657],{"type":23,"value":3107},{"type":23,"value":3109},{"type":17,"tag":518,"props":18660,"children":18661},{":editable":520,":show-in-col":520,"max-height":521},[18662],{"type":17,"tag":275,"props":18663,"children":18665},{"className":18664,"code":3116,"language":432,"meta":8},[527],[18666],{"type":17,"tag":79,"props":18667,"children":18668},{"__ignoreMap":8},[18669],{"type":23,"value":3116},{"type":17,"tag":26,"props":18671,"children":18672},{},[18673,18674,18679,18680,18685],{"type":23,"value":3126},{"type":17,"tag":79,"props":18675,"children":18677},{"className":18676},[],[18678],{"type":23,"value":3091},{"type":23,"value":3133},{"type":17,"tag":79,"props":18681,"children":18683},{"className":18682},[],[18684],{"type":23,"value":3091},{"type":23,"value":3140},{"type":17,"tag":26,"props":18687,"children":18688},{},[18689,18690,18695,18696,18701,18702,18707],{"type":23,"value":3145},{"type":17,"tag":79,"props":18691,"children":18693},{"className":18692},[],[18694],{"type":23,"value":2410},{"type":23,"value":3152},{"type":17,"tag":79,"props":18697,"children":18699},{"className":18698},[],[18700],{"type":23,"value":3158},{"type":23,"value":3093},{"type":17,"tag":79,"props":18703,"children":18705},{"className":18704},[],[18706],{"type":23,"value":2162},{"type":23,"value":3166},{"type":17,"tag":518,"props":18709,"children":18710},{":editable":520,":show-in-col":520,"max-height":521},[18711],{"type":17,"tag":275,"props":18712,"children":18714},{"className":18713,"code":3173,"language":432,"meta":8},[527],[18715],{"type":17,"tag":79,"props":18716,"children":18717},{"__ignoreMap":8},[18718],{"type":23,"value":3173},{"type":17,"tag":26,"props":18720,"children":18721},{},[18722],{"type":23,"value":3183},{"type":17,"tag":235,"props":18724,"children":18725},{},[18726,18742,18752,18768],{"type":17,"tag":36,"props":18727,"children":18728},{},[18729,18730,18735,18736,18741],{"type":23,"value":3191},{"type":17,"tag":79,"props":18731,"children":18733},{"className":18732},[],[18734],{"type":23,"value":2155},{"type":23,"value":3198},{"type":17,"tag":79,"props":18737,"children":18739},{"className":18738},[],[18740],{"type":23,"value":2155},{"type":23,"value":3205},{"type":17,"tag":36,"props":18743,"children":18744},{},[18745,18746,18751],{"type":23,"value":3210},{"type":17,"tag":79,"props":18747,"children":18749},{"className":18748},[],[18750],{"type":23,"value":3099},{"type":23,"value":3217},{"type":17,"tag":36,"props":18753,"children":18754},{},[18755,18756,18761,18762,18767],{"type":23,"value":3222},{"type":17,"tag":79,"props":18757,"children":18759},{"className":18758},[],[18760],{"type":23,"value":2162},{"type":23,"value":3229},{"type":17,"tag":79,"props":18763,"children":18765},{"className":18764},[],[18766],{"type":23,"value":2162},{"type":23,"value":3236},{"type":17,"tag":36,"props":18769,"children":18770},{},[18771,18772,18777,18778,18783],{"type":23,"value":3241},{"type":17,"tag":79,"props":18773,"children":18775},{"className":18774},[],[18776],{"type":23,"value":2155},{"type":23,"value":3248},{"type":17,"tag":79,"props":18779,"children":18781},{"className":18780},[],[18782],{"type":23,"value":3158},{"type":23,"value":3255},{"type":17,"tag":18,"props":18785,"children":18786},{"id":3258},[18787],{"type":23,"value":3261},{"type":17,"tag":26,"props":18789,"children":18790},{},[18791,18792,18797,18798,18803,18804,18809],{"type":23,"value":3266},{"type":17,"tag":79,"props":18793,"children":18795},{"className":18794},[],[18796],{"type":23,"value":3272},{"type":23,"value":1895},{"type":17,"tag":79,"props":18799,"children":18801},{"className":18800},[],[18802],{"type":23,"value":3279},{"type":23,"value":3281},{"type":17,"tag":79,"props":18805,"children":18807},{"className":18806},[],[18808],{"type":23,"value":3287},{"type":23,"value":3289},{"type":17,"tag":26,"props":18811,"children":18812},{},[18813,18814,18819,18820,18825,18826,18831],{"type":23,"value":3294},{"type":17,"tag":79,"props":18815,"children":18817},{"className":18816},[],[18818],{"type":23,"value":3272},{"type":23,"value":3301},{"type":17,"tag":79,"props":18821,"children":18823},{"className":18822},[],[18824],{"type":23,"value":3279},{"type":23,"value":3308},{"type":17,"tag":79,"props":18827,"children":18829},{"className":18828},[],[18830],{"type":23,"value":3287},{"type":23,"value":3315},{"type":17,"tag":235,"props":18833,"children":18834},{},[18835,18844,18853],{"type":17,"tag":36,"props":18836,"children":18837},{},[18838,18843],{"type":17,"tag":79,"props":18839,"children":18841},{"className":18840},[],[18842],{"type":23,"value":3272},{"type":23,"value":3328},{"type":17,"tag":36,"props":18845,"children":18846},{},[18847,18852],{"type":17,"tag":79,"props":18848,"children":18850},{"className":18849},[],[18851],{"type":23,"value":3279},{"type":23,"value":3338},{"type":17,"tag":36,"props":18854,"children":18855},{},[18856,18861],{"type":17,"tag":79,"props":18857,"children":18859},{"className":18858},[],[18860],{"type":23,"value":3287},{"type":23,"value":3348},{"type":17,"tag":26,"props":18863,"children":18864},{},[18865],{"type":23,"value":3353},{"type":17,"tag":518,"props":18867,"children":18868},{":editable":520,":show-in-col":520,"max-height":521},[18869],{"type":17,"tag":275,"props":18870,"children":18872},{"className":18871,"code":3360,"language":432,"meta":8},[527],[18873],{"type":17,"tag":79,"props":18874,"children":18875},{"__ignoreMap":8},[18876],{"type":23,"value":3360},{"type":17,"tag":26,"props":18878,"children":18879},{},[18880,18881,18886,18887,18892,18893,18898],{"type":23,"value":3370},{"type":17,"tag":79,"props":18882,"children":18884},{"className":18883},[],[18885],{"type":23,"value":3272},{"type":23,"value":3377},{"type":17,"tag":79,"props":18888,"children":18890},{"className":18889},[],[18891],{"type":23,"value":2410},{"type":23,"value":3384},{"type":17,"tag":79,"props":18894,"children":18896},{"className":18895},[],[18897],{"type":23,"value":2162},{"type":23,"value":3205},{"type":17,"tag":26,"props":18900,"children":18901},{},[18902],{"type":23,"value":3395},{"type":17,"tag":518,"props":18904,"children":18905},{":editable":520,":show-in-col":520,"max-height":521},[18906],{"type":17,"tag":275,"props":18907,"children":18909},{"className":18908,"code":3402,"language":432,"meta":8},[527],[18910],{"type":17,"tag":79,"props":18911,"children":18912},{"__ignoreMap":8},[18913],{"type":23,"value":3402},{"type":17,"tag":26,"props":18915,"children":18916},{},[18917,18918,18923,18924,18929,18930,18935],{"type":23,"value":3370},{"type":17,"tag":79,"props":18919,"children":18921},{"className":18920},[],[18922],{"type":23,"value":3279},{"type":23,"value":3418},{"type":17,"tag":79,"props":18925,"children":18927},{"className":18926},[],[18928],{"type":23,"value":2410},{"type":23,"value":3425},{"type":17,"tag":79,"props":18931,"children":18933},{"className":18932},[],[18934],{"type":23,"value":2155},{"type":23,"value":3205},{"type":17,"tag":26,"props":18937,"children":18938},{},[18939,18940,18945],{"type":23,"value":3436},{"type":17,"tag":79,"props":18941,"children":18943},{"className":18942},[],[18944],{"type":23,"value":3287},{"type":23,"value":3443},{"type":17,"tag":518,"props":18947,"children":18948},{":editable":520,":show-in-col":520,"max-height":521},[18949],{"type":17,"tag":275,"props":18950,"children":18952},{"className":18951,"code":3450,"language":432,"meta":8},[527],[18953],{"type":17,"tag":79,"props":18954,"children":18955},{"__ignoreMap":8},[18956],{"type":23,"value":3450},{"type":17,"tag":26,"props":18958,"children":18959},{},[18960,18961,18966,18967,18972,18973,18978,18979,18984],{"type":23,"value":3370},{"type":17,"tag":79,"props":18962,"children":18964},{"className":18963},[],[18965],{"type":23,"value":3287},{"type":23,"value":3466},{"type":17,"tag":79,"props":18968,"children":18970},{"className":18969},[],[18971],{"type":23,"value":2410},{"type":23,"value":3473},{"type":17,"tag":79,"props":18974,"children":18976},{"className":18975},[],[18977],{"type":23,"value":2155},{"type":23,"value":3480},{"type":17,"tag":79,"props":18980,"children":18982},{"className":18981},[],[18983],{"type":23,"value":2162},{"type":23,"value":3205},{"type":17,"tag":26,"props":18986,"children":18987},{},[18988,18989,18994,18995,19000,19001,19006,19007,19012],{"type":23,"value":3491},{"type":17,"tag":79,"props":18990,"children":18992},{"className":18991},[],[18993],{"type":23,"value":3287},{"type":23,"value":3498},{"type":17,"tag":79,"props":18996,"children":18998},{"className":18997},[],[18999],{"type":23,"value":3272},{"type":23,"value":3498},{"type":17,"tag":79,"props":19002,"children":19004},{"className":19003},[],[19005],{"type":23,"value":3279},{"type":23,"value":3511},{"type":17,"tag":79,"props":19008,"children":19010},{"className":19009},[],[19011],{"type":23,"value":2511},{"type":23,"value":3518},{"type":17,"tag":518,"props":19014,"children":19015},{":editable":520,":show-in-col":520,"max-height":521},[19016],{"type":17,"tag":275,"props":19017,"children":19019},{"className":19018,"code":3525,"language":432,"meta":8},[527],[19020],{"type":17,"tag":79,"props":19021,"children":19022},{"__ignoreMap":8},[19023],{"type":23,"value":3525},{"type":17,"tag":26,"props":19025,"children":19026},{},[19027,19028,19033,19034,19039],{"type":23,"value":3535},{"type":17,"tag":79,"props":19029,"children":19031},{"className":19030},[],[19032],{"type":23,"value":3272},{"type":23,"value":86},{"type":17,"tag":79,"props":19035,"children":19037},{"className":19036},[],[19038],{"type":23,"value":3279},{"type":23,"value":3548},{"type":17,"tag":235,"props":19041,"children":19042},{},[19043,19077],{"type":17,"tag":36,"props":19044,"children":19045},{},[19046,19047,19052,19053,19058,19059,19064,19065,19070,19071,19076],{"type":23,"value":3556},{"type":17,"tag":79,"props":19048,"children":19050},{"className":19049},[],[19051],{"type":23,"value":3272},{"type":23,"value":3563},{"type":17,"tag":79,"props":19054,"children":19056},{"className":19055},[],[19057],{"type":23,"value":3279},{"type":23,"value":1895},{"type":17,"tag":79,"props":19060,"children":19062},{"className":19061},[],[19063],{"type":23,"value":3575},{"type":23,"value":3577},{"type":17,"tag":79,"props":19066,"children":19068},{"className":19067},[],[19069],{"type":23,"value":3583},{"type":23,"value":3585},{"type":17,"tag":79,"props":19072,"children":19074},{"className":19073},[],[19075],{"type":23,"value":3591},{"type":23,"value":3593},{"type":17,"tag":36,"props":19078,"children":19079},{},[19080,19081,19086,19087,19092],{"type":23,"value":3598},{"type":17,"tag":79,"props":19082,"children":19084},{"className":19083},[],[19085],{"type":23,"value":3604},{"type":23,"value":3606},{"type":17,"tag":79,"props":19088,"children":19090},{"className":19089},[],[19091],{"type":23,"value":3612},{"type":23,"value":3614},{"type":17,"tag":18,"props":19094,"children":19095},{"id":3617},[19096],{"type":23,"value":3620},{"type":17,"tag":26,"props":19098,"children":19099},{},[19100,19101,19106,19107,19112,19113,19118,19119,19124],{"type":23,"value":3625},{"type":17,"tag":79,"props":19102,"children":19104},{"className":19103},[],[19105],{"type":23,"value":3631},{"type":23,"value":3633},{"type":17,"tag":79,"props":19108,"children":19110},{"className":19109},[],[19111],{"type":23,"value":3639},{"type":23,"value":3641},{"type":17,"tag":79,"props":19114,"children":19116},{"className":19115},[],[19117],{"type":23,"value":3647},{"type":23,"value":3649},{"type":17,"tag":79,"props":19120,"children":19122},{"className":19121},[],[19123],{"type":23,"value":3655},{"type":23,"value":3657},{"type":17,"tag":235,"props":19126,"children":19127},{},[19128,19138,19148,19158],{"type":17,"tag":36,"props":19129,"children":19130},{},[19131,19132,19137],{"type":23,"value":3665},{"type":17,"tag":79,"props":19133,"children":19135},{"className":19134},[],[19136],{"type":23,"value":3631},{"type":23,"value":3672},{"type":17,"tag":36,"props":19139,"children":19140},{},[19141,19142,19147],{"type":23,"value":3677},{"type":17,"tag":79,"props":19143,"children":19145},{"className":19144},[],[19146],{"type":23,"value":3639},{"type":23,"value":3684},{"type":17,"tag":36,"props":19149,"children":19150},{},[19151,19152,19157],{"type":23,"value":3689},{"type":17,"tag":79,"props":19153,"children":19155},{"className":19154},[],[19156],{"type":23,"value":3647},{"type":23,"value":3696},{"type":17,"tag":36,"props":19159,"children":19160},{},[19161,19162,19167],{"type":23,"value":3701},{"type":17,"tag":79,"props":19163,"children":19165},{"className":19164},[],[19166],{"type":23,"value":3655},{"type":23,"value":3708},{"type":17,"tag":26,"props":19169,"children":19170},{},[19171],{"type":23,"value":3713},{"type":17,"tag":96,"props":19173,"children":19174},{"id":3716},[19175],{"type":23,"value":3719},{"type":17,"tag":26,"props":19177,"children":19178},{},[19179,19180,19185,19186,19191],{"type":23,"value":3724},{"type":17,"tag":79,"props":19181,"children":19183},{"className":19182},[],[19184],{"type":23,"value":3730},{"type":23,"value":3732},{"type":17,"tag":79,"props":19187,"children":19189},{"className":19188},[],[19190],{"type":23,"value":1515},{"type":23,"value":3739},{"type":17,"tag":836,"props":19193,"children":19194},{},[19195],{"type":17,"tag":26,"props":19196,"children":19197},{},[19198,19202],{"type":17,"tag":2020,"props":19199,"children":19200},{},[19201],{"type":23,"value":2024},{"type":23,"value":3751},{"type":17,"tag":26,"props":19204,"children":19205},{},[19206],{"type":23,"value":3756},{"type":17,"tag":518,"props":19208,"children":19209},{":editable":520,":show-in-col":520,"max-height":521},[19210],{"type":17,"tag":275,"props":19211,"children":19213},{"className":19212,"code":3763,"language":432,"meta":8},[527],[19214],{"type":17,"tag":79,"props":19215,"children":19216},{"__ignoreMap":8},[19217],{"type":23,"value":3763},{"type":17,"tag":26,"props":19219,"children":19220},{},[19221],{"type":23,"value":3773},{"type":17,"tag":26,"props":19223,"children":19224},{},[19225,19226,19231,19232,19237],{"type":23,"value":3778},{"type":17,"tag":79,"props":19227,"children":19229},{"className":19228},[],[19230],{"type":23,"value":3730},{"type":23,"value":3785},{"type":17,"tag":79,"props":19233,"children":19235},{"className":19234},[],[19236],{"type":23,"value":3791},{"type":23,"value":1517},{"type":17,"tag":518,"props":19239,"children":19240},{":editable":520,":show-in-col":520,"max-height":521},[19241],{"type":17,"tag":275,"props":19242,"children":19244},{"className":19243,"code":3799,"language":432,"meta":8},[527],[19245],{"type":17,"tag":79,"props":19246,"children":19247},{"__ignoreMap":8},[19248],{"type":23,"value":3799},{"type":17,"tag":26,"props":19250,"children":19251},{},[19252,19253,19258,19259,19264,19265,19270],{"type":23,"value":3809},{"type":17,"tag":79,"props":19254,"children":19256},{"className":19255},[],[19257],{"type":23,"value":3730},{"type":23,"value":3816},{"type":17,"tag":79,"props":19260,"children":19262},{"className":19261},[],[19263],{"type":23,"value":920},{"type":23,"value":3823},{"type":17,"tag":79,"props":19266,"children":19268},{"className":19267},[],[19269],{"type":23,"value":3829},{"type":23,"value":3831},{"type":17,"tag":518,"props":19272,"children":19273},{":editable":520,":show-in-col":520,"max-height":521},[19274],{"type":17,"tag":275,"props":19275,"children":19277},{"className":19276,"code":3838,"language":432,"meta":8},[527],[19278],{"type":17,"tag":79,"props":19279,"children":19280},{"__ignoreMap":8},[19281],{"type":23,"value":3838},{"type":17,"tag":26,"props":19283,"children":19284},{},[19285,19286,19291],{"type":23,"value":3848},{"type":17,"tag":79,"props":19287,"children":19289},{"className":19288},[],[19290],{"type":23,"value":3854},{"type":23,"value":1517},{"type":17,"tag":518,"props":19293,"children":19294},{":editable":520,":show-in-col":520,"max-height":521},[19295],{"type":17,"tag":275,"props":19296,"children":19298},{"className":19297,"code":3862,"language":432,"meta":8},[527],[19299],{"type":17,"tag":79,"props":19300,"children":19301},{"__ignoreMap":8},[19302],{"type":23,"value":3862},{"type":17,"tag":26,"props":19304,"children":19305},{},[19306],{"type":23,"value":3872},{"type":17,"tag":518,"props":19308,"children":19309},{":editable":520,":show-in-col":520,"max-height":521},[19310],{"type":17,"tag":275,"props":19311,"children":19313},{"className":19312,"code":3879,"language":432,"meta":8},[527],[19314],{"type":17,"tag":79,"props":19315,"children":19316},{"__ignoreMap":8},[19317],{"type":23,"value":3879},{"type":17,"tag":26,"props":19319,"children":19320},{},[19321,19322,19327,19328,19333],{"type":23,"value":3889},{"type":17,"tag":79,"props":19323,"children":19325},{"className":19324},[],[19326],{"type":23,"value":3895},{"type":23,"value":3897},{"type":17,"tag":79,"props":19329,"children":19331},{"className":19330},[],[19332],{"type":23,"value":3903},{"type":23,"value":3905},{"type":17,"tag":518,"props":19335,"children":19336},{":editable":520,":show-in-col":520,"max-height":521},[19337],{"type":17,"tag":275,"props":19338,"children":19340},{"className":19339,"code":3912,"language":432,"meta":8},[527],[19341],{"type":17,"tag":79,"props":19342,"children":19343},{"__ignoreMap":8},[19344],{"type":23,"value":3912},{"type":17,"tag":96,"props":19346,"children":19347},{"id":3920},[19348],{"type":23,"value":3923},{"type":17,"tag":26,"props":19350,"children":19351},{},[19352,19353,19358,19359,19364],{"type":23,"value":3928},{"type":17,"tag":79,"props":19354,"children":19356},{"className":19355},[],[19357],{"type":23,"value":2511},{"type":23,"value":3732},{"type":17,"tag":79,"props":19360,"children":19362},{"className":19361},[],[19363],{"type":23,"value":1515},{"type":23,"value":1517},{"type":17,"tag":26,"props":19366,"children":19367},{},[19368],{"type":23,"value":3945},{"type":17,"tag":26,"props":19370,"children":19371},{},[19372],{"type":23,"value":3950},{"type":17,"tag":518,"props":19374,"children":19375},{":editable":520,":show-in-col":520,"max-height":521},[19376],{"type":17,"tag":275,"props":19377,"children":19379},{"className":19378,"code":3957,"language":432,"meta":8},[527],[19380],{"type":17,"tag":79,"props":19381,"children":19382},{"__ignoreMap":8},[19383],{"type":23,"value":3957},{"type":17,"tag":26,"props":19385,"children":19386},{},[19387],{"type":23,"value":3967},{"type":17,"tag":518,"props":19389,"children":19390},{":editable":520,":show-in-col":520,"max-height":521},[19391],{"type":17,"tag":275,"props":19392,"children":19394},{"className":19393,"code":3974,"language":432,"meta":8},[527],[19395],{"type":17,"tag":79,"props":19396,"children":19397},{"__ignoreMap":8},[19398],{"type":23,"value":3974},{"type":17,"tag":26,"props":19400,"children":19401},{},[19402],{"type":23,"value":3984},{"type":17,"tag":518,"props":19404,"children":19405},{":editable":520,":show-in-col":520,"max-height":521},[19406],{"type":17,"tag":275,"props":19407,"children":19409},{"className":19408,"code":3991,"language":432,"meta":8},[527],[19410],{"type":17,"tag":79,"props":19411,"children":19412},{"__ignoreMap":8},[19413],{"type":23,"value":3991},{"type":17,"tag":836,"props":19415,"children":19416},{},[19417],{"type":17,"tag":26,"props":19418,"children":19419},{},[19420,19424],{"type":17,"tag":2020,"props":19421,"children":19422},{},[19423],{"type":23,"value":2024},{"type":23,"value":4008},{"type":17,"tag":518,"props":19426,"children":19427},{":editable":520,":show-in-col":520,"max-height":521},[19428],{"type":17,"tag":275,"props":19429,"children":19431},{"className":19430,"code":4015,"language":432,"meta":8},[527],[19432],{"type":17,"tag":79,"props":19433,"children":19434},{"__ignoreMap":8},[19435],{"type":23,"value":4015},{"type":17,"tag":96,"props":19437,"children":19438},{"id":4023},[19439],{"type":23,"value":4026},{"type":17,"tag":26,"props":19441,"children":19442},{},[19443,19444,19449,19450,19455],{"type":23,"value":4031},{"type":17,"tag":79,"props":19445,"children":19447},{"className":19446},[],[19448],{"type":23,"value":1500},{"type":23,"value":3732},{"type":17,"tag":79,"props":19451,"children":19453},{"className":19452},[],[19454],{"type":23,"value":1515},{"type":23,"value":1517},{"type":17,"tag":26,"props":19457,"children":19458},{},[19459],{"type":23,"value":4048},{"type":17,"tag":26,"props":19461,"children":19462},{},[19463],{"type":23,"value":4053},{"type":17,"tag":518,"props":19465,"children":19466},{":editable":520,":show-in-col":520,"max-height":521},[19467],{"type":17,"tag":275,"props":19468,"children":19470},{"className":19469,"code":4060,"language":432,"meta":8},[527],[19471],{"type":17,"tag":79,"props":19472,"children":19473},{"__ignoreMap":8},[19474],{"type":23,"value":4060},{"type":17,"tag":26,"props":19476,"children":19477},{},[19478,19479,19484],{"type":23,"value":4070},{"type":17,"tag":79,"props":19480,"children":19482},{"className":19481},[],[19483],{"type":23,"value":1792},{"type":23,"value":4077},{"type":17,"tag":518,"props":19486,"children":19487},{":editable":520,":show-in-col":520,"max-height":521},[19488],{"type":17,"tag":275,"props":19489,"children":19491},{"className":19490,"code":4084,"language":432,"meta":8},[527],[19492],{"type":17,"tag":79,"props":19493,"children":19494},{"__ignoreMap":8},[19495],{"type":23,"value":4084},{"type":17,"tag":518,"props":19497,"children":19498},{":editable":520,":show-in-col":520,"max-height":521},[19499],{"type":17,"tag":275,"props":19500,"children":19502},{"className":19501,"code":4096,"language":432,"meta":8},[527],[19503],{"type":17,"tag":79,"props":19504,"children":19505},{"__ignoreMap":8},[19506],{"type":23,"value":4096},{"type":17,"tag":26,"props":19508,"children":19509},{},[19510,19511,19516,19517,19522],{"type":23,"value":4106},{"type":17,"tag":79,"props":19512,"children":19514},{"className":19513},[],[19515],{"type":23,"value":4112},{"type":23,"value":4114},{"type":17,"tag":79,"props":19518,"children":19520},{"className":19519},[],[19521],{"type":23,"value":3903},{"type":23,"value":3905},{"type":17,"tag":518,"props":19524,"children":19525},{":editable":520,":show-in-col":520,"max-height":521},[19526],{"type":17,"tag":275,"props":19527,"children":19529},{"className":19528,"code":4127,"language":432,"meta":8},[527],[19530],{"type":17,"tag":79,"props":19531,"children":19532},{"__ignoreMap":8},[19533],{"type":23,"value":4127},{"type":17,"tag":26,"props":19535,"children":19536},{},[19537],{"type":23,"value":4137},{"type":17,"tag":518,"props":19539,"children":19540},{":editable":520,":show-in-col":520,"max-height":521},[19541],{"type":17,"tag":275,"props":19542,"children":19544},{"className":19543,"code":4144,"language":432,"meta":8},[527],[19545],{"type":17,"tag":79,"props":19546,"children":19547},{"__ignoreMap":8},[19548],{"type":23,"value":4144},{"type":17,"tag":26,"props":19550,"children":19551},{},[19552,19553,19558,19559,19564],{"type":23,"value":4154},{"type":17,"tag":79,"props":19554,"children":19556},{"className":19555},[],[19557],{"type":23,"value":4160},{"type":23,"value":4162},{"type":17,"tag":79,"props":19560,"children":19562},{"className":19561},[],[19563],{"type":23,"value":4160},{"type":23,"value":1517},{"type":17,"tag":26,"props":19566,"children":19567},{},[19568],{"type":23,"value":4173},{"type":17,"tag":518,"props":19570,"children":19571},{":editable":520,":show-in-col":520,"max-height":521},[19572],{"type":17,"tag":275,"props":19573,"children":19575},{"className":19574,"code":4180,"language":432,"meta":8},[527],[19576],{"type":17,"tag":79,"props":19577,"children":19578},{"__ignoreMap":8},[19579],{"type":23,"value":4180},{"type":17,"tag":836,"props":19581,"children":19582},{},[19583],{"type":17,"tag":26,"props":19584,"children":19585},{},[19586,19590,19591,19596,19597,19602,19603,19608],{"type":17,"tag":2020,"props":19587,"children":19588},{},[19589],{"type":23,"value":2024},{"type":23,"value":4197},{"type":17,"tag":79,"props":19592,"children":19594},{"className":19593},[],[19595],{"type":23,"value":4203},{"type":23,"value":1895},{"type":17,"tag":79,"props":19598,"children":19600},{"className":19599},[],[19601],{"type":23,"value":4210},{"type":23,"value":3281},{"type":17,"tag":79,"props":19604,"children":19606},{"className":19605},[],[19607],{"type":23,"value":4217},{"type":23,"value":4219},{"type":17,"tag":26,"props":19610,"children":19611},{},[19612,19613,19618,19619,19624,19625,19630],{"type":23,"value":3889},{"type":17,"tag":79,"props":19614,"children":19616},{"className":19615},[],[19617],{"type":23,"value":4229},{"type":23,"value":4231},{"type":17,"tag":79,"props":19620,"children":19622},{"className":19621},[],[19623],{"type":23,"value":4237},{"type":23,"value":4239},{"type":17,"tag":79,"props":19626,"children":19628},{"className":19627},[],[19629],{"type":23,"value":4245},{"type":23,"value":4247},{"type":17,"tag":518,"props":19632,"children":19633},{":editable":520,":show-in-col":520,"max-height":521},[19634],{"type":17,"tag":275,"props":19635,"children":19637},{"className":19636,"code":4254,"language":432,"meta":8},[527],[19638],{"type":17,"tag":79,"props":19639,"children":19640},{"__ignoreMap":8},[19641],{"type":23,"value":4254},{"type":17,"tag":96,"props":19643,"children":19644},{"id":4262},[19645],{"type":23,"value":4265},{"type":17,"tag":26,"props":19647,"children":19648},{},[19649,19650,19655,19656,19661,19662,19667],{"type":23,"value":4270},{"type":17,"tag":79,"props":19651,"children":19653},{"className":19652},[],[19654],{"type":23,"value":1500},{"type":23,"value":1502},{"type":17,"tag":79,"props":19657,"children":19659},{"className":19658},[],[19660],{"type":23,"value":920},{"type":23,"value":4283},{"type":17,"tag":79,"props":19663,"children":19665},{"className":19664},[],[19666],{"type":23,"value":1515},{"type":23,"value":1517},{"type":17,"tag":26,"props":19669,"children":19670},{},[19671],{"type":23,"value":4294},{"type":17,"tag":26,"props":19673,"children":19674},{},[19675],{"type":23,"value":4299},{"type":17,"tag":1211,"props":19677,"children":19678},{},[19679,19693],{"type":17,"tag":1215,"props":19680,"children":19681},{},[19682],{"type":17,"tag":1219,"props":19683,"children":19684},{},[19685,19689],{"type":17,"tag":1223,"props":19686,"children":19687},{},[19688],{"type":23,"value":4313},{"type":17,"tag":1223,"props":19690,"children":19691},{},[19692],{"type":23,"value":4318},{"type":17,"tag":1234,"props":19694,"children":19695},{},[19696,19707],{"type":17,"tag":1219,"props":19697,"children":19698},{},[19699,19703],{"type":17,"tag":1241,"props":19700,"children":19701},{},[19702],{"type":23,"value":4329},{"type":17,"tag":1241,"props":19704,"children":19705},{},[19706],{"type":23,"value":4334},{"type":17,"tag":1219,"props":19708,"children":19709},{},[19710,19714],{"type":17,"tag":1241,"props":19711,"children":19712},{},[19713],{"type":23,"value":2201},{"type":17,"tag":1241,"props":19715,"children":19716},{},[19717],{"type":23,"value":4346},{"type":17,"tag":26,"props":19719,"children":19720},{},[19721,19722,19727,19728,19733,19734,19739,19740,19745,19746,19751,19752,19757,19758,19763,19764,19769],{"type":23,"value":4351},{"type":17,"tag":79,"props":19723,"children":19725},{"className":19724},[],[19726],{"type":23,"value":4329},{"type":23,"value":86},{"type":17,"tag":79,"props":19729,"children":19731},{"className":19730},[],[19732],{"type":23,"value":2201},{"type":23,"value":4364},{"type":17,"tag":79,"props":19735,"children":19737},{"className":19736},[],[19738],{"type":23,"value":4370},{"type":23,"value":1895},{"type":17,"tag":79,"props":19741,"children":19743},{"className":19742},[],[19744],{"type":23,"value":4377},{"type":23,"value":1895},{"type":17,"tag":79,"props":19747,"children":19749},{"className":19748},[],[19750],{"type":23,"value":4384},{"type":23,"value":1895},{"type":17,"tag":79,"props":19753,"children":19755},{"className":19754},[],[19756],{"type":23,"value":4391},{"type":23,"value":1895},{"type":17,"tag":79,"props":19759,"children":19761},{"className":19760},[],[19762],{"type":23,"value":4398},{"type":23,"value":3281},{"type":17,"tag":79,"props":19765,"children":19767},{"className":19766},[],[19768],{"type":23,"value":4405},{"type":23,"value":4407},{"type":17,"tag":26,"props":19771,"children":19772},{},[19773],{"type":23,"value":4412},{"type":17,"tag":1211,"props":19775,"children":19776},{},[19777,19799],{"type":17,"tag":1215,"props":19778,"children":19779},{},[19780],{"type":17,"tag":1219,"props":19781,"children":19782},{},[19783,19787,19791,19795],{"type":17,"tag":1223,"props":19784,"children":19785},{},[19786],{"type":23,"value":4426},{"type":17,"tag":1223,"props":19788,"children":19789},{},[19790],{"type":23,"value":4431},{"type":17,"tag":1223,"props":19792,"children":19793},{},[19794],{"type":23,"value":4436},{"type":17,"tag":1223,"props":19796,"children":19797},{},[19798],{"type":23,"value":4441},{"type":17,"tag":1234,"props":19800,"children":19801},{},[19802],{"type":17,"tag":1219,"props":19803,"children":19804},{},[19805,19809,19813,19817],{"type":17,"tag":1241,"props":19806,"children":19807},{},[19808],{"type":23,"value":4452},{"type":17,"tag":1241,"props":19810,"children":19811},{},[19812],{"type":23,"value":4452},{"type":17,"tag":1241,"props":19814,"children":19815},{},[19816],{"type":23,"value":4452},{"type":17,"tag":1241,"props":19818,"children":19819},{},[19820],{"type":23,"value":4465},{"type":17,"tag":26,"props":19822,"children":19823},{},[19824],{"type":23,"value":4470},{"type":17,"tag":275,"props":19826,"children":19828},{"className":19827,"code":4474,"language":432,"meta":8},[527],[19829],{"type":17,"tag":79,"props":19830,"children":19831},{"__ignoreMap":8},[19832],{"type":23,"value":4474},{"type":17,"tag":26,"props":19834,"children":19835},{},[19836],{"type":23,"value":4484},{"type":17,"tag":26,"props":19838,"children":19839},{},[19840],{"type":23,"value":4489},{"type":17,"tag":275,"props":19842,"children":19844},{"className":19843,"code":4493,"language":432,"meta":8},[527],[19845],{"type":17,"tag":79,"props":19846,"children":19847},{"__ignoreMap":8},[19848],{"type":23,"value":4493},{"type":17,"tag":26,"props":19850,"children":19851},{},[19852,19853,19858,19859,19864,19865,19870,19871,19876,19877,19882,19883,19888,19889,19894,19895,19900,19901,19906],{"type":23,"value":4351},{"type":17,"tag":79,"props":19854,"children":19856},{"className":19855},[],[19857],{"type":23,"value":4508},{"type":23,"value":4510},{"type":17,"tag":79,"props":19860,"children":19862},{"className":19861},[],[19863],{"type":23,"value":4516},{"type":23,"value":1895},{"type":17,"tag":79,"props":19866,"children":19868},{"className":19867},[],[19869],{"type":23,"value":4523},{"type":23,"value":1895},{"type":17,"tag":79,"props":19872,"children":19874},{"className":19873},[],[19875],{"type":23,"value":4530},{"type":23,"value":3281},{"type":17,"tag":79,"props":19878,"children":19880},{"className":19879},[],[19881],{"type":23,"value":4537},{"type":23,"value":4364},{"type":17,"tag":79,"props":19884,"children":19886},{"className":19885},[],[19887],{"type":23,"value":4544},{"type":23,"value":1895},{"type":17,"tag":79,"props":19890,"children":19892},{"className":19891},[],[19893],{"type":23,"value":4544},{"type":23,"value":1895},{"type":17,"tag":79,"props":19896,"children":19898},{"className":19897},[],[19899],{"type":23,"value":4544},{"type":23,"value":3281},{"type":17,"tag":79,"props":19902,"children":19904},{"className":19903},[],[19905],{"type":23,"value":4563},{"type":23,"value":4565},{"type":17,"tag":26,"props":19908,"children":19909},{},[19910],{"type":23,"value":4570},{"type":17,"tag":26,"props":19912,"children":19913},{},[19914],{"type":23,"value":4575},{"type":17,"tag":518,"props":19916,"children":19917},{":editable":520,":show-in-col":520,"max-height":521},[19918],{"type":17,"tag":275,"props":19919,"children":19921},{"className":19920,"code":4582,"language":432,"meta":8},[527],[19922],{"type":17,"tag":79,"props":19923,"children":19924},{"__ignoreMap":8},[19925],{"type":23,"value":4582},{"type":17,"tag":26,"props":19927,"children":19928},{},[19929,19930,19935],{"type":23,"value":4592},{"type":17,"tag":79,"props":19931,"children":19933},{"className":19932},[],[19934],{"type":23,"value":4598},{"type":23,"value":4600},{"type":17,"tag":518,"props":19937,"children":19938},{":editable":520,":show-in-col":520,"max-height":521},[19939],{"type":17,"tag":275,"props":19940,"children":19942},{"className":19941,"code":4607,"language":432,"meta":8},[527],[19943],{"type":17,"tag":79,"props":19944,"children":19945},{"__ignoreMap":8},[19946],{"type":23,"value":4607},{"type":17,"tag":26,"props":19948,"children":19949},{},[19950,19951,19956],{"type":23,"value":4617},{"type":17,"tag":79,"props":19952,"children":19954},{"className":19953},[],[19955],{"type":23,"value":4623},{"type":23,"value":1517},{"type":17,"tag":518,"props":19958,"children":19959},{":editable":520,":show-in-col":520,"max-height":521},[19960],{"type":17,"tag":275,"props":19961,"children":19963},{"className":19962,"code":4631,"language":432,"meta":8},[527],[19964],{"type":17,"tag":79,"props":19965,"children":19966},{"__ignoreMap":8},[19967],{"type":23,"value":4631},{"type":17,"tag":26,"props":19969,"children":19970},{},[19971,19972,19977,19978,19983,19984,19989],{"type":23,"value":4106},{"type":17,"tag":79,"props":19973,"children":19975},{"className":19974},[],[19976],{"type":23,"value":4646},{"type":23,"value":4648},{"type":17,"tag":79,"props":19979,"children":19981},{"className":19980},[],[19982],{"type":23,"value":4654},{"type":23,"value":4656},{"type":17,"tag":79,"props":19985,"children":19987},{"className":19986},[],[19988],{"type":23,"value":4662},{"type":23,"value":4664},{"type":17,"tag":518,"props":19991,"children":19992},{":editable":520,":show-in-col":520,"max-height":521},[19993],{"type":17,"tag":275,"props":19994,"children":19996},{"className":19995,"code":4671,"language":432,"meta":8},[527],[19997],{"type":17,"tag":79,"props":19998,"children":19999},{"__ignoreMap":8},[20000],{"type":23,"value":4671},{"type":17,"tag":26,"props":20002,"children":20003},{},[20004],{"type":23,"value":4681},{"type":17,"tag":518,"props":20006,"children":20007},{":editable":520,":show-in-col":520,"max-height":521},[20008],{"type":17,"tag":275,"props":20009,"children":20011},{"className":20010,"code":4688,"language":432,"meta":8},[527],[20012],{"type":17,"tag":79,"props":20013,"children":20014},{"__ignoreMap":8},[20015],{"type":23,"value":4688},{"type":17,"tag":26,"props":20017,"children":20018},{},[20019],{"type":23,"value":4698},{"type":17,"tag":518,"props":20021,"children":20022},{":editable":520,":show-in-col":520,"max-height":521},[20023],{"type":17,"tag":275,"props":20024,"children":20026},{"className":20025,"code":4705,"language":432,"meta":8},[527],[20027],{"type":17,"tag":79,"props":20028,"children":20029},{"__ignoreMap":8},[20030],{"type":23,"value":4705},{"type":17,"tag":26,"props":20032,"children":20033},{},[20034],{"type":23,"value":4715},{"type":17,"tag":18,"props":20036,"children":20037},{"id":4718},[20038],{"type":23,"value":4721},{"type":17,"tag":96,"props":20040,"children":20041},{"id":4724},[20042],{"type":23,"value":4727},{"type":17,"tag":26,"props":20044,"children":20045},{},[20046,20047,20052,20053,20058,20059,20064,20065,20070,20071,20076,20077,20082],{"type":23,"value":4732},{"type":17,"tag":79,"props":20048,"children":20050},{"className":20049},[],[20051],{"type":23,"value":2270},{"type":23,"value":1895},{"type":17,"tag":79,"props":20054,"children":20056},{"className":20055},[],[20057],{"type":23,"value":2228},{"type":23,"value":1895},{"type":17,"tag":79,"props":20060,"children":20062},{"className":20061},[],[20063],{"type":23,"value":2862},{"type":23,"value":1895},{"type":17,"tag":79,"props":20066,"children":20068},{"className":20067},[],[20069],{"type":23,"value":2870},{"type":23,"value":1895},{"type":17,"tag":79,"props":20072,"children":20074},{"className":20073},[],[20075],{"type":23,"value":2878},{"type":23,"value":1895},{"type":17,"tag":79,"props":20078,"children":20080},{"className":20079},[],[20081],{"type":23,"value":2983},{"type":23,"value":2171},{"type":17,"tag":518,"props":20084,"children":20085},{":editable":520,":show-in-col":520,"max-height":521},[20086],{"type":17,"tag":275,"props":20087,"children":20089},{"className":20088,"code":4775,"language":432,"meta":8},[527],[20090],{"type":17,"tag":79,"props":20091,"children":20092},{"__ignoreMap":8},[20093],{"type":23,"value":4775},{"type":17,"tag":26,"props":20095,"children":20096},{},[20097,20098,20103,20104,20109,20110,20115],{"type":23,"value":2856},{"type":17,"tag":79,"props":20099,"children":20101},{"className":20100},[],[20102],{"type":23,"value":4790},{"type":23,"value":4792},{"type":17,"tag":79,"props":20105,"children":20107},{"className":20106},[],[20108],{"type":23,"value":920},{"type":23,"value":4799},{"type":17,"tag":79,"props":20111,"children":20113},{"className":20112},[],[20114],{"type":23,"value":1515},{"type":23,"value":1517},{"type":17,"tag":26,"props":20117,"children":20118},{},[20119],{"type":23,"value":4810},{"type":17,"tag":518,"props":20121,"children":20122},{":editable":520,":show-in-col":520,"max-height":521},[20123],{"type":17,"tag":275,"props":20124,"children":20126},{"className":20125,"code":4817,"language":432,"meta":8},[527],[20127],{"type":17,"tag":79,"props":20128,"children":20129},{"__ignoreMap":8},[20130],{"type":23,"value":4817},{"type":17,"tag":26,"props":20132,"children":20133},{},[20134,20135,20140,20141,20146,20147,20152,20153,20158,20159,20164,20165,20170,20171,20176],{"type":23,"value":4827},{"type":17,"tag":79,"props":20136,"children":20138},{"className":20137},[],[20139],{"type":23,"value":4833},{"type":23,"value":4835},{"type":17,"tag":79,"props":20142,"children":20144},{"className":20143},[],[20145],{"type":23,"value":4790},{"type":23,"value":4842},{"type":17,"tag":79,"props":20148,"children":20150},{"className":20149},[],[20151],{"type":23,"value":4833},{"type":23,"value":4849},{"type":17,"tag":79,"props":20154,"children":20156},{"className":20155},[],[20157],{"type":23,"value":4329},{"type":23,"value":4856},{"type":17,"tag":79,"props":20160,"children":20162},{"className":20161},[],[20163],{"type":23,"value":4862},{"type":23,"value":4864},{"type":17,"tag":79,"props":20166,"children":20168},{"className":20167},[],[20169],{"type":23,"value":4833},{"type":23,"value":4871},{"type":17,"tag":79,"props":20172,"children":20174},{"className":20173},[],[20175],{"type":23,"value":4329},{"type":23,"value":1517},{"type":17,"tag":26,"props":20178,"children":20179},{},[20180,20181,20186,20187,20192],{"type":23,"value":4882},{"type":17,"tag":79,"props":20182,"children":20184},{"className":20183},[],[20185],{"type":23,"value":4888},{"type":23,"value":4890},{"type":17,"tag":79,"props":20188,"children":20190},{"className":20189},[],[20191],{"type":23,"value":4833},{"type":23,"value":4897},{"type":17,"tag":26,"props":20194,"children":20195},{},[20196],{"type":23,"value":4902},{"type":17,"tag":96,"props":20198,"children":20199},{"id":4905},[20200],{"type":23,"value":4908},{"type":17,"tag":26,"props":20202,"children":20203},{},[20204],{"type":23,"value":4913},{"type":17,"tag":518,"props":20206,"children":20207},{":editable":520,":show-in-col":520,"max-height":521},[20208],{"type":17,"tag":275,"props":20209,"children":20211},{"className":20210,"code":4920,"language":432,"meta":8},[527],[20212],{"type":17,"tag":79,"props":20213,"children":20214},{"__ignoreMap":8},[20215],{"type":23,"value":4920},{"type":17,"tag":26,"props":20217,"children":20218},{},[20219,20220,20225,20226,20231],{"type":23,"value":4930},{"type":17,"tag":79,"props":20221,"children":20223},{"className":20222},[],[20224],{"type":23,"value":4936},{"type":23,"value":4938},{"type":17,"tag":79,"props":20227,"children":20229},{"className":20228},[],[20230],{"type":23,"value":4944},{"type":23,"value":4946},{"type":17,"tag":26,"props":20233,"children":20234},{},[20235,20236,20241,20242,20247],{"type":23,"value":4951},{"type":17,"tag":79,"props":20237,"children":20239},{"className":20238},[],[20240],{"type":23,"value":4957},{"type":23,"value":4959},{"type":17,"tag":79,"props":20243,"children":20245},{"className":20244},[],[20246],{"type":23,"value":4957},{"type":23,"value":4966},{"type":17,"tag":26,"props":20249,"children":20250},{},[20251],{"type":23,"value":4971},{"type":17,"tag":518,"props":20253,"children":20254},{":editable":520,":show-in-col":520,"max-height":521},[20255],{"type":17,"tag":275,"props":20256,"children":20258},{"className":20257,"code":4978,"language":432,"meta":8},[527],[20259],{"type":17,"tag":79,"props":20260,"children":20261},{"__ignoreMap":8},[20262],{"type":23,"value":4978},{"type":17,"tag":26,"props":20264,"children":20265},{},[20266,20267,20272,20273,20278,20279,20284,20285,20290,20291,20296],{"type":23,"value":4988},{"type":17,"tag":79,"props":20268,"children":20270},{"className":20269},[],[20271],{"type":23,"value":4944},{"type":23,"value":86},{"type":17,"tag":79,"props":20274,"children":20276},{"className":20275},[],[20277],{"type":23,"value":5000},{"type":23,"value":5002},{"type":17,"tag":79,"props":20280,"children":20282},{"className":20281},[],[20283],{"type":23,"value":4957},{"type":23,"value":5009},{"type":17,"tag":79,"props":20286,"children":20288},{"className":20287},[],[20289],{"type":23,"value":5015},{"type":23,"value":86},{"type":17,"tag":79,"props":20292,"children":20294},{"className":20293},[],[20295],{"type":23,"value":5022},{"type":23,"value":5024},{"type":17,"tag":26,"props":20298,"children":20299},{},[20300,20301,20306],{"type":23,"value":5029},{"type":17,"tag":79,"props":20302,"children":20304},{"className":20303},[],[20305],{"type":23,"value":4957},{"type":23,"value":5036},{"type":17,"tag":518,"props":20308,"children":20309},{":editable":520,":show-in-col":520,"max-height":521},[20310],{"type":17,"tag":275,"props":20311,"children":20313},{"className":20312,"code":5043,"language":432,"meta":8},[527],[20314],{"type":17,"tag":79,"props":20315,"children":20316},{"__ignoreMap":8},[20317],{"type":23,"value":5043},{"type":17,"tag":26,"props":20319,"children":20320},{},[20321,20322,20327,20328,20333,20334,20339],{"type":23,"value":5053},{"type":17,"tag":79,"props":20323,"children":20325},{"className":20324},[],[20326],{"type":23,"value":5059},{"type":23,"value":5061},{"type":17,"tag":79,"props":20329,"children":20331},{"className":20330},[],[20332],{"type":23,"value":4957},{"type":23,"value":5068},{"type":17,"tag":79,"props":20335,"children":20337},{"className":20336},[],[20338],{"type":23,"value":5074},{"type":23,"value":5076},{"type":17,"tag":96,"props":20341,"children":20342},{"id":5079},[20343],{"type":23,"value":5082},{"type":17,"tag":26,"props":20345,"children":20346},{},[20347],{"type":23,"value":5087},{"type":17,"tag":1561,"props":20349,"children":20350},{"id":5090},[20351],{"type":23,"value":5093},{"type":17,"tag":26,"props":20353,"children":20354},{},[20355],{"type":23,"value":5098},{"type":17,"tag":26,"props":20357,"children":20358},{},[20359],{"type":23,"value":5103},{"type":17,"tag":518,"props":20361,"children":20362},{":editable":520,":show-in-col":520,"max-height":521},[20363],{"type":17,"tag":275,"props":20364,"children":20366},{"className":20365,"code":5110,"language":432,"meta":8},[527],[20367],{"type":17,"tag":79,"props":20368,"children":20369},{"__ignoreMap":8},[20370],{"type":23,"value":5110},{"type":17,"tag":26,"props":20372,"children":20373},{},[20374,20375,20380,20381,20386],{"type":23,"value":5120},{"type":17,"tag":79,"props":20376,"children":20378},{"className":20377},[],[20379],{"type":23,"value":5126},{"type":23,"value":5128},{"type":17,"tag":79,"props":20382,"children":20384},{"className":20383},[],[20385],{"type":23,"value":5134},{"type":23,"value":5136},{"type":17,"tag":26,"props":20388,"children":20389},{},[20390],{"type":23,"value":5141},{"type":17,"tag":1561,"props":20392,"children":20393},{"id":5144},[20394],{"type":23,"value":5147},{"type":17,"tag":26,"props":20396,"children":20397},{},[20398],{"type":23,"value":5152},{"type":17,"tag":26,"props":20400,"children":20401},{},[20402],{"type":23,"value":5157},{"type":17,"tag":518,"props":20404,"children":20405},{":editable":520,":show-in-col":520,"max-height":521},[20406],{"type":17,"tag":275,"props":20407,"children":20409},{"className":20408,"code":5164,"language":432,"meta":8},[527],[20410],{"type":17,"tag":79,"props":20411,"children":20412},{"__ignoreMap":8},[20413],{"type":23,"value":5164},{"type":17,"tag":26,"props":20415,"children":20416},{},[20417,20418,20423,20424,20429],{"type":23,"value":5174},{"type":17,"tag":79,"props":20419,"children":20421},{"className":20420},[],[20422],{"type":23,"value":4833},{"type":23,"value":5181},{"type":17,"tag":79,"props":20425,"children":20427},{"className":20426},[],[20428],{"type":23,"value":4833},{"type":23,"value":5188},{"type":17,"tag":18,"props":20431,"children":20432},{"id":5191},[20433],{"type":23,"value":5194},{"type":17,"tag":26,"props":20435,"children":20436},{},[20437,20438,20443,20444,20449],{"type":23,"value":5199},{"type":17,"tag":79,"props":20439,"children":20441},{"className":20440},[],[20442],{"type":23,"value":5205},{"type":23,"value":5207},{"type":17,"tag":79,"props":20445,"children":20447},{"className":20446},[],[20448],{"type":23,"value":2169},{"type":23,"value":5214},{"type":17,"tag":96,"props":20451,"children":20452},{"id":5217},[20453,20454,20459],{"type":23,"value":5220},{"type":17,"tag":79,"props":20455,"children":20457},{"className":20456},[],[20458],{"type":23,"value":5205},{"type":23,"value":5227},{"type":17,"tag":26,"props":20461,"children":20462},{},[20463,20464,20469,20470,20475],{"type":23,"value":3191},{"type":17,"tag":79,"props":20465,"children":20467},{"className":20466},[],[20468],{"type":23,"value":5205},{"type":23,"value":5238},{"type":17,"tag":79,"props":20471,"children":20473},{"className":20472},[],[20474],{"type":23,"value":5205},{"type":23,"value":5245},{"type":17,"tag":275,"props":20477,"children":20479},{"className":20478,"code":5249,"language":432,"meta":8},[527],[20480],{"type":17,"tag":79,"props":20481,"children":20482},{"__ignoreMap":8},[20483],{"type":23,"value":5249},{"type":17,"tag":26,"props":20485,"children":20486},{},[20487,20488,20493,20494,20499,20500,20505,20506,20511,20512,20517,20518,20523,20524,20529,20530,20535],{"type":23,"value":5259},{"type":17,"tag":79,"props":20489,"children":20491},{"className":20490},[],[20492],{"type":23,"value":5205},{"type":23,"value":5266},{"type":17,"tag":79,"props":20495,"children":20497},{"className":20496},[],[20498],{"type":23,"value":5272},{"type":23,"value":5274},{"type":17,"tag":79,"props":20501,"children":20503},{"className":20502},[],[20504],{"type":23,"value":5280},{"type":23,"value":1895},{"type":17,"tag":79,"props":20507,"children":20509},{"className":20508},[],[20510],{"type":23,"value":5287},{"type":23,"value":5289},{"type":17,"tag":79,"props":20513,"children":20515},{"className":20514},[],[20516],{"type":23,"value":5272},{"type":23,"value":5296},{"type":17,"tag":79,"props":20519,"children":20521},{"className":20520},[],[20522],{"type":23,"value":5280},{"type":23,"value":1895},{"type":17,"tag":79,"props":20525,"children":20527},{"className":20526},[],[20528],{"type":23,"value":5287},{"type":23,"value":5309},{"type":17,"tag":79,"props":20531,"children":20533},{"className":20532},[],[20534],{"type":23,"value":5272},{"type":23,"value":5316},{"type":17,"tag":26,"props":20537,"children":20538},{},[20539,20540,20545],{"type":23,"value":5321},{"type":17,"tag":79,"props":20541,"children":20543},{"className":20542},[],[20544],{"type":23,"value":5205},{"type":23,"value":5328},{"type":17,"tag":518,"props":20547,"children":20548},{":editable":520,":show-in-col":520,"max-height":521},[20549],{"type":17,"tag":275,"props":20550,"children":20552},{"className":20551,"code":5335,"language":432,"meta":8},[527],[20553],{"type":17,"tag":79,"props":20554,"children":20555},{"__ignoreMap":8},[20556],{"type":23,"value":5335},{"type":17,"tag":26,"props":20558,"children":20559},{},[20560,20561,20566,20567,20572,20573,20578,20579,20584,20585,20590,20591,20596],{"type":23,"value":5345},{"type":17,"tag":79,"props":20562,"children":20564},{"className":20563},[],[20565],{"type":23,"value":5351},{"type":23,"value":5353},{"type":17,"tag":79,"props":20568,"children":20570},{"className":20569},[],[20571],{"type":23,"value":5205},{"type":23,"value":5360},{"type":17,"tag":79,"props":20574,"children":20576},{"className":20575},[],[20577],{"type":23,"value":5351},{"type":23,"value":5367},{"type":17,"tag":79,"props":20580,"children":20582},{"className":20581},[],[20583],{"type":23,"value":5351},{"type":23,"value":5374},{"type":17,"tag":79,"props":20586,"children":20588},{"className":20587},[],[20589],{"type":23,"value":5351},{"type":23,"value":5381},{"type":17,"tag":79,"props":20592,"children":20594},{"className":20593},[],[20595],{"type":23,"value":5351},{"type":23,"value":5388},{"type":17,"tag":26,"props":20598,"children":20599},{},[20600,20601,20606],{"type":23,"value":5393},{"type":17,"tag":79,"props":20602,"children":20604},{"className":20603},[],[20605],{"type":23,"value":5205},{"type":23,"value":5400},{"type":17,"tag":275,"props":20608,"children":20610},{"className":20609,"code":5404,"language":432,"meta":8},[527],[20611],{"type":17,"tag":79,"props":20612,"children":20613},{"__ignoreMap":8},[20614],{"type":23,"value":5404},{"type":17,"tag":26,"props":20616,"children":20617},{},[20618,20619,20624],{"type":23,"value":5414},{"type":17,"tag":79,"props":20620,"children":20622},{"className":20621},[],[20623],{"type":23,"value":5205},{"type":23,"value":5421},{"type":17,"tag":96,"props":20626,"children":20627},{"id":5424},[20628,20629,20634],{"type":23,"value":5427},{"type":17,"tag":79,"props":20630,"children":20632},{"className":20631},[],[20633],{"type":23,"value":2169},{"type":23,"value":5227},{"type":17,"tag":26,"props":20636,"children":20637},{},[20638,20639,20644,20645,20650,20651,20656],{"type":23,"value":5438},{"type":17,"tag":79,"props":20640,"children":20642},{"className":20641},[],[20643],{"type":23,"value":5205},{"type":23,"value":5445},{"type":17,"tag":79,"props":20646,"children":20648},{"className":20647},[],[20649],{"type":23,"value":2169},{"type":23,"value":5452},{"type":17,"tag":79,"props":20652,"children":20654},{"className":20653},[],[20655],{"type":23,"value":2169},{"type":23,"value":5245},{"type":17,"tag":836,"props":20658,"children":20659},{},[20660],{"type":17,"tag":26,"props":20661,"children":20662},{},[20663,20667],{"type":17,"tag":2020,"props":20664,"children":20665},{},[20666],{"type":23,"value":2024},{"type":23,"value":5470},{"type":17,"tag":275,"props":20669,"children":20671},{"className":20670,"code":5474,"language":432,"meta":8},[527],[20672],{"type":17,"tag":79,"props":20673,"children":20674},{"__ignoreMap":8},[20675],{"type":23,"value":5474},{"type":17,"tag":26,"props":20677,"children":20678},{},[20679,20680,20685,20686,20691,20692,20697,20698,20703,20704,20709],{"type":23,"value":5259},{"type":17,"tag":79,"props":20681,"children":20683},{"className":20682},[],[20684],{"type":23,"value":2169},{"type":23,"value":5490},{"type":17,"tag":79,"props":20687,"children":20689},{"className":20688},[],[20690],{"type":23,"value":5496},{"type":23,"value":5498},{"type":17,"tag":79,"props":20693,"children":20695},{"className":20694},[],[20696],{"type":23,"value":17},{"type":23,"value":5505},{"type":17,"tag":79,"props":20699,"children":20701},{"className":20700},[],[20702],{"type":23,"value":5280},{"type":23,"value":1895},{"type":17,"tag":79,"props":20705,"children":20707},{"className":20706},[],[20708],{"type":23,"value":5287},{"type":23,"value":5518},{"type":17,"tag":26,"props":20711,"children":20712},{},[20713,20714,20719],{"type":23,"value":5321},{"type":17,"tag":79,"props":20715,"children":20717},{"className":20716},[],[20718],{"type":23,"value":2169},{"type":23,"value":5328},{"type":17,"tag":518,"props":20721,"children":20722},{":editable":520,":show-in-col":520,"max-height":521},[20723],{"type":17,"tag":275,"props":20724,"children":20726},{"className":20725,"code":5535,"language":432,"meta":8},[527],[20727],{"type":17,"tag":79,"props":20728,"children":20729},{"__ignoreMap":8},[20730],{"type":23,"value":5535},{"type":17,"tag":26,"props":20732,"children":20733},{},[20734,20735,20740,20741,20746],{"type":23,"value":5545},{"type":17,"tag":79,"props":20736,"children":20738},{"className":20737},[],[20739],{"type":23,"value":5551},{"type":23,"value":5353},{"type":17,"tag":79,"props":20742,"children":20744},{"className":20743},[],[20745],{"type":23,"value":2169},{"type":23,"value":5559},{"type":17,"tag":26,"props":20748,"children":20749},{},[20750,20751,20756],{"type":23,"value":5564},{"type":17,"tag":79,"props":20752,"children":20754},{"className":20753},[],[20755],{"type":23,"value":2169},{"type":23,"value":5571},{"type":17,"tag":518,"props":20758,"children":20759},{":editable":520,":show-in-col":520,"max-height":521},[20760],{"type":17,"tag":275,"props":20761,"children":20763},{"className":20762,"code":5578,"language":432,"meta":8},[527],[20764],{"type":17,"tag":79,"props":20765,"children":20766},{"__ignoreMap":8},[20767],{"type":23,"value":5578},{"type":17,"tag":26,"props":20769,"children":20770},{},[20771,20772,20777,20778,20783,20784,20789,20790,20795],{"type":23,"value":5545},{"type":17,"tag":79,"props":20773,"children":20775},{"className":20774},[],[20776],{"type":23,"value":5551},{"type":23,"value":5353},{"type":17,"tag":79,"props":20779,"children":20781},{"className":20780},[],[20782],{"type":23,"value":2169},{"type":23,"value":5600},{"type":17,"tag":79,"props":20785,"children":20787},{"className":20786},[],[20788],{"type":23,"value":5606},{"type":23,"value":5608},{"type":17,"tag":79,"props":20791,"children":20793},{"className":20792},[],[20794],{"type":23,"value":5606},{"type":23,"value":1517},{"type":17,"tag":26,"props":20797,"children":20798},{},[20799,20800,20805,20806,20811],{"type":23,"value":5619},{"type":17,"tag":79,"props":20801,"children":20803},{"className":20802},[],[20804],{"type":23,"value":2352},{"type":23,"value":5626},{"type":17,"tag":79,"props":20807,"children":20809},{"className":20808},[],[20810],{"type":23,"value":2169},{"type":23,"value":5633},{"type":17,"tag":518,"props":20813,"children":20814},{":editable":520,":show-in-col":520,"max-height":521},[20815],{"type":17,"tag":275,"props":20816,"children":20818},{"className":20817,"code":5640,"language":432,"meta":8},[527],[20819],{"type":17,"tag":79,"props":20820,"children":20821},{"__ignoreMap":8},[20822],{"type":23,"value":5640},{"type":17,"tag":26,"props":20824,"children":20825},{},[20826,20827,20832,20833,20838,20839,20844],{"type":23,"value":5650},{"type":17,"tag":79,"props":20828,"children":20830},{"className":20829},[],[20831],{"type":23,"value":2169},{"type":23,"value":5657},{"type":17,"tag":79,"props":20834,"children":20836},{"className":20835},[],[20837],{"type":23,"value":5663},{"type":23,"value":5665},{"type":17,"tag":79,"props":20840,"children":20842},{"className":20841},[],[20843],{"type":23,"value":5663},{"type":23,"value":5672},{"type":17,"tag":275,"props":20846,"children":20848},{"className":20847,"code":5676,"language":432,"meta":8},[527],[20849],{"type":17,"tag":79,"props":20850,"children":20851},{"__ignoreMap":8},[20852],{"type":23,"value":5676},{"type":17,"tag":26,"props":20854,"children":20855},{},[20856,20857,20862,20863,20868,20869,20874,20875,20880,20881,20886,20887,20892,20893,20898,20899,20904],{"type":23,"value":3191},{"type":17,"tag":79,"props":20858,"children":20860},{"className":20859},[],[20861],{"type":23,"value":5663},{"type":23,"value":5692},{"type":17,"tag":79,"props":20864,"children":20866},{"className":20865},[],[20867],{"type":23,"value":5698},{"type":23,"value":5700},{"type":17,"tag":79,"props":20870,"children":20872},{"className":20871},[],[20873],{"type":23,"value":5706},{"type":23,"value":5708},{"type":17,"tag":79,"props":20876,"children":20878},{"className":20877},[],[20879],{"type":23,"value":5714},{"type":23,"value":5716},{"type":17,"tag":79,"props":20882,"children":20884},{"className":20883},[],[20885],{"type":23,"value":5698},{"type":23,"value":5723},{"type":17,"tag":79,"props":20888,"children":20890},{"className":20889},[],[20891],{"type":23,"value":5706},{"type":23,"value":5730},{"type":17,"tag":79,"props":20894,"children":20896},{"className":20895},[],[20897],{"type":23,"value":5706},{"type":23,"value":5737},{"type":17,"tag":79,"props":20900,"children":20902},{"className":20901},[],[20903],{"type":23,"value":5714},{"type":23,"value":5744},{"type":17,"tag":26,"props":20906,"children":20907},{},[20908,20909,20914,20915,20920],{"type":23,"value":5321},{"type":17,"tag":79,"props":20910,"children":20912},{"className":20911},[],[20913],{"type":23,"value":2169},{"type":23,"value":5755},{"type":17,"tag":79,"props":20916,"children":20918},{"className":20917},[],[20919],{"type":23,"value":5663},{"type":23,"value":5762},{"type":17,"tag":518,"props":20922,"children":20923},{":editable":520,":show-in-col":520,"max-height":521},[20924],{"type":17,"tag":275,"props":20925,"children":20927},{"className":20926,"code":5769,"language":432,"meta":8},[527],[20928],{"type":17,"tag":79,"props":20929,"children":20930},{"__ignoreMap":8},[20931],{"type":23,"value":5769},{"type":17,"tag":26,"props":20933,"children":20934},{},[20935,20936,20941,20942,20947],{"type":23,"value":5779},{"type":17,"tag":79,"props":20937,"children":20939},{"className":20938},[],[20940],{"type":23,"value":5785},{"type":23,"value":5787},{"type":17,"tag":79,"props":20943,"children":20945},{"className":20944},[],[20946],{"type":23,"value":2169},{"type":23,"value":5794},{"type":17,"tag":26,"props":20949,"children":20950},{},[20951,20952,20957],{"type":23,"value":5799},{"type":17,"tag":79,"props":20953,"children":20955},{"className":20954},[],[20956],{"type":23,"value":5663},{"type":23,"value":5806},{"type":17,"tag":518,"props":20959,"children":20960},{":editable":520,":show-in-col":520,"max-height":521},[20961],{"type":17,"tag":275,"props":20962,"children":20964},{"className":20963,"code":5813,"language":432,"meta":8},[527],[20965],{"type":17,"tag":79,"props":20966,"children":20967},{"__ignoreMap":8},[20968],{"type":23,"value":5813},{"type":17,"tag":26,"props":20970,"children":20971},{},[20972,20973,20978],{"type":23,"value":3191},{"type":17,"tag":79,"props":20974,"children":20976},{"className":20975},[],[20977],{"type":23,"value":5663},{"type":23,"value":5829},{"type":17,"tag":518,"props":20980,"children":20981},{":editable":520,":show-in-col":520,"max-height":521},[20982],{"type":17,"tag":275,"props":20983,"children":20985},{"className":20984,"code":5836,"language":432,"meta":8},[527],[20986],{"type":17,"tag":79,"props":20987,"children":20988},{"__ignoreMap":8},[20989],{"type":23,"value":5836},{"type":17,"tag":26,"props":20991,"children":20992},{},[20993],{"type":23,"value":5846},{"type":17,"tag":518,"props":20995,"children":20996},{":editable":520,":show-in-col":520,"max-height":521},[20997],{"type":17,"tag":275,"props":20998,"children":21000},{"className":20999,"code":5853,"language":432,"meta":8},[527],[21001],{"type":17,"tag":79,"props":21002,"children":21003},{"__ignoreMap":8},[21004],{"type":23,"value":5853},{"type":17,"tag":26,"props":21006,"children":21007},{},[21008,21009,21014,21015,21020,21021,21026],{"type":23,"value":3535},{"type":17,"tag":79,"props":21010,"children":21012},{"className":21011},[],[21013],{"type":23,"value":5868},{"type":23,"value":5870},{"type":17,"tag":79,"props":21016,"children":21018},{"className":21017},[],[21019],{"type":23,"value":5876},{"type":23,"value":5878},{"type":17,"tag":79,"props":21022,"children":21024},{"className":21023},[],[21025],{"type":23,"value":2169},{"type":23,"value":5885},{"type":17,"tag":26,"props":21028,"children":21029},{},[21030,21031,21036,21037,21042],{"type":23,"value":5890},{"type":17,"tag":79,"props":21032,"children":21034},{"className":21033},[],[21035],{"type":23,"value":5663},{"type":23,"value":5897},{"type":17,"tag":79,"props":21038,"children":21040},{"className":21039},[],[21041],{"type":23,"value":2169},{"type":23,"value":5904},{"type":17,"tag":518,"props":21044,"children":21045},{":editable":520,":show-in-col":520,"max-height":521},[21046],{"type":17,"tag":275,"props":21047,"children":21049},{"className":21048,"code":5911,"language":432,"meta":8},[527],[21050],{"type":17,"tag":79,"props":21051,"children":21052},{"__ignoreMap":8},[21053],{"type":23,"value":5911},{"type":17,"tag":96,"props":21055,"children":21056},{"id":5919},[21057],{"type":23,"value":5922},{"type":17,"tag":26,"props":21059,"children":21060},{},[21061],{"type":23,"value":5927},{"type":17,"tag":235,"props":21063,"children":21064},{},[21065,21074,21083],{"type":17,"tag":36,"props":21066,"children":21067},{},[21068,21073],{"type":17,"tag":79,"props":21069,"children":21071},{"className":21070},[],[21072],{"type":23,"value":5939},{"type":23,"value":5941},{"type":17,"tag":36,"props":21075,"children":21076},{},[21077,21082],{"type":17,"tag":79,"props":21078,"children":21080},{"className":21079},[],[21081],{"type":23,"value":5950},{"type":23,"value":5952},{"type":17,"tag":36,"props":21084,"children":21085},{},[21086,21091],{"type":17,"tag":79,"props":21087,"children":21089},{"className":21088},[],[21090],{"type":23,"value":5961},{"type":23,"value":5963},{"type":17,"tag":26,"props":21093,"children":21094},{},[21095,21096,21101],{"type":23,"value":5968},{"type":17,"tag":79,"props":21097,"children":21099},{"className":21098},[],[21100],{"type":23,"value":5939},{"type":23,"value":3236},{"type":17,"tag":518,"props":21103,"children":21104},{":editable":520,":show-in-col":520,"max-height":521},[21105],{"type":17,"tag":275,"props":21106,"children":21108},{"className":21107,"code":5981,"language":432,"meta":8},[527],[21109],{"type":17,"tag":79,"props":21110,"children":21111},{"__ignoreMap":8},[21112],{"type":23,"value":5981},{"type":17,"tag":26,"props":21114,"children":21115},{},[21116,21117,21122,21123,21128,21129,21134,21135,21140,21141,21146,21147,21152],{"type":23,"value":5991},{"type":17,"tag":79,"props":21118,"children":21120},{"className":21119},[],[21121],{"type":23,"value":5205},{"type":23,"value":5360},{"type":17,"tag":79,"props":21124,"children":21126},{"className":21125},[],[21127],{"type":23,"value":5351},{"type":23,"value":6004},{"type":17,"tag":79,"props":21130,"children":21132},{"className":21131},[],[21133],{"type":23,"value":5351},{"type":23,"value":6011},{"type":17,"tag":79,"props":21136,"children":21138},{"className":21137},[],[21139],{"type":23,"value":5939},{"type":23,"value":6018},{"type":17,"tag":79,"props":21142,"children":21144},{"className":21143},[],[21145],{"type":23,"value":6024},{"type":23,"value":6026},{"type":17,"tag":79,"props":21148,"children":21150},{"className":21149},[],[21151],{"type":23,"value":5351},{"type":23,"value":6033},{"type":17,"tag":26,"props":21154,"children":21155},{},[21156,21157,21162],{"type":23,"value":5968},{"type":17,"tag":79,"props":21158,"children":21160},{"className":21159},[],[21161],{"type":23,"value":5950},{"type":23,"value":3236},{"type":17,"tag":518,"props":21164,"children":21165},{":editable":520,":show-in-col":520,"max-height":521},[21166],{"type":17,"tag":275,"props":21167,"children":21169},{"className":21168,"code":6050,"language":432,"meta":8},[527],[21170],{"type":17,"tag":79,"props":21171,"children":21172},{"__ignoreMap":8},[21173],{"type":23,"value":6050},{"type":17,"tag":26,"props":21175,"children":21176},{},[21177,21178,21183,21184,21189,21190,21195,21196,21201,21202,21207,21208,21213],{"type":23,"value":5991},{"type":17,"tag":79,"props":21179,"children":21181},{"className":21180},[],[21182],{"type":23,"value":5205},{"type":23,"value":5360},{"type":17,"tag":79,"props":21185,"children":21187},{"className":21186},[],[21188],{"type":23,"value":5351},{"type":23,"value":6004},{"type":17,"tag":79,"props":21191,"children":21193},{"className":21192},[],[21194],{"type":23,"value":5351},{"type":23,"value":6011},{"type":17,"tag":79,"props":21197,"children":21199},{"className":21198},[],[21200],{"type":23,"value":5950},{"type":23,"value":6084},{"type":17,"tag":79,"props":21203,"children":21205},{"className":21204},[],[21206],{"type":23,"value":5351},{"type":23,"value":6091},{"type":17,"tag":79,"props":21209,"children":21211},{"className":21210},[],[21212],{"type":23,"value":5351},{"type":23,"value":6098},{"type":17,"tag":26,"props":21215,"children":21216},{},[21217,21218,21223],{"type":23,"value":5968},{"type":17,"tag":79,"props":21219,"children":21221},{"className":21220},[],[21222],{"type":23,"value":5961},{"type":23,"value":3236},{"type":17,"tag":518,"props":21225,"children":21226},{":editable":520,":show-in-col":520,"max-height":521},[21227],{"type":17,"tag":275,"props":21228,"children":21230},{"className":21229,"code":6115,"language":432,"meta":8},[527],[21231],{"type":17,"tag":79,"props":21232,"children":21233},{"__ignoreMap":8},[21234],{"type":23,"value":6115},{"type":17,"tag":26,"props":21236,"children":21237},{},[21238,21239,21244,21245,21250,21251,21256,21257,21262,21263,21268],{"type":23,"value":5991},{"type":17,"tag":79,"props":21240,"children":21242},{"className":21241},[],[21243],{"type":23,"value":5205},{"type":23,"value":5360},{"type":17,"tag":79,"props":21246,"children":21248},{"className":21247},[],[21249],{"type":23,"value":5351},{"type":23,"value":6004},{"type":17,"tag":79,"props":21252,"children":21254},{"className":21253},[],[21255],{"type":23,"value":5351},{"type":23,"value":6011},{"type":17,"tag":79,"props":21258,"children":21260},{"className":21259},[],[21261],{"type":23,"value":5961},{"type":23,"value":6149},{"type":17,"tag":79,"props":21264,"children":21266},{"className":21265},[],[21267],{"type":23,"value":5351},{"type":23,"value":6156},{"type":17,"tag":18,"props":21270,"children":21271},{"id":6159},[21272],{"type":23,"value":6162},{"type":17,"tag":26,"props":21274,"children":21275},{},[21276],{"type":23,"value":6167},{"type":17,"tag":26,"props":21278,"children":21279},{},[21280,21281,21286,21287,21292],{"type":23,"value":6172},{"type":17,"tag":79,"props":21282,"children":21284},{"className":21283},[],[21285],{"type":23,"value":2862},{"type":23,"value":6179},{"type":17,"tag":79,"props":21288,"children":21290},{"className":21289},[],[21291],{"type":23,"value":6185},{"type":23,"value":6187},{"type":17,"tag":518,"props":21294,"children":21295},{":editable":520,":show-in-col":520,"max-height":521},[21296],{"type":17,"tag":275,"props":21297,"children":21299},{"className":21298,"code":6194,"language":432,"meta":8},[527],[21300],{"type":17,"tag":79,"props":21301,"children":21302},{"__ignoreMap":8},[21303],{"type":23,"value":6194},{"type":17,"tag":26,"props":21305,"children":21306},{},[21307,21308,21313,21314,21319,21320,21325,21326,21331,21332,21337],{"type":23,"value":6204},{"type":17,"tag":79,"props":21309,"children":21311},{"className":21310},[],[21312],{"type":23,"value":1972},{"type":23,"value":6211},{"type":17,"tag":79,"props":21315,"children":21317},{"className":21316},[],[21318],{"type":23,"value":2862},{"type":23,"value":6179},{"type":17,"tag":79,"props":21321,"children":21323},{"className":21322},[],[21324],{"type":23,"value":6185},{"type":23,"value":6224},{"type":17,"tag":79,"props":21327,"children":21329},{"className":21328},[],[21330],{"type":23,"value":6230},{"type":23,"value":86},{"type":17,"tag":79,"props":21333,"children":21335},{"className":21334},[],[21336],{"type":23,"value":6237},{"type":23,"value":6239},{"type":17,"tag":26,"props":21339,"children":21340},{},[21341,21342,21347,21348,21353,21354,21359,21360,21365],{"type":23,"value":3191},{"type":17,"tag":79,"props":21343,"children":21345},{"className":21344},[],[21346],{"type":23,"value":6230},{"type":23,"value":86},{"type":17,"tag":79,"props":21349,"children":21351},{"className":21350},[],[21352],{"type":23,"value":6237},{"type":23,"value":6256},{"type":17,"tag":79,"props":21355,"children":21357},{"className":21356},[],[21358],{"type":23,"value":6230},{"type":23,"value":6263},{"type":17,"tag":79,"props":21361,"children":21363},{"className":21362},[],[21364],{"type":23,"value":6237},{"type":23,"value":6270},{"type":17,"tag":26,"props":21367,"children":21368},{},[21369],{"type":23,"value":6275},{"type":17,"tag":518,"props":21371,"children":21372},{":editable":520,":show-in-col":520,"max-height":521},[21373],{"type":17,"tag":275,"props":21374,"children":21376},{"className":21375,"code":6282,"language":432,"meta":8},[527],[21377],{"type":17,"tag":79,"props":21378,"children":21379},{"__ignoreMap":8},[21380],{"type":23,"value":6282},{"type":17,"tag":26,"props":21382,"children":21383},{},[21384,21385,21390,21391,21396,21397,21402],{"type":23,"value":6292},{"type":17,"tag":79,"props":21386,"children":21388},{"className":21387},[],[21389],{"type":23,"value":6185},{"type":23,"value":6299},{"type":17,"tag":79,"props":21392,"children":21394},{"className":21393},[],[21395],{"type":23,"value":6305},{"type":23,"value":6307},{"type":17,"tag":79,"props":21398,"children":21400},{"className":21399},[],[21401],{"type":23,"value":6313},{"type":23,"value":1517},{"type":17,"tag":26,"props":21404,"children":21405},{},[21406],{"type":23,"value":6319},{"type":17,"tag":518,"props":21408,"children":21409},{":editable":520,":show-in-col":520,"max-height":521},[21410],{"type":17,"tag":275,"props":21411,"children":21413},{"className":21412,"code":6326,"language":432,"meta":8},[527],[21414],{"type":17,"tag":79,"props":21415,"children":21416},{"__ignoreMap":8},[21417],{"type":23,"value":6326},{"type":17,"tag":26,"props":21419,"children":21420},{},[21421,21422,21427,21428,21433,21434,21439,21440,21445],{"type":23,"value":6336},{"type":17,"tag":79,"props":21423,"children":21425},{"className":21424},[],[21426],{"type":23,"value":6342},{"type":23,"value":6344},{"type":17,"tag":79,"props":21429,"children":21431},{"className":21430},[],[21432],{"type":23,"value":6230},{"type":23,"value":86},{"type":17,"tag":79,"props":21435,"children":21437},{"className":21436},[],[21438],{"type":23,"value":6237},{"type":23,"value":6357},{"type":17,"tag":79,"props":21441,"children":21443},{"className":21442},[],[21444],{"type":23,"value":6363},{"type":23,"value":6365},{"title":8,"searchDepth":11,"depth":11,"links":21447},[21448,21449,21450,21451,21452,21453,21454,21460,21465,21470],{"id":1863,"depth":375,"text":1866},{"id":2083,"depth":375,"text":2086},{"id":2308,"depth":375,"text":2311},{"id":2763,"depth":375,"text":2766},{"id":3000,"depth":11,"text":3003},{"id":3258,"depth":11,"text":3261},{"id":3617,"depth":11,"text":3620,"children":21455},[21456,21457,21458,21459],{"id":3716,"depth":375,"text":3719},{"id":3920,"depth":375,"text":3923},{"id":4023,"depth":375,"text":4026},{"id":4262,"depth":375,"text":4265},{"id":4718,"depth":11,"text":4721,"children":21461},[21462,21463,21464],{"id":4724,"depth":375,"text":4727},{"id":4905,"depth":375,"text":4908},{"id":5079,"depth":375,"text":5082},{"id":5191,"depth":11,"text":5194,"children":21466},[21467,21468,21469],{"id":5217,"depth":375,"text":6388},{"id":5424,"depth":375,"text":6390},{"id":5919,"depth":375,"text":5922},{"id":6159,"depth":11,"text":6162},{"_path":6397,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":6398,"description":395,"navigation":396,"index":1858,"icon":12,"body":21472,"_type":386,"_id":10890,"_source":388,"_file":10891,"_stem":10892,"_extension":391},{"type":14,"children":21473,"toc":25367},[21474,21512,21516,21520,21524,21528,21532,21547,21553,21561,21565,21569,21573,21594,21629,21633,21637,21641,21645,21785,21796,21806,21810,21995,22029,22037,22047,22070,22074,22078,22089,22093,22105,22115,22123,22127,22208,22212,22222,22233,22243,22251,22261,22272,22282,22290,22306,22317,22327,22351,22379,22402,22406,22414,22418,22448,22464,22475,22510,22520,22528,22532,22571,22581,22589,22593,22633,22641,22645,22705,22721,22732,22736,22740,22744],{"type":17,"tag":836,"props":21475,"children":21476},{},[21477,21485],{"type":17,"tag":26,"props":21478,"children":21479},{},[21480,21484],{"type":17,"tag":2020,"props":21481,"children":21482},{},[21483],{"type":23,"value":2024},{"type":23,"value":6412},{"type":17,"tag":235,"props":21486,"children":21487},{},[21488,21500],{"type":17,"tag":36,"props":21489,"children":21490},{},[21491,21492],{"type":23,"value":6420},{"type":17,"tag":2020,"props":21493,"children":21494},{},[21495],{"type":17,"tag":105,"props":21496,"children":21498},{"href":6426,"rel":21497},[109],[21499],{"type":23,"value":6426},{"type":17,"tag":36,"props":21501,"children":21502},{},[21503,21504],{"type":23,"value":6434},{"type":17,"tag":2020,"props":21505,"children":21506},{},[21507],{"type":17,"tag":105,"props":21508,"children":21510},{"href":6440,"rel":21509},[109],[21511],{"type":23,"value":6440},{"type":17,"tag":18,"props":21513,"children":21514},{"id":6446},[21515],{"type":23,"value":6449},{"type":17,"tag":96,"props":21517,"children":21518},{"id":6452},[21519],{"type":23,"value":6455},{"type":17,"tag":26,"props":21521,"children":21522},{},[21523],{"type":23,"value":6460},{"type":17,"tag":26,"props":21525,"children":21526},{},[21527],{"type":23,"value":6465},{"type":17,"tag":26,"props":21529,"children":21530},{},[21531],{"type":23,"value":6470},{"type":17,"tag":32,"props":21533,"children":21534},{},[21535,21539,21543],{"type":17,"tag":36,"props":21536,"children":21537},{},[21538],{"type":23,"value":6478},{"type":17,"tag":36,"props":21540,"children":21541},{},[21542],{"type":23,"value":6483},{"type":17,"tag":36,"props":21544,"children":21545},{},[21546],{"type":23,"value":6488},{"type":17,"tag":26,"props":21548,"children":21549},{},[21550],{"type":17,"tag":714,"props":21551,"children":21552},{"alt":8,"src":6494},[],{"type":17,"tag":275,"props":21554,"children":21556},{"code":6498,"language":6499,"meta":8,"className":21555},[6501],[21557],{"type":17,"tag":79,"props":21558,"children":21559},{"__ignoreMap":8},[21560],{"type":23,"value":6498},{"type":17,"tag":26,"props":21562,"children":21563},{},[21564],{"type":23,"value":6511},{"type":17,"tag":96,"props":21566,"children":21567},{"id":6514},[21568],{"type":23,"value":6517},{"type":17,"tag":26,"props":21570,"children":21571},{},[21572],{"type":23,"value":6522},{"type":17,"tag":235,"props":21574,"children":21575},{},[21576,21586,21590],{"type":17,"tag":36,"props":21577,"children":21578},{},[21579,21580,21585],{"type":23,"value":6530},{"type":17,"tag":79,"props":21581,"children":21583},{"className":21582},[],[21584],{"type":23,"value":6536},{"type":23,"value":6538},{"type":17,"tag":36,"props":21587,"children":21588},{},[21589],{"type":23,"value":6543},{"type":17,"tag":36,"props":21591,"children":21592},{},[21593],{"type":23,"value":6548},{"type":17,"tag":836,"props":21595,"children":21596},{},[21597],{"type":17,"tag":26,"props":21598,"children":21599},{},[21600,21604,21605,21610,21611,21616,21617,21622,21623,21628],{"type":17,"tag":2020,"props":21601,"children":21602},{},[21603],{"type":23,"value":6559},{"type":23,"value":6561},{"type":17,"tag":79,"props":21606,"children":21608},{"className":21607},[],[21609],{"type":23,"value":1997},{"type":23,"value":6568},{"type":17,"tag":79,"props":21612,"children":21614},{"className":21613},[],[21615],{"type":23,"value":1885},{"type":23,"value":6568},{"type":17,"tag":79,"props":21618,"children":21620},{"className":21619},[],[21621],{"type":23,"value":1926},{"type":23,"value":6568},{"type":17,"tag":79,"props":21624,"children":21626},{"className":21625},[],[21627],{"type":23,"value":1965},{"type":23,"value":1517},{"type":17,"tag":18,"props":21630,"children":21631},{"id":6589},[21632],{"type":23,"value":6592},{"type":17,"tag":96,"props":21634,"children":21635},{"id":6595},[21636],{"type":23,"value":6598},{"type":17,"tag":26,"props":21638,"children":21639},{},[21640],{"type":23,"value":6603},{"type":17,"tag":26,"props":21642,"children":21643},{},[21644],{"type":23,"value":6608},{"type":17,"tag":1211,"props":21646,"children":21647},{},[21648,21662],{"type":17,"tag":1215,"props":21649,"children":21650},{},[21651],{"type":17,"tag":1219,"props":21652,"children":21653},{},[21654,21658],{"type":17,"tag":1223,"props":21655,"children":21656},{"align":6620},[21657],{"type":23,"value":6623},{"type":17,"tag":1223,"props":21659,"children":21660},{"align":6620},[21661],{"type":23,"value":1232},{"type":17,"tag":1234,"props":21663,"children":21664},{},[21665,21680,21695,21710,21725,21740,21755,21770],{"type":17,"tag":1219,"props":21666,"children":21667},{},[21668,21676],{"type":17,"tag":1241,"props":21669,"children":21670},{"align":6620},[21671],{"type":17,"tag":79,"props":21672,"children":21674},{"className":21673},[],[21675],{"type":23,"value":6642},{"type":17,"tag":1241,"props":21677,"children":21678},{"align":6620},[21679],{"type":23,"value":6647},{"type":17,"tag":1219,"props":21681,"children":21682},{},[21683,21691],{"type":17,"tag":1241,"props":21684,"children":21685},{"align":6620},[21686],{"type":17,"tag":79,"props":21687,"children":21689},{"className":21688},[],[21690],{"type":23,"value":6659},{"type":17,"tag":1241,"props":21692,"children":21693},{"align":6620},[21694],{"type":23,"value":6664},{"type":17,"tag":1219,"props":21696,"children":21697},{},[21698,21706],{"type":17,"tag":1241,"props":21699,"children":21700},{"align":6620},[21701],{"type":17,"tag":79,"props":21702,"children":21704},{"className":21703},[],[21705],{"type":23,"value":6676},{"type":17,"tag":1241,"props":21707,"children":21708},{"align":6620},[21709],{"type":23,"value":6681},{"type":17,"tag":1219,"props":21711,"children":21712},{},[21713,21721],{"type":17,"tag":1241,"props":21714,"children":21715},{"align":6620},[21716],{"type":17,"tag":79,"props":21717,"children":21719},{"className":21718},[],[21720],{"type":23,"value":6693},{"type":17,"tag":1241,"props":21722,"children":21723},{"align":6620},[21724],{"type":23,"value":6698},{"type":17,"tag":1219,"props":21726,"children":21727},{},[21728,21736],{"type":17,"tag":1241,"props":21729,"children":21730},{"align":6620},[21731],{"type":17,"tag":79,"props":21732,"children":21734},{"className":21733},[],[21735],{"type":23,"value":6710},{"type":17,"tag":1241,"props":21737,"children":21738},{"align":6620},[21739],{"type":23,"value":6715},{"type":17,"tag":1219,"props":21741,"children":21742},{},[21743,21751],{"type":17,"tag":1241,"props":21744,"children":21745},{"align":6620},[21746],{"type":17,"tag":79,"props":21747,"children":21749},{"className":21748},[],[21750],{"type":23,"value":6727},{"type":17,"tag":1241,"props":21752,"children":21753},{"align":6620},[21754],{"type":23,"value":6732},{"type":17,"tag":1219,"props":21756,"children":21757},{},[21758,21766],{"type":17,"tag":1241,"props":21759,"children":21760},{"align":6620},[21761],{"type":17,"tag":79,"props":21762,"children":21764},{"className":21763},[],[21765],{"type":23,"value":6744},{"type":17,"tag":1241,"props":21767,"children":21768},{"align":6620},[21769],{"type":23,"value":6749},{"type":17,"tag":1219,"props":21771,"children":21772},{},[21773,21781],{"type":17,"tag":1241,"props":21774,"children":21775},{"align":6620},[21776],{"type":17,"tag":79,"props":21777,"children":21779},{"className":21778},[],[21780],{"type":23,"value":6761},{"type":17,"tag":1241,"props":21782,"children":21783},{"align":6620},[21784],{"type":23,"value":6766},{"type":17,"tag":6768,"props":21786,"children":21787},{},[21788,21789],{"type":23,"value":6772},{"type":17,"tag":275,"props":21790,"children":21791},{"code":6775},[21792],{"type":17,"tag":79,"props":21793,"children":21794},{"__ignoreMap":8},[21795],{"type":23,"value":6775},{"type":17,"tag":26,"props":21797,"children":21798},{},[21799,21800,21805],{"type":23,"value":6785},{"type":17,"tag":79,"props":21801,"children":21803},{"className":21802},[],[21804],{"type":23,"value":6791},{"type":23,"value":6793},{"type":17,"tag":26,"props":21807,"children":21808},{},[21809],{"type":23,"value":6798},{"type":17,"tag":1211,"props":21811,"children":21812},{},[21813,21827],{"type":17,"tag":1215,"props":21814,"children":21815},{},[21816],{"type":17,"tag":1219,"props":21817,"children":21818},{},[21819,21823],{"type":17,"tag":1223,"props":21820,"children":21821},{"align":6620},[21822],{"type":23,"value":6812},{"type":17,"tag":1223,"props":21824,"children":21825},{"align":6620},[21826],{"type":23,"value":6623},{"type":17,"tag":1234,"props":21828,"children":21829},{},[21830,21845,21860,21875,21890,21905,21920,21935,21950,21965,21980],{"type":17,"tag":1219,"props":21831,"children":21832},{},[21833,21841],{"type":17,"tag":1241,"props":21834,"children":21835},{"align":6620},[21836],{"type":17,"tag":79,"props":21837,"children":21839},{"className":21838},[],[21840],{"type":23,"value":1070},{"type":17,"tag":1241,"props":21842,"children":21843},{"align":6620},[21844],{"type":23,"value":1458},{"type":17,"tag":1219,"props":21846,"children":21847},{},[21848,21856],{"type":17,"tag":1241,"props":21849,"children":21850},{"align":6620},[21851],{"type":17,"tag":79,"props":21852,"children":21854},{"className":21853},[],[21855],{"type":23,"value":5351},{"type":17,"tag":1241,"props":21857,"children":21858},{"align":6620},[21859],{"type":23,"value":6850},{"type":17,"tag":1219,"props":21861,"children":21862},{},[21863,21871],{"type":17,"tag":1241,"props":21864,"children":21865},{"align":6620},[21866],{"type":17,"tag":79,"props":21867,"children":21869},{"className":21868},[],[21870],{"type":23,"value":6862},{"type":17,"tag":1241,"props":21872,"children":21873},{"align":6620},[21874],{"type":23,"value":6867},{"type":17,"tag":1219,"props":21876,"children":21877},{},[21878,21886],{"type":17,"tag":1241,"props":21879,"children":21880},{"align":6620},[21881],{"type":17,"tag":79,"props":21882,"children":21884},{"className":21883},[],[21885],{"type":23,"value":6879},{"type":17,"tag":1241,"props":21887,"children":21888},{"align":6620},[21889],{"type":23,"value":6884},{"type":17,"tag":1219,"props":21891,"children":21892},{},[21893,21901],{"type":17,"tag":1241,"props":21894,"children":21895},{"align":6620},[21896],{"type":17,"tag":79,"props":21897,"children":21899},{"className":21898},[],[21900],{"type":23,"value":6896},{"type":17,"tag":1241,"props":21902,"children":21903},{"align":6620},[21904],{"type":23,"value":6901},{"type":17,"tag":1219,"props":21906,"children":21907},{},[21908,21916],{"type":17,"tag":1241,"props":21909,"children":21910},{"align":6620},[21911],{"type":17,"tag":79,"props":21912,"children":21914},{"className":21913},[],[21915],{"type":23,"value":6913},{"type":17,"tag":1241,"props":21917,"children":21918},{"align":6620},[21919],{"type":23,"value":6918},{"type":17,"tag":1219,"props":21921,"children":21922},{},[21923,21931],{"type":17,"tag":1241,"props":21924,"children":21925},{"align":6620},[21926],{"type":17,"tag":79,"props":21927,"children":21929},{"className":21928},[],[21930],{"type":23,"value":6930},{"type":17,"tag":1241,"props":21932,"children":21933},{"align":6620},[21934],{"type":23,"value":6935},{"type":17,"tag":1219,"props":21936,"children":21937},{},[21938,21946],{"type":17,"tag":1241,"props":21939,"children":21940},{"align":6620},[21941],{"type":17,"tag":79,"props":21942,"children":21944},{"className":21943},[],[21945],{"type":23,"value":6947},{"type":17,"tag":1241,"props":21947,"children":21948},{"align":6620},[21949],{"type":23,"value":6952},{"type":17,"tag":1219,"props":21951,"children":21952},{},[21953,21961],{"type":17,"tag":1241,"props":21954,"children":21955},{"align":6620},[21956],{"type":17,"tag":79,"props":21957,"children":21959},{"className":21958},[],[21960],{"type":23,"value":6964},{"type":17,"tag":1241,"props":21962,"children":21963},{"align":6620},[21964],{"type":23,"value":6969},{"type":17,"tag":1219,"props":21966,"children":21967},{},[21968,21976],{"type":17,"tag":1241,"props":21969,"children":21970},{"align":6620},[21971],{"type":17,"tag":79,"props":21972,"children":21974},{"className":21973},[],[21975],{"type":23,"value":6981},{"type":17,"tag":1241,"props":21977,"children":21978},{"align":6620},[21979],{"type":23,"value":6986},{"type":17,"tag":1219,"props":21981,"children":21982},{},[21983,21991],{"type":17,"tag":1241,"props":21984,"children":21985},{"align":6620},[21986],{"type":17,"tag":79,"props":21987,"children":21989},{"className":21988},[],[21990],{"type":23,"value":6998},{"type":17,"tag":1241,"props":21992,"children":21993},{"align":6620},[21994],{"type":23,"value":7003},{"type":17,"tag":26,"props":21996,"children":21997},{},[21998,21999,22004,22005,22010,22011,22016,22017,22022,22023,22028],{"type":23,"value":7008},{"type":17,"tag":79,"props":22000,"children":22002},{"className":22001},[],[22003],{"type":23,"value":6791},{"type":23,"value":7015},{"type":17,"tag":79,"props":22006,"children":22008},{"className":22007},[],[22009],{"type":23,"value":6791},{"type":23,"value":7022},{"type":17,"tag":79,"props":22012,"children":22014},{"className":22013},[],[22015],{"type":23,"value":7028},{"type":23,"value":7030},{"type":17,"tag":79,"props":22018,"children":22020},{"className":22019},[],[22021],{"type":23,"value":6791},{"type":23,"value":7037},{"type":17,"tag":79,"props":22024,"children":22026},{"className":22025},[],[22027],{"type":23,"value":7043},{"type":23,"value":7045},{"type":17,"tag":275,"props":22030,"children":22032},{"code":7048,"language":432,"meta":8,"className":22031},[527],[22033],{"type":17,"tag":79,"props":22034,"children":22035},{"__ignoreMap":8},[22036],{"type":23,"value":7048},{"type":17,"tag":26,"props":22038,"children":22039},{},[22040,22041,22046],{"type":23,"value":7059},{"type":17,"tag":79,"props":22042,"children":22044},{"className":22043},[],[22045],{"type":23,"value":7065},{"type":23,"value":7067},{"type":17,"tag":235,"props":22048,"children":22049},{},[22050,22060],{"type":17,"tag":36,"props":22051,"children":22052},{},[22053,22054,22059],{"type":23,"value":7075},{"type":17,"tag":79,"props":22055,"children":22057},{"className":22056},[],[22058],{"type":23,"value":7081},{"type":23,"value":7083},{"type":17,"tag":36,"props":22061,"children":22062},{},[22063,22064,22069],{"type":23,"value":7088},{"type":17,"tag":79,"props":22065,"children":22067},{"className":22066},[],[22068],{"type":23,"value":7094},{"type":23,"value":7096},{"type":17,"tag":96,"props":22071,"children":22072},{"id":7099},[22073],{"type":23,"value":7102},{"type":17,"tag":26,"props":22075,"children":22076},{},[22077],{"type":23,"value":7107},{"type":17,"tag":6768,"props":22079,"children":22080},{},[22081,22082],{"type":23,"value":7112},{"type":17,"tag":275,"props":22083,"children":22084},{"code":7115},[22085],{"type":17,"tag":79,"props":22086,"children":22087},{"__ignoreMap":8},[22088],{"type":23,"value":7115},{"type":17,"tag":1561,"props":22090,"children":22091},{"id":7123},[22092],{"type":23,"value":7126},{"type":17,"tag":32,"props":22094,"children":22095},{},[22096],{"type":17,"tag":36,"props":22097,"children":22098},{},[22099,22104],{"type":17,"tag":79,"props":22100,"children":22102},{"className":22101},[],[22103],{"type":23,"value":7138},{"type":23,"value":7140},{"type":17,"tag":26,"props":22106,"children":22107},{},[22108,22109,22114],{"type":23,"value":4106},{"type":17,"tag":79,"props":22110,"children":22112},{"className":22111},[],[22113],{"type":23,"value":7138},{"type":23,"value":7151},{"type":17,"tag":275,"props":22116,"children":22118},{"code":7154,"language":432,"meta":8,"className":22117},[527],[22119],{"type":17,"tag":79,"props":22120,"children":22121},{"__ignoreMap":8},[22122],{"type":23,"value":7154},{"type":17,"tag":26,"props":22124,"children":22125},{},[22126],{"type":23,"value":7165},{"type":17,"tag":235,"props":22128,"children":22129},{},[22130,22139,22148,22169,22178,22199],{"type":17,"tag":36,"props":22131,"children":22132},{},[22133,22138],{"type":17,"tag":79,"props":22134,"children":22136},{"className":22135},[],[22137],{"type":23,"value":7177},{"type":23,"value":7179},{"type":17,"tag":36,"props":22140,"children":22141},{},[22142,22147],{"type":17,"tag":79,"props":22143,"children":22145},{"className":22144},[],[22146],{"type":23,"value":6791},{"type":23,"value":7189},{"type":17,"tag":36,"props":22149,"children":22150},{},[22151,22156,22157,22162,22163,22168],{"type":17,"tag":79,"props":22152,"children":22154},{"className":22153},[],[22155],{"type":23,"value":7198},{"type":23,"value":7200},{"type":17,"tag":79,"props":22158,"children":22160},{"className":22159},[],[22161],{"type":23,"value":2005},{"type":23,"value":7207},{"type":17,"tag":79,"props":22164,"children":22166},{"className":22165},[],[22167],{"type":23,"value":2012},{"type":23,"value":7214},{"type":17,"tag":36,"props":22170,"children":22171},{},[22172,22177],{"type":17,"tag":79,"props":22173,"children":22175},{"className":22174},[],[22176],{"type":23,"value":7223},{"type":23,"value":7225},{"type":17,"tag":36,"props":22179,"children":22180},{},[22181,22186,22187,22192,22193,22198],{"type":17,"tag":79,"props":22182,"children":22184},{"className":22183},[],[22185],{"type":23,"value":7234},{"type":23,"value":7236},{"type":17,"tag":79,"props":22188,"children":22190},{"className":22189},[],[22191],{"type":23,"value":2012},{"type":23,"value":7243},{"type":17,"tag":79,"props":22194,"children":22196},{"className":22195},[],[22197],{"type":23,"value":2005},{"type":23,"value":7250},{"type":17,"tag":36,"props":22200,"children":22201},{},[22202,22207],{"type":17,"tag":79,"props":22203,"children":22205},{"className":22204},[],[22206],{"type":23,"value":7259},{"type":23,"value":7261},{"type":17,"tag":26,"props":22209,"children":22210},{},[22211],{"type":23,"value":7266},{"type":17,"tag":26,"props":22213,"children":22214},{},[22215,22216,22221],{"type":23,"value":7271},{"type":17,"tag":79,"props":22217,"children":22219},{"className":22218},[],[22220],{"type":23,"value":7277},{"type":23,"value":7279},{"type":17,"tag":518,"props":22223,"children":22224},{":editable":520,":show-in-col":520,"max-height":521},[22225],{"type":17,"tag":275,"props":22226,"children":22228},{"code":7285,"language":432,"meta":8,"className":22227},[527],[22229],{"type":17,"tag":79,"props":22230,"children":22231},{"__ignoreMap":8},[22232],{"type":23,"value":7285},{"type":17,"tag":26,"props":22234,"children":22235},{},[22236,22237,22242],{"type":23,"value":7296},{"type":17,"tag":79,"props":22238,"children":22240},{"className":22239},[],[22241],{"type":23,"value":7277},{"type":23,"value":7303},{"type":17,"tag":275,"props":22244,"children":22246},{"code":7306,"language":432,"meta":8,"className":22245},[527],[22247],{"type":17,"tag":79,"props":22248,"children":22249},{"__ignoreMap":8},[22250],{"type":23,"value":7306},{"type":17,"tag":26,"props":22252,"children":22253},{},[22254,22255,22260],{"type":23,"value":7317},{"type":17,"tag":79,"props":22256,"children":22258},{"className":22257},[],[22259],{"type":23,"value":7277},{"type":23,"value":7324},{"type":17,"tag":518,"props":22262,"children":22263},{":editable":520,":show-in-col":520,"max-height":521},[22264],{"type":17,"tag":275,"props":22265,"children":22267},{"code":7330,"language":432,"meta":8,"className":22266},[527],[22268],{"type":17,"tag":79,"props":22269,"children":22270},{"__ignoreMap":8},[22271],{"type":23,"value":7330},{"type":17,"tag":26,"props":22273,"children":22274},{},[22275,22276,22281],{"type":23,"value":7341},{"type":17,"tag":79,"props":22277,"children":22279},{"className":22278},[],[22280],{"type":23,"value":6791},{"type":23,"value":7348},{"type":17,"tag":275,"props":22283,"children":22285},{"code":7351,"language":432,"meta":8,"className":22284},[527],[22286],{"type":17,"tag":79,"props":22287,"children":22288},{"__ignoreMap":8},[22289],{"type":23,"value":7351},{"type":17,"tag":26,"props":22291,"children":22292},{},[22293,22294,22299,22300,22305],{"type":23,"value":7362},{"type":17,"tag":79,"props":22295,"children":22297},{"className":22296},[],[22298],{"type":23,"value":6791},{"type":23,"value":7369},{"type":17,"tag":79,"props":22301,"children":22303},{"className":22302},[],[22304],{"type":23,"value":7277},{"type":23,"value":7324},{"type":17,"tag":518,"props":22307,"children":22308},{":editable":520,":show-in-col":520,"max-height":521},[22309],{"type":17,"tag":275,"props":22310,"children":22312},{"code":7381,"language":432,"meta":8,"className":22311},[527],[22313],{"type":17,"tag":79,"props":22314,"children":22315},{"__ignoreMap":8},[22316],{"type":23,"value":7381},{"type":17,"tag":26,"props":22318,"children":22319},{},[22320,22321,22326],{"type":23,"value":7392},{"type":17,"tag":79,"props":22322,"children":22324},{"className":22323},[],[22325],{"type":23,"value":7138},{"type":23,"value":7399},{"type":17,"tag":32,"props":22328,"children":22329},{"start":11},[22330],{"type":17,"tag":36,"props":22331,"children":22332},{},[22333,22338,22339,22344,22345,22350],{"type":17,"tag":79,"props":22334,"children":22336},{"className":22335},[],[22337],{"type":23,"value":7411},{"type":23,"value":1895},{"type":17,"tag":79,"props":22340,"children":22342},{"className":22341},[],[22343],{"type":23,"value":7418},{"type":23,"value":3281},{"type":17,"tag":79,"props":22346,"children":22348},{"className":22347},[],[22349],{"type":23,"value":7425},{"type":23,"value":7427},{"type":17,"tag":26,"props":22352,"children":22353},{},[22354,22355,22360,22361,22366,22367,22372,22373,22378],{"type":23,"value":7432},{"type":17,"tag":79,"props":22356,"children":22358},{"className":22357},[],[22359],{"type":23,"value":7138},{"type":23,"value":86},{"type":17,"tag":79,"props":22362,"children":22364},{"className":22363},[],[22365],{"type":23,"value":7444},{"type":23,"value":7446},{"type":17,"tag":79,"props":22368,"children":22370},{"className":22369},[],[22371],{"type":23,"value":7411},{"type":23,"value":86},{"type":17,"tag":79,"props":22374,"children":22376},{"className":22375},[],[22377],{"type":23,"value":7418},{"type":23,"value":7459},{"type":17,"tag":235,"props":22380,"children":22381},{},[22382,22392],{"type":17,"tag":36,"props":22383,"children":22384},{},[22385,22386,22391],{"type":23,"value":3191},{"type":17,"tag":79,"props":22387,"children":22389},{"className":22388},[],[22390],{"type":23,"value":7411},{"type":23,"value":7473},{"type":17,"tag":36,"props":22393,"children":22394},{},[22395,22396,22401],{"type":23,"value":3191},{"type":17,"tag":79,"props":22397,"children":22399},{"className":22398},[],[22400],{"type":23,"value":7418},{"type":23,"value":7484},{"type":17,"tag":26,"props":22403,"children":22404},{},[22405],{"type":23,"value":7489},{"type":17,"tag":275,"props":22407,"children":22409},{"code":7492,"language":432,"meta":8,"className":22408},[527],[22410],{"type":17,"tag":79,"props":22411,"children":22412},{"__ignoreMap":8},[22413],{"type":23,"value":7492},{"type":17,"tag":26,"props":22415,"children":22416},{},[22417],{"type":23,"value":7165},{"type":17,"tag":235,"props":22419,"children":22420},{},[22421,22430,22439],{"type":17,"tag":36,"props":22422,"children":22423},{},[22424,22429],{"type":17,"tag":79,"props":22425,"children":22427},{"className":22426},[],[22428],{"type":23,"value":7514},{"type":23,"value":7516},{"type":17,"tag":36,"props":22431,"children":22432},{},[22433,22438],{"type":17,"tag":79,"props":22434,"children":22436},{"className":22435},[],[22437],{"type":23,"value":6791},{"type":23,"value":7189},{"type":17,"tag":36,"props":22440,"children":22441},{},[22442,22447],{"type":17,"tag":79,"props":22443,"children":22445},{"className":22444},[],[22446],{"type":23,"value":7223},{"type":23,"value":7535},{"type":17,"tag":26,"props":22449,"children":22450},{},[22451,22452,22457,22458,22463],{"type":23,"value":7540},{"type":17,"tag":79,"props":22453,"children":22455},{"className":22454},[],[22456],{"type":23,"value":7411},{"type":23,"value":86},{"type":17,"tag":79,"props":22459,"children":22461},{"className":22460},[],[22462],{"type":23,"value":7418},{"type":23,"value":7553},{"type":17,"tag":518,"props":22465,"children":22466},{":editable":520,":show-in-col":520,"max-height":521},[22467],{"type":17,"tag":275,"props":22468,"children":22470},{"code":7559,"language":432,"meta":8,"className":22469},[527],[22471],{"type":17,"tag":79,"props":22472,"children":22473},{"__ignoreMap":8},[22474],{"type":23,"value":7559},{"type":17,"tag":836,"props":22476,"children":22477},{},[22478],{"type":17,"tag":26,"props":22479,"children":22480},{},[22481,22485,22486,22491,22492,22497,22498,22503,22504,22509],{"type":17,"tag":2020,"props":22482,"children":22483},{},[22484],{"type":23,"value":2024},{"type":23,"value":7577},{"type":17,"tag":79,"props":22487,"children":22489},{"className":22488},[],[22490],{"type":23,"value":7418},{"type":23,"value":7584},{"type":17,"tag":79,"props":22493,"children":22495},{"className":22494},[],[22496],{"type":23,"value":7590},{"type":23,"value":7592},{"type":17,"tag":79,"props":22499,"children":22501},{"className":22500},[],[22502],{"type":23,"value":7590},{"type":23,"value":7599},{"type":17,"tag":79,"props":22505,"children":22507},{"className":22506},[],[22508],{"type":23,"value":7418},{"type":23,"value":7606},{"type":17,"tag":26,"props":22511,"children":22512},{},[22513,22514,22519],{"type":23,"value":7611},{"type":17,"tag":79,"props":22515,"children":22517},{"className":22516},[],[22518],{"type":23,"value":7425},{"type":23,"value":7618},{"type":17,"tag":275,"props":22521,"children":22523},{"code":7621,"language":432,"meta":8,"className":22522},[527],[22524],{"type":17,"tag":79,"props":22525,"children":22526},{"__ignoreMap":8},[22527],{"type":23,"value":7621},{"type":17,"tag":26,"props":22529,"children":22530},{},[22531],{"type":23,"value":7165},{"type":17,"tag":235,"props":22533,"children":22534},{},[22535,22544,22553,22562],{"type":17,"tag":36,"props":22536,"children":22537},{},[22538,22543],{"type":17,"tag":79,"props":22539,"children":22541},{"className":22540},[],[22542],{"type":23,"value":7514},{"type":23,"value":7644},{"type":17,"tag":36,"props":22545,"children":22546},{},[22547,22552],{"type":17,"tag":79,"props":22548,"children":22550},{"className":22549},[],[22551],{"type":23,"value":7653},{"type":23,"value":7655},{"type":17,"tag":36,"props":22554,"children":22555},{},[22556,22561],{"type":17,"tag":79,"props":22557,"children":22559},{"className":22558},[],[22560],{"type":23,"value":6791},{"type":23,"value":7189},{"type":17,"tag":36,"props":22563,"children":22564},{},[22565,22570],{"type":17,"tag":79,"props":22566,"children":22568},{"className":22567},[],[22569],{"type":23,"value":7223},{"type":23,"value":7535},{"type":17,"tag":26,"props":22572,"children":22573},{},[22574,22575,22580],{"type":23,"value":7678},{"type":17,"tag":79,"props":22576,"children":22578},{"className":22577},[],[22579],{"type":23,"value":7425},{"type":23,"value":2068},{"type":17,"tag":275,"props":22582,"children":22584},{"code":7687,"language":432,"meta":8,"className":22583},[527],[22585],{"type":17,"tag":79,"props":22586,"children":22587},{"__ignoreMap":8},[22588],{"type":23,"value":7687},{"type":17,"tag":1561,"props":22590,"children":22591},{"id":7696},[22592],{"type":23,"value":7699},{"type":17,"tag":26,"props":22594,"children":22595},{},[22596,22597,22602,22603,22608,22609,22614,22615,22620,22621,22626,22627,22632],{"type":23,"value":5438},{"type":17,"tag":79,"props":22598,"children":22600},{"className":22599},[],[22601],{"type":23,"value":7411},{"type":23,"value":1895},{"type":17,"tag":79,"props":22604,"children":22606},{"className":22605},[],[22607],{"type":23,"value":7418},{"type":23,"value":1895},{"type":17,"tag":79,"props":22610,"children":22612},{"className":22611},[],[22613],{"type":23,"value":7590},{"type":23,"value":3281},{"type":17,"tag":79,"props":22616,"children":22618},{"className":22617},[],[22619],{"type":23,"value":7425},{"type":23,"value":7728},{"type":17,"tag":79,"props":22622,"children":22624},{"className":22623},[],[22625],{"type":23,"value":7734},{"type":23,"value":86},{"type":17,"tag":79,"props":22628,"children":22630},{"className":22629},[],[22631],{"type":23,"value":7741},{"type":23,"value":7743},{"type":17,"tag":275,"props":22634,"children":22636},{"code":7746,"language":432,"meta":8,"className":22635},[527],[22637],{"type":17,"tag":79,"props":22638,"children":22639},{"__ignoreMap":8},[22640],{"type":23,"value":7746},{"type":17,"tag":26,"props":22642,"children":22643},{},[22644],{"type":23,"value":7165},{"type":17,"tag":235,"props":22646,"children":22647},{},[22648,22657,22666,22675,22684],{"type":17,"tag":36,"props":22649,"children":22650},{},[22651,22656],{"type":17,"tag":79,"props":22652,"children":22654},{"className":22653},[],[22655],{"type":23,"value":105},{"type":23,"value":7769},{"type":17,"tag":36,"props":22658,"children":22659},{},[22660,22665],{"type":17,"tag":79,"props":22661,"children":22663},{"className":22662},[],[22664],{"type":23,"value":7653},{"type":23,"value":7655},{"type":17,"tag":36,"props":22667,"children":22668},{},[22669,22674],{"type":17,"tag":79,"props":22670,"children":22672},{"className":22671},[],[22673],{"type":23,"value":6791},{"type":23,"value":7189},{"type":17,"tag":36,"props":22676,"children":22677},{},[22678,22683],{"type":17,"tag":79,"props":22679,"children":22681},{"className":22680},[],[22682],{"type":23,"value":7223},{"type":23,"value":7797},{"type":17,"tag":36,"props":22685,"children":22686},{},[22687,22692,22693,22698,22699,22704],{"type":17,"tag":79,"props":22688,"children":22690},{"className":22689},[],[22691],{"type":23,"value":7234},{"type":23,"value":7236},{"type":17,"tag":79,"props":22694,"children":22696},{"className":22695},[],[22697],{"type":23,"value":2005},{"type":23,"value":7813},{"type":17,"tag":79,"props":22700,"children":22702},{"className":22701},[],[22703],{"type":23,"value":2012},{"type":23,"value":7820},{"type":17,"tag":26,"props":22706,"children":22707},{},[22708,22709,22714,22715,22720],{"type":23,"value":7540},{"type":17,"tag":79,"props":22710,"children":22712},{"className":22711},[],[22713],{"type":23,"value":7734},{"type":23,"value":86},{"type":17,"tag":79,"props":22716,"children":22718},{"className":22717},[],[22719],{"type":23,"value":7741},{"type":23,"value":7553},{"type":17,"tag":518,"props":22722,"children":22723},{":editable":520,":show-in-col":520,"max-height":521},[22724],{"type":17,"tag":275,"props":22725,"children":22727},{"code":7842,"language":432,"meta":8,"className":22726},[527],[22728],{"type":17,"tag":79,"props":22729,"children":22730},{"__ignoreMap":8},[22731],{"type":23,"value":7842},{"type":17,"tag":18,"props":22733,"children":22734},{"id":7851},[22735],{"type":23,"value":7854},{"type":17,"tag":26,"props":22737,"children":22738},{},[22739],{"type":23,"value":7859},{"type":17,"tag":26,"props":22741,"children":22742},{},[22743],{"type":23,"value":7864},{"type":17,"tag":6768,"props":22745,"children":22746},{},[22747,22748,22772,22780,22816,22824,22860,22868,22892,22900,22904,22908,22912,22916,22927,22931,22935,22983,22987,22998,23011,23022,23035,23046,23059,23067,23080,23088,23101,23109,23113,23129,23141,23151,23159,23163,23214,23224,23235,23247,23257,23265,23269,23290,23300,23311,23315,23319,23329,23333,23337,23341,23352,23356,23371],{"type":23,"value":7869},{"type":17,"tag":235,"props":22749,"children":22750},{},[22751],{"type":17,"tag":36,"props":22752,"children":22753},{},[22754,22759,22760,22765,22766,22771],{"type":17,"tag":79,"props":22755,"children":22757},{"className":22756},[],[22758],{"type":23,"value":7881},{"type":23,"value":7883},{"type":17,"tag":79,"props":22761,"children":22763},{"className":22762},[],[22764],{"type":23,"value":7889},{"type":23,"value":7891},{"type":17,"tag":79,"props":22767,"children":22769},{"className":22768},[],[22770],{"type":23,"value":7889},{"type":23,"value":7898},{"type":17,"tag":275,"props":22773,"children":22775},{"code":7901,"language":432,"meta":8,"className":22774},[527],[22776],{"type":17,"tag":79,"props":22777,"children":22778},{"__ignoreMap":8},[22779],{"type":23,"value":7901},{"type":17,"tag":235,"props":22781,"children":22782},{},[22783],{"type":17,"tag":36,"props":22784,"children":22785},{},[22786,22791,22792,22797,22798,22803,22804,22809,22810,22815],{"type":17,"tag":79,"props":22787,"children":22789},{"className":22788},[],[22790],{"type":23,"value":7919},{"type":23,"value":7921},{"type":17,"tag":79,"props":22793,"children":22795},{"className":22794},[],[22796],{"type":23,"value":7927},{"type":23,"value":7929},{"type":17,"tag":79,"props":22799,"children":22801},{"className":22800},[],[22802],{"type":23,"value":6913},{"type":23,"value":7936},{"type":17,"tag":79,"props":22805,"children":22807},{"className":22806},[],[22808],{"type":23,"value":7514},{"type":23,"value":7943},{"type":17,"tag":79,"props":22811,"children":22813},{"className":22812},[],[22814],{"type":23,"value":7949},{"type":23,"value":1517},{"type":17,"tag":275,"props":22817,"children":22819},{"code":7953,"language":432,"meta":8,"className":22818},[527],[22820],{"type":17,"tag":79,"props":22821,"children":22822},{"__ignoreMap":8},[22823],{"type":23,"value":7953},{"type":17,"tag":235,"props":22825,"children":22826},{},[22827],{"type":17,"tag":36,"props":22828,"children":22829},{},[22830,22835,22836,22841,22842,22847,22848,22853,22854,22859],{"type":17,"tag":79,"props":22831,"children":22833},{"className":22832},[],[22834],{"type":23,"value":7971},{"type":23,"value":7973},{"type":17,"tag":79,"props":22837,"children":22839},{"className":22838},[],[22840],{"type":23,"value":7514},{"type":23,"value":7980},{"type":17,"tag":79,"props":22843,"children":22845},{"className":22844},[],[22846],{"type":23,"value":7986},{"type":23,"value":1895},{"type":17,"tag":79,"props":22849,"children":22851},{"className":22850},[],[22852],{"type":23,"value":7993},{"type":23,"value":2796},{"type":17,"tag":79,"props":22855,"children":22857},{"className":22856},[],[22858],{"type":23,"value":8000},{"type":23,"value":1517},{"type":17,"tag":275,"props":22861,"children":22863},{"code":8004,"language":432,"meta":8,"className":22862},[527],[22864],{"type":17,"tag":79,"props":22865,"children":22866},{"__ignoreMap":8},[22867],{"type":23,"value":8004},{"type":17,"tag":235,"props":22869,"children":22870},{},[22871],{"type":17,"tag":36,"props":22872,"children":22873},{},[22874,22879,22880,22885,22886,22891],{"type":17,"tag":79,"props":22875,"children":22877},{"className":22876},[],[22878],{"type":23,"value":8022},{"type":23,"value":8024},{"type":17,"tag":79,"props":22881,"children":22883},{"className":22882},[],[22884],{"type":23,"value":8030},{"type":23,"value":1895},{"type":17,"tag":79,"props":22887,"children":22889},{"className":22888},[],[22890],{"type":23,"value":6744},{"type":23,"value":2171},{"type":17,"tag":275,"props":22893,"children":22895},{"code":8040,"language":432,"meta":8,"className":22894},[527],[22896],{"type":17,"tag":79,"props":22897,"children":22898},{"__ignoreMap":8},[22899],{"type":23,"value":8040},{"type":17,"tag":26,"props":22901,"children":22902},{},[22903],{"type":23,"value":8051},{"type":17,"tag":18,"props":22905,"children":22906},{"id":8054},[22907],{"type":23,"value":8057},{"type":17,"tag":96,"props":22909,"children":22910},{"id":8060},[22911],{"type":23,"value":8063},{"type":17,"tag":26,"props":22913,"children":22914},{},[22915],{"type":23,"value":8068},{"type":17,"tag":235,"props":22917,"children":22918},{},[22919,22923],{"type":17,"tag":36,"props":22920,"children":22921},{},[22922],{"type":23,"value":8076},{"type":17,"tag":36,"props":22924,"children":22925},{},[22926],{"type":23,"value":8081},{"type":17,"tag":1561,"props":22928,"children":22929},{"id":8084},[22930],{"type":23,"value":8087},{"type":17,"tag":26,"props":22932,"children":22933},{},[22934],{"type":23,"value":8092},{"type":17,"tag":235,"props":22936,"children":22937},{},[22938,22947,22956,22965,22974],{"type":17,"tag":36,"props":22939,"children":22940},{},[22941,22946],{"type":17,"tag":79,"props":22942,"children":22944},{"className":22943},[],[22945],{"type":23,"value":4112},{"type":23,"value":8105},{"type":17,"tag":36,"props":22948,"children":22949},{},[22950,22955],{"type":17,"tag":79,"props":22951,"children":22953},{"className":22952},[],[22954],{"type":23,"value":8114},{"type":23,"value":8116},{"type":17,"tag":36,"props":22957,"children":22958},{},[22959,22964],{"type":17,"tag":79,"props":22960,"children":22962},{"className":22961},[],[22963],{"type":23,"value":8125},{"type":23,"value":8127},{"type":17,"tag":36,"props":22966,"children":22967},{},[22968,22973],{"type":17,"tag":79,"props":22969,"children":22971},{"className":22970},[],[22972],{"type":23,"value":8136},{"type":23,"value":8138},{"type":17,"tag":36,"props":22975,"children":22976},{},[22977,22982],{"type":17,"tag":79,"props":22978,"children":22980},{"className":22979},[],[22981],{"type":23,"value":8147},{"type":23,"value":8149},{"type":17,"tag":26,"props":22984,"children":22985},{},[22986],{"type":23,"value":8154},{"type":17,"tag":518,"props":22988,"children":22989},{":editable":520,":show-in-col":520,"max-height":521},[22990],{"type":17,"tag":275,"props":22991,"children":22993},{"code":8160,"language":432,"meta":8,"className":22992},[527],[22994],{"type":17,"tag":79,"props":22995,"children":22996},{"__ignoreMap":8},[22997],{"type":23,"value":8160},{"type":17,"tag":32,"props":22999,"children":23000},{},[23001],{"type":17,"tag":36,"props":23002,"children":23003},{},[23004,23005,23010],{"type":23,"value":8174},{"type":17,"tag":79,"props":23006,"children":23008},{"className":23007},[],[23009],{"type":23,"value":4112},{"type":23,"value":8181},{"type":17,"tag":518,"props":23012,"children":23013},{":editable":520,":show-in-col":520,"max-height":521},[23014],{"type":17,"tag":275,"props":23015,"children":23017},{"code":8187,"language":432,"meta":8,"className":23016},[527],[23018],{"type":17,"tag":79,"props":23019,"children":23020},{"__ignoreMap":8},[23021],{"type":23,"value":8187},{"type":17,"tag":32,"props":23023,"children":23024},{"start":11},[23025],{"type":17,"tag":36,"props":23026,"children":23027},{},[23028,23029,23034],{"type":23,"value":8201},{"type":17,"tag":79,"props":23030,"children":23032},{"className":23031},[],[23033],{"type":23,"value":8114},{"type":23,"value":8208},{"type":17,"tag":518,"props":23036,"children":23037},{":editable":520,":show-in-col":520,"max-height":521},[23038],{"type":17,"tag":275,"props":23039,"children":23041},{"code":8214,"language":432,"meta":8,"className":23040},[527],[23042],{"type":17,"tag":79,"props":23043,"children":23044},{"__ignoreMap":8},[23045],{"type":23,"value":8214},{"type":17,"tag":32,"props":23047,"children":23048},{"start":375},[23049],{"type":17,"tag":36,"props":23050,"children":23051},{},[23052,23053,23058],{"type":23,"value":8228},{"type":17,"tag":79,"props":23054,"children":23056},{"className":23055},[],[23057],{"type":23,"value":8125},{"type":23,"value":8235},{"type":17,"tag":275,"props":23060,"children":23062},{"code":8238,"language":432,"meta":8,"className":23061},[527],[23063],{"type":17,"tag":79,"props":23064,"children":23065},{"__ignoreMap":8},[23066],{"type":23,"value":8238},{"type":17,"tag":32,"props":23068,"children":23069},{"start":1858},[23070],{"type":17,"tag":36,"props":23071,"children":23072},{},[23073,23074,23079],{"type":23,"value":8252},{"type":17,"tag":79,"props":23075,"children":23077},{"className":23076},[],[23078],{"type":23,"value":8136},{"type":23,"value":8259},{"type":17,"tag":275,"props":23081,"children":23083},{"code":8262,"language":432,"meta":8,"className":23082},[527],[23084],{"type":17,"tag":79,"props":23085,"children":23086},{"__ignoreMap":8},[23087],{"type":23,"value":8262},{"type":17,"tag":32,"props":23089,"children":23090},{"start":8271},[23091],{"type":17,"tag":36,"props":23092,"children":23093},{},[23094,23095,23100],{"type":23,"value":8277},{"type":17,"tag":79,"props":23096,"children":23098},{"className":23097},[],[23099],{"type":23,"value":8147},{"type":23,"value":8284},{"type":17,"tag":275,"props":23102,"children":23104},{"code":8287,"language":432,"meta":8,"className":23103},[527],[23105],{"type":17,"tag":79,"props":23106,"children":23107},{"__ignoreMap":8},[23108],{"type":23,"value":8287},{"type":17,"tag":1561,"props":23110,"children":23111},{"id":8296},[23112],{"type":23,"value":8299},{"type":17,"tag":26,"props":23114,"children":23115},{},[23116,23117,23122,23123,23128],{"type":23,"value":8304},{"type":17,"tag":79,"props":23118,"children":23120},{"className":23119},[],[23121],{"type":23,"value":8310},{"type":23,"value":8312},{"type":17,"tag":79,"props":23124,"children":23126},{"className":23125},[],[23127],{"type":23,"value":8318},{"type":23,"value":1517},{"type":17,"tag":32,"props":23130,"children":23131},{},[23132],{"type":17,"tag":36,"props":23133,"children":23134},{},[23135,23140],{"type":17,"tag":79,"props":23136,"children":23138},{"className":23137},[],[23139],{"type":23,"value":8310},{"type":23,"value":7140},{"type":17,"tag":26,"props":23142,"children":23143},{},[23144,23145,23150],{"type":23,"value":3191},{"type":17,"tag":79,"props":23146,"children":23148},{"className":23147},[],[23149],{"type":23,"value":8310},{"type":23,"value":8342},{"type":17,"tag":275,"props":23152,"children":23154},{"code":8345,"language":432,"meta":8,"className":23153},[527],[23155],{"type":17,"tag":79,"props":23156,"children":23157},{"__ignoreMap":8},[23158],{"type":23,"value":8345},{"type":17,"tag":26,"props":23160,"children":23161},{},[23162],{"type":23,"value":7165},{"type":17,"tag":235,"props":23164,"children":23165},{},[23166,23175,23190,23199],{"type":17,"tag":36,"props":23167,"children":23168},{},[23169,23174],{"type":17,"tag":79,"props":23170,"children":23172},{"className":23171},[],[23173],{"type":23,"value":105},{"type":23,"value":8368},{"type":17,"tag":36,"props":23176,"children":23177},{},[23178,23183,23184,23189],{"type":17,"tag":79,"props":23179,"children":23181},{"className":23180},[],[23182],{"type":23,"value":8377},{"type":23,"value":8379},{"type":17,"tag":79,"props":23185,"children":23187},{"className":23186},[],[23188],{"type":23,"value":8385},{"type":23,"value":8387},{"type":17,"tag":36,"props":23191,"children":23192},{},[23193,23198],{"type":17,"tag":79,"props":23194,"children":23196},{"className":23195},[],[23197],{"type":23,"value":6791},{"type":23,"value":7189},{"type":17,"tag":36,"props":23200,"children":23201},{},[23202,23207,23208,23213],{"type":17,"tag":79,"props":23203,"children":23205},{"className":23204},[],[23206],{"type":23,"value":8405},{"type":23,"value":7200},{"type":17,"tag":79,"props":23209,"children":23211},{"className":23210},[],[23212],{"type":23,"value":2005},{"type":23,"value":8413},{"type":17,"tag":26,"props":23215,"children":23216},{},[23217,23218,23223],{"type":23,"value":8418},{"type":17,"tag":79,"props":23219,"children":23221},{"className":23220},[],[23222],{"type":23,"value":8310},{"type":23,"value":8425},{"type":17,"tag":518,"props":23225,"children":23226},{":editable":520,":show-in-col":520,"max-height":521},[23227],{"type":17,"tag":275,"props":23228,"children":23230},{"code":8431,"language":432,"meta":8,"className":23229},[527],[23231],{"type":17,"tag":79,"props":23232,"children":23233},{"__ignoreMap":8},[23234],{"type":23,"value":8431},{"type":17,"tag":32,"props":23236,"children":23237},{"start":11},[23238],{"type":17,"tag":36,"props":23239,"children":23240},{},[23241,23246],{"type":17,"tag":79,"props":23242,"children":23244},{"className":23243},[],[23245],{"type":23,"value":8318},{"type":23,"value":7140},{"type":17,"tag":26,"props":23248,"children":23249},{},[23250,23251,23256],{"type":23,"value":3191},{"type":17,"tag":79,"props":23252,"children":23254},{"className":23253},[],[23255],{"type":23,"value":8318},{"type":23,"value":8460},{"type":17,"tag":275,"props":23258,"children":23260},{"code":8463,"language":432,"meta":8,"className":23259},[527],[23261],{"type":17,"tag":79,"props":23262,"children":23263},{"__ignoreMap":8},[23264],{"type":23,"value":8463},{"type":17,"tag":26,"props":23266,"children":23267},{},[23268],{"type":23,"value":7165},{"type":17,"tag":235,"props":23270,"children":23271},{},[23272,23281],{"type":17,"tag":36,"props":23273,"children":23274},{},[23275,23280],{"type":17,"tag":79,"props":23276,"children":23278},{"className":23277},[],[23279],{"type":23,"value":105},{"type":23,"value":8368},{"type":17,"tag":36,"props":23282,"children":23283},{},[23284,23289],{"type":17,"tag":79,"props":23285,"children":23287},{"className":23286},[],[23288],{"type":23,"value":8494},{"type":23,"value":8496},{"type":17,"tag":26,"props":23291,"children":23292},{},[23293,23294,23299],{"type":23,"value":8418},{"type":17,"tag":79,"props":23295,"children":23297},{"className":23296},[],[23298],{"type":23,"value":8318},{"type":23,"value":8507},{"type":17,"tag":518,"props":23301,"children":23302},{":editable":520,":show-in-col":520,"max-height":521},[23303],{"type":17,"tag":275,"props":23304,"children":23306},{"code":8513,"language":432,"meta":8,"className":23305},[527],[23307],{"type":17,"tag":79,"props":23308,"children":23309},{"__ignoreMap":8},[23310],{"type":23,"value":8513},{"type":17,"tag":96,"props":23312,"children":23313},{"id":8522},[23314],{"type":23,"value":8525},{"type":17,"tag":26,"props":23316,"children":23317},{},[23318],{"type":23,"value":8530},{"type":17,"tag":26,"props":23320,"children":23321},{},[23322,23323,23328],{"type":23,"value":8535},{"type":17,"tag":79,"props":23324,"children":23326},{"className":23325},[],[23327],{"type":23,"value":8541},{"type":23,"value":8543},{"type":17,"tag":26,"props":23330,"children":23331},{},[23332],{"type":23,"value":8548},{"type":17,"tag":26,"props":23334,"children":23335},{},[23336],{"type":23,"value":8553},{"type":17,"tag":26,"props":23338,"children":23339},{},[23340],{"type":23,"value":8558},{"type":17,"tag":518,"props":23342,"children":23343},{":editable":520,":show-in-col":520,"max-height":521},[23344],{"type":17,"tag":275,"props":23345,"children":23347},{"code":8564,"language":432,"meta":8,"className":23346},[527],[23348],{"type":17,"tag":79,"props":23349,"children":23350},{"__ignoreMap":8},[23351],{"type":23,"value":8564},{"type":17,"tag":26,"props":23353,"children":23354},{},[23355],{"type":23,"value":8575},{"type":17,"tag":235,"props":23357,"children":23358},{},[23359,23363,23367],{"type":17,"tag":36,"props":23360,"children":23361},{},[23362],{"type":23,"value":8583},{"type":17,"tag":36,"props":23364,"children":23365},{},[23366],{"type":23,"value":8588},{"type":17,"tag":36,"props":23368,"children":23369},{},[23370],{"type":23,"value":8593},{"type":17,"tag":6768,"props":23372,"children":23373},{},[23374,23375,23379,23383,23387,23395,23417,23421,23429,23439,23443,23451,23455,23459,23481,23492,23532,23540,23562,23584,23588,23599,23603,23614,23618,23629,23651,23659,23669,23677,23687,23708,23712,23716,23732,23736,23747,23781,23803,23811,23815,23819,23823,23833,23849,23857,23861,23891,23901,23912,23916,23932,23955,23971,23983,23999,24007,24011,24032,24042,24053,24065,24081,24089,24099,24110,24114,24118,24139,24151,24161,24169,24173,24194,24204,24215,24227,24237,24245,24249,24276,24286,24297,24301,24305,24321,24329,24333,24354,24364,24375,24379,24395,24403,24407,24437,24447,24458,24462,24472,24494,24504,24520,24528,24532,24577,24587,24598,24608,24624,24632,24642,24653,24663,24673,24695,24703,24707,24728,24738,24749,24753,24757,24767,24783,24791,24795,24864,24874,24885,24895,24911,24919,24929,24940,24950,24966,24974,24978,25038,25048,25059,25069,25085,25093,25097,25163,25173,25184,25194,25210,25218,25222,25291,25301,25312,25322,25338,25346,25356],{"type":23,"value":8598},{"type":17,"tag":26,"props":23376,"children":23377},{},[23378],{"type":23,"value":8603},{"type":17,"tag":26,"props":23380,"children":23381},{},[23382],{"type":23,"value":8608},{"type":17,"tag":26,"props":23384,"children":23385},{},[23386],{"type":23,"value":8613},{"type":17,"tag":275,"props":23388,"children":23390},{"code":8616,"language":432,"meta":8,"className":23389},[527],[23391],{"type":17,"tag":79,"props":23392,"children":23393},{"__ignoreMap":8},[23394],{"type":23,"value":8616},{"type":17,"tag":26,"props":23396,"children":23397},{},[23398,23399,23404,23405,23410,23411,23416],{"type":23,"value":4351},{"type":17,"tag":79,"props":23400,"children":23402},{"className":23401},[],[23403],{"type":23,"value":1070},{"type":23,"value":8633},{"type":17,"tag":79,"props":23406,"children":23408},{"className":23407},[],[23409],{"type":23,"value":105},{"type":23,"value":8640},{"type":17,"tag":79,"props":23412,"children":23414},{"className":23413},[],[23415],{"type":23,"value":1070},{"type":23,"value":1517},{"type":17,"tag":26,"props":23418,"children":23419},{},[23420],{"type":23,"value":8651},{"type":17,"tag":275,"props":23422,"children":23424},{"code":8654,"language":432,"meta":8,"className":23423},[527],[23425],{"type":17,"tag":79,"props":23426,"children":23427},{"__ignoreMap":8},[23428],{"type":23,"value":8654},{"type":17,"tag":26,"props":23430,"children":23431},{},[23432,23433,23438],{"type":23,"value":8665},{"type":17,"tag":79,"props":23434,"children":23436},{"className":23435},[],[23437],{"type":23,"value":105},{"type":23,"value":8672},{"type":17,"tag":26,"props":23440,"children":23441},{},[23442],{"type":23,"value":8677},{"type":17,"tag":275,"props":23444,"children":23446},{"code":8680,"language":432,"meta":8,"className":23445},[527],[23447],{"type":17,"tag":79,"props":23448,"children":23449},{"__ignoreMap":8},[23450],{"type":23,"value":8680},{"type":17,"tag":18,"props":23452,"children":23453},{"id":8689},[23454],{"type":23,"value":8692},{"type":17,"tag":96,"props":23456,"children":23457},{"id":8695},[23458],{"type":23,"value":8698},{"type":17,"tag":26,"props":23460,"children":23461},{},[23462,23463,23468,23469,23474,23475,23480],{"type":23,"value":8703},{"type":17,"tag":79,"props":23464,"children":23466},{"className":23465},[],[23467],{"type":23,"value":8709},{"type":23,"value":8711},{"type":17,"tag":79,"props":23470,"children":23472},{"className":23471},[],[23473],{"type":23,"value":5351},{"type":23,"value":8718},{"type":17,"tag":79,"props":23476,"children":23478},{"className":23477},[],[23479],{"type":23,"value":8724},{"type":23,"value":8726},{"type":17,"tag":518,"props":23482,"children":23483},{":editable":520,":show-in-col":520,"max-height":521},[23484],{"type":17,"tag":275,"props":23485,"children":23487},{"code":8732,"language":432,"meta":8,"className":23486},[527],[23488],{"type":17,"tag":79,"props":23489,"children":23490},{"__ignoreMap":8},[23491],{"type":23,"value":8732},{"type":17,"tag":26,"props":23493,"children":23494},{},[23495,23496,23501,23502,23507,23508,23513,23514,23519,23520,23525,23526,23531],{"type":23,"value":8743},{"type":17,"tag":79,"props":23497,"children":23499},{"className":23498},[],[23500],{"type":23,"value":920},{"type":23,"value":8750},{"type":17,"tag":79,"props":23503,"children":23505},{"className":23504},[],[23506],{"type":23,"value":8756},{"type":23,"value":8758},{"type":17,"tag":79,"props":23509,"children":23511},{"className":23510},[],[23512],{"type":23,"value":5698},{"type":23,"value":5700},{"type":17,"tag":79,"props":23515,"children":23517},{"className":23516},[],[23518],{"type":23,"value":5706},{"type":23,"value":8771},{"type":17,"tag":79,"props":23521,"children":23523},{"className":23522},[],[23524],{"type":23,"value":5706},{"type":23,"value":8778},{"type":17,"tag":79,"props":23527,"children":23529},{"className":23528},[],[23530],{"type":23,"value":5714},{"type":23,"value":8785},{"type":17,"tag":275,"props":23533,"children":23535},{"code":8788,"language":432,"meta":8,"className":23534},[527],[23536],{"type":17,"tag":79,"props":23537,"children":23538},{"__ignoreMap":8},[23539],{"type":23,"value":8788},{"type":17,"tag":26,"props":23541,"children":23542},{},[23543,23544,23549,23550,23555,23556,23561],{"type":23,"value":8799},{"type":17,"tag":79,"props":23545,"children":23547},{"className":23546},[],[23548],{"type":23,"value":920},{"type":23,"value":8806},{"type":17,"tag":79,"props":23551,"children":23553},{"className":23552},[],[23554],{"type":23,"value":8812},{"type":23,"value":8814},{"type":17,"tag":79,"props":23557,"children":23559},{"className":23558},[],[23560],{"type":23,"value":8820},{"type":23,"value":8822},{"type":17,"tag":26,"props":23563,"children":23564},{},[23565,23566,23571,23572,23577,23578,23583],{"type":23,"value":8827},{"type":17,"tag":79,"props":23567,"children":23569},{"className":23568},[],[23570],{"type":23,"value":8833},{"type":23,"value":8835},{"type":17,"tag":79,"props":23573,"children":23575},{"className":23574},[],[23576],{"type":23,"value":8841},{"type":23,"value":8843},{"type":17,"tag":79,"props":23579,"children":23581},{"className":23580},[],[23582],{"type":23,"value":8849},{"type":23,"value":8851},{"type":17,"tag":26,"props":23585,"children":23586},{},[23587],{"type":23,"value":8856},{"type":17,"tag":518,"props":23589,"children":23590},{":editable":520,":show-in-col":520,"max-height":521},[23591],{"type":17,"tag":275,"props":23592,"children":23594},{"code":8862,"language":432,"meta":8,"className":23593},[527],[23595],{"type":17,"tag":79,"props":23596,"children":23597},{"__ignoreMap":8},[23598],{"type":23,"value":8862},{"type":17,"tag":26,"props":23600,"children":23601},{},[23602],{"type":23,"value":8873},{"type":17,"tag":518,"props":23604,"children":23605},{":editable":520,":show-in-col":520,"max-height":521},[23606],{"type":17,"tag":275,"props":23607,"children":23609},{"code":8879,"language":432,"meta":8,"className":23608},[527],[23610],{"type":17,"tag":79,"props":23611,"children":23612},{"__ignoreMap":8},[23613],{"type":23,"value":8879},{"type":17,"tag":26,"props":23615,"children":23616},{},[23617],{"type":23,"value":8890},{"type":17,"tag":518,"props":23619,"children":23620},{":editable":520,":show-in-col":520,"max-height":521},[23621],{"type":17,"tag":275,"props":23622,"children":23624},{"code":8896,"language":432,"meta":8,"className":23623},[527],[23625],{"type":17,"tag":79,"props":23626,"children":23627},{"__ignoreMap":8},[23628],{"type":23,"value":8896},{"type":17,"tag":26,"props":23630,"children":23631},{},[23632,23633,23638,23639,23644,23645,23650],{"type":23,"value":8907},{"type":17,"tag":79,"props":23634,"children":23636},{"className":23635},[],[23637],{"type":23,"value":8913},{"type":23,"value":8915},{"type":17,"tag":79,"props":23640,"children":23642},{"className":23641},[],[23643],{"type":23,"value":8921},{"type":23,"value":8923},{"type":17,"tag":79,"props":23646,"children":23648},{"className":23647},[],[23649],{"type":23,"value":8921},{"type":23,"value":5672},{"type":17,"tag":275,"props":23652,"children":23654},{"code":8932,"language":432,"meta":8,"className":23653},[527],[23655],{"type":17,"tag":79,"props":23656,"children":23657},{"__ignoreMap":8},[23658],{"type":23,"value":8932},{"type":17,"tag":26,"props":23660,"children":23661},{},[23662,23663,23668],{"type":23,"value":8418},{"type":17,"tag":79,"props":23664,"children":23666},{"className":23665},[],[23667],{"type":23,"value":8921},{"type":23,"value":8949},{"type":17,"tag":275,"props":23670,"children":23672},{"code":8952,"language":432,"meta":8,"className":23671},[527],[23673],{"type":17,"tag":79,"props":23674,"children":23675},{"__ignoreMap":8},[23676],{"type":23,"value":8952},{"type":17,"tag":26,"props":23678,"children":23679},{},[23680,23681,23686],{"type":23,"value":8963},{"type":17,"tag":79,"props":23682,"children":23684},{"className":23683},[],[23685],{"type":23,"value":8921},{"type":23,"value":8970},{"type":17,"tag":235,"props":23688,"children":23689},{},[23690,23700,23704],{"type":17,"tag":36,"props":23691,"children":23692},{},[23693,23694,23699],{"type":23,"value":8978},{"type":17,"tag":79,"props":23695,"children":23697},{"className":23696},[],[23698],{"type":23,"value":8921},{"type":23,"value":8985},{"type":17,"tag":36,"props":23701,"children":23702},{},[23703],{"type":23,"value":8990},{"type":17,"tag":36,"props":23705,"children":23706},{},[23707],{"type":23,"value":8995},{"type":17,"tag":96,"props":23709,"children":23710},{"id":8998},[23711],{"type":23,"value":9001},{"type":17,"tag":26,"props":23713,"children":23714},{},[23715],{"type":23,"value":9006},{"type":17,"tag":26,"props":23717,"children":23718},{},[23719,23720,23725,23726,23731],{"type":23,"value":9011},{"type":17,"tag":79,"props":23721,"children":23723},{"className":23722},[],[23724],{"type":23,"value":2005},{"type":23,"value":9018},{"type":17,"tag":79,"props":23727,"children":23729},{"className":23728},[],[23730],{"type":23,"value":2012},{"type":23,"value":9025},{"type":17,"tag":26,"props":23733,"children":23734},{},[23735],{"type":23,"value":9030},{"type":17,"tag":518,"props":23737,"children":23738},{":editable":520,":show-in-col":520,"max-height":521},[23739],{"type":17,"tag":275,"props":23740,"children":23742},{"code":9036,"language":432,"meta":8,"className":23741},[527],[23743],{"type":17,"tag":79,"props":23744,"children":23745},{"__ignoreMap":8},[23746],{"type":23,"value":9036},{"type":17,"tag":26,"props":23748,"children":23749},{},[23750,23751,23756,23757,23762,23763,23768,23769,23774,23775,23780],{"type":23,"value":9047},{"type":17,"tag":79,"props":23752,"children":23754},{"className":23753},[],[23755],{"type":23,"value":105},{"type":23,"value":9054},{"type":17,"tag":79,"props":23758,"children":23760},{"className":23759},[],[23761],{"type":23,"value":9060},{"type":23,"value":9062},{"type":17,"tag":79,"props":23764,"children":23766},{"className":23765},[],[23767],{"type":23,"value":105},{"type":23,"value":9069},{"type":17,"tag":79,"props":23770,"children":23772},{"className":23771},[],[23773],{"type":23,"value":9075},{"type":23,"value":9077},{"type":17,"tag":79,"props":23776,"children":23778},{"className":23777},[],[23779],{"type":23,"value":105},{"type":23,"value":9084},{"type":17,"tag":26,"props":23782,"children":23783},{},[23784,23785,23790,23791,23796,23797,23802],{"type":23,"value":9089},{"type":17,"tag":79,"props":23786,"children":23788},{"className":23787},[],[23789],{"type":23,"value":9095},{"type":23,"value":9097},{"type":17,"tag":79,"props":23792,"children":23794},{"className":23793},[],[23795],{"type":23,"value":9103},{"type":23,"value":9105},{"type":17,"tag":79,"props":23798,"children":23800},{"className":23799},[],[23801],{"type":23,"value":9111},{"type":23,"value":9113},{"type":17,"tag":275,"props":23804,"children":23806},{"code":9116,"language":432,"meta":8,"className":23805},[527],[23807],{"type":17,"tag":79,"props":23808,"children":23809},{"__ignoreMap":8},[23810],{"type":23,"value":9116},{"type":17,"tag":18,"props":23812,"children":23813},{"id":9125},[23814],{"type":23,"value":9128},{"type":17,"tag":96,"props":23816,"children":23817},{"id":9131},[23818],{"type":23,"value":9134},{"type":17,"tag":1561,"props":23820,"children":23821},{"id":9137},[23822],{"type":23,"value":9140},{"type":17,"tag":26,"props":23824,"children":23825},{},[23826,23827,23832],{"type":23,"value":9145},{"type":17,"tag":79,"props":23828,"children":23830},{"className":23829},[],[23831],{"type":23,"value":9151},{"type":23,"value":5762},{"type":17,"tag":26,"props":23834,"children":23835},{},[23836,23837,23842,23843,23848],{"type":23,"value":3191},{"type":17,"tag":79,"props":23838,"children":23840},{"className":23839},[],[23841],{"type":23,"value":9151},{"type":23,"value":9163},{"type":17,"tag":79,"props":23844,"children":23846},{"className":23845},[],[23847],{"type":23,"value":9151},{"type":23,"value":5672},{"type":17,"tag":275,"props":23850,"children":23852},{"code":9172,"language":432,"meta":8,"className":23851},[527],[23853],{"type":17,"tag":79,"props":23854,"children":23855},{"__ignoreMap":8},[23856],{"type":23,"value":9172},{"type":17,"tag":26,"props":23858,"children":23859},{},[23860],{"type":23,"value":7165},{"type":17,"tag":235,"props":23862,"children":23863},{},[23864,23873,23882],{"type":17,"tag":36,"props":23865,"children":23866},{},[23867,23872],{"type":17,"tag":79,"props":23868,"children":23870},{"className":23869},[],[23871],{"type":23,"value":105},{"type":23,"value":9195},{"type":17,"tag":36,"props":23874,"children":23875},{},[23876,23881],{"type":17,"tag":79,"props":23877,"children":23879},{"className":23878},[],[23880],{"type":23,"value":9204},{"type":23,"value":9206},{"type":17,"tag":36,"props":23883,"children":23884},{},[23885,23890],{"type":17,"tag":79,"props":23886,"children":23888},{"className":23887},[],[23889],{"type":23,"value":7223},{"type":23,"value":9216},{"type":17,"tag":26,"props":23892,"children":23893},{},[23894,23895,23900],{"type":23,"value":8418},{"type":17,"tag":79,"props":23896,"children":23898},{"className":23897},[],[23899],{"type":23,"value":9151},{"type":23,"value":9227},{"type":17,"tag":518,"props":23902,"children":23903},{":editable":520,":show-in-col":520,"max-height":521},[23904],{"type":17,"tag":275,"props":23905,"children":23907},{"code":9233,"language":432,"meta":8,"className":23906},[527],[23908],{"type":17,"tag":79,"props":23909,"children":23910},{"__ignoreMap":8},[23911],{"type":23,"value":9233},{"type":17,"tag":1561,"props":23913,"children":23914},{"id":9242},[23915],{"type":23,"value":9245},{"type":17,"tag":26,"props":23917,"children":23918},{},[23919,23920,23925,23926,23931],{"type":23,"value":9250},{"type":17,"tag":79,"props":23921,"children":23923},{"className":23922},[],[23924],{"type":23,"value":9256},{"type":23,"value":5897},{"type":17,"tag":79,"props":23927,"children":23929},{"className":23928},[],[23930],{"type":23,"value":9263},{"type":23,"value":9265},{"type":17,"tag":235,"props":23933,"children":23934},{},[23935,23945],{"type":17,"tag":36,"props":23936,"children":23937},{},[23938,23939,23944],{"type":23,"value":3191},{"type":17,"tag":79,"props":23940,"children":23942},{"className":23941},[],[23943],{"type":23,"value":9256},{"type":23,"value":9279},{"type":17,"tag":36,"props":23946,"children":23947},{},[23948,23949,23954],{"type":23,"value":3191},{"type":17,"tag":79,"props":23950,"children":23952},{"className":23951},[],[23953],{"type":23,"value":9263},{"type":23,"value":9290},{"type":17,"tag":26,"props":23956,"children":23957},{},[23958,23959,23964,23965,23970],{"type":23,"value":9295},{"type":17,"tag":79,"props":23960,"children":23962},{"className":23961},[],[23963],{"type":23,"value":9301},{"type":23,"value":5897},{"type":17,"tag":79,"props":23966,"children":23968},{"className":23967},[],[23969],{"type":23,"value":9308},{"type":23,"value":9310},{"type":17,"tag":32,"props":23972,"children":23973},{},[23974],{"type":17,"tag":36,"props":23975,"children":23976},{},[23977,23982],{"type":17,"tag":79,"props":23978,"children":23980},{"className":23979},[],[23981],{"type":23,"value":9256},{"type":23,"value":7140},{"type":17,"tag":26,"props":23984,"children":23985},{},[23986,23987,23992,23993,23998],{"type":23,"value":3191},{"type":17,"tag":79,"props":23988,"children":23990},{"className":23989},[],[23991],{"type":23,"value":9256},{"type":23,"value":9333},{"type":17,"tag":79,"props":23994,"children":23996},{"className":23995},[],[23997],{"type":23,"value":9256},{"type":23,"value":5672},{"type":17,"tag":275,"props":24000,"children":24002},{"code":9342,"language":432,"meta":8,"className":24001},[527],[24003],{"type":17,"tag":79,"props":24004,"children":24005},{"__ignoreMap":8},[24006],{"type":23,"value":9342},{"type":17,"tag":26,"props":24008,"children":24009},{},[24010],{"type":23,"value":7165},{"type":17,"tag":235,"props":24012,"children":24013},{},[24014,24023],{"type":17,"tag":36,"props":24015,"children":24016},{},[24017,24022],{"type":17,"tag":79,"props":24018,"children":24020},{"className":24019},[],[24021],{"type":23,"value":105},{"type":23,"value":9365},{"type":17,"tag":36,"props":24024,"children":24025},{},[24026,24031],{"type":17,"tag":79,"props":24027,"children":24029},{"className":24028},[],[24030],{"type":23,"value":9374},{"type":23,"value":9376},{"type":17,"tag":26,"props":24033,"children":24034},{},[24035,24036,24041],{"type":23,"value":8418},{"type":17,"tag":79,"props":24037,"children":24039},{"className":24038},[],[24040],{"type":23,"value":9256},{"type":23,"value":9387},{"type":17,"tag":518,"props":24043,"children":24044},{":editable":520,":show-in-col":520,"max-height":521},[24045],{"type":17,"tag":275,"props":24046,"children":24048},{"code":9393,"language":432,"meta":8,"className":24047},[527],[24049],{"type":17,"tag":79,"props":24050,"children":24051},{"__ignoreMap":8},[24052],{"type":23,"value":9393},{"type":17,"tag":32,"props":24054,"children":24055},{"start":11},[24056],{"type":17,"tag":36,"props":24057,"children":24058},{},[24059,24064],{"type":17,"tag":79,"props":24060,"children":24062},{"className":24061},[],[24063],{"type":23,"value":9263},{"type":23,"value":9412},{"type":17,"tag":26,"props":24066,"children":24067},{},[24068,24069,24074,24075,24080],{"type":23,"value":3191},{"type":17,"tag":79,"props":24070,"children":24072},{"className":24071},[],[24073],{"type":23,"value":9263},{"type":23,"value":9423},{"type":17,"tag":79,"props":24076,"children":24078},{"className":24077},[],[24079],{"type":23,"value":9263},{"type":23,"value":9430},{"type":17,"tag":275,"props":24082,"children":24084},{"code":9433,"language":432,"meta":8,"className":24083},[527],[24085],{"type":17,"tag":79,"props":24086,"children":24087},{"__ignoreMap":8},[24088],{"type":23,"value":9433},{"type":17,"tag":26,"props":24090,"children":24091},{},[24092,24093,24098],{"type":23,"value":8418},{"type":17,"tag":79,"props":24094,"children":24096},{"className":24095},[],[24097],{"type":23,"value":9263},{"type":23,"value":9450},{"type":17,"tag":518,"props":24100,"children":24101},{":editable":520,":show-in-col":520,"max-height":521},[24102],{"type":17,"tag":275,"props":24103,"children":24105},{"code":9456,"language":432,"meta":8,"className":24104},[527],[24106],{"type":17,"tag":79,"props":24107,"children":24108},{"__ignoreMap":8},[24109],{"type":23,"value":9456},{"type":17,"tag":1561,"props":24111,"children":24112},{"id":9465},[24113],{"type":23,"value":9468},{"type":17,"tag":26,"props":24115,"children":24116},{},[24117],{"type":23,"value":9473},{"type":17,"tag":235,"props":24119,"children":24120},{},[24121,24130],{"type":17,"tag":36,"props":24122,"children":24123},{},[24124,24129],{"type":17,"tag":79,"props":24125,"children":24127},{"className":24126},[],[24128],{"type":23,"value":9485},{"type":23,"value":9487},{"type":17,"tag":36,"props":24131,"children":24132},{},[24133,24138],{"type":17,"tag":79,"props":24134,"children":24136},{"className":24135},[],[24137],{"type":23,"value":9496},{"type":23,"value":9498},{"type":17,"tag":32,"props":24140,"children":24141},{},[24142],{"type":17,"tag":36,"props":24143,"children":24144},{},[24145,24150],{"type":17,"tag":79,"props":24146,"children":24148},{"className":24147},[],[24149],{"type":23,"value":9485},{"type":23,"value":7140},{"type":17,"tag":26,"props":24152,"children":24153},{},[24154,24155,24160],{"type":23,"value":3191},{"type":17,"tag":79,"props":24156,"children":24158},{"className":24157},[],[24159],{"type":23,"value":9485},{"type":23,"value":9521},{"type":17,"tag":275,"props":24162,"children":24164},{"code":9524,"language":432,"meta":8,"className":24163},[527],[24165],{"type":17,"tag":79,"props":24166,"children":24167},{"__ignoreMap":8},[24168],{"type":23,"value":9524},{"type":17,"tag":26,"props":24170,"children":24171},{},[24172],{"type":23,"value":7165},{"type":17,"tag":235,"props":24174,"children":24175},{},[24176,24185],{"type":17,"tag":36,"props":24177,"children":24178},{},[24179,24184],{"type":17,"tag":79,"props":24180,"children":24182},{"className":24181},[],[24183],{"type":23,"value":9546},{"type":23,"value":9548},{"type":17,"tag":36,"props":24186,"children":24187},{},[24188,24193],{"type":17,"tag":79,"props":24189,"children":24191},{"className":24190},[],[24192],{"type":23,"value":8377},{"type":23,"value":9558},{"type":17,"tag":26,"props":24195,"children":24196},{},[24197,24198,24203],{"type":23,"value":8418},{"type":17,"tag":79,"props":24199,"children":24201},{"className":24200},[],[24202],{"type":23,"value":9485},{"type":23,"value":9569},{"type":17,"tag":518,"props":24205,"children":24206},{":editable":520,":show-in-col":520,"max-height":521},[24207],{"type":17,"tag":275,"props":24208,"children":24210},{"code":9575,"language":432,"meta":8,"className":24209},[527],[24211],{"type":17,"tag":79,"props":24212,"children":24213},{"__ignoreMap":8},[24214],{"type":23,"value":9575},{"type":17,"tag":32,"props":24216,"children":24217},{"start":11},[24218],{"type":17,"tag":36,"props":24219,"children":24220},{},[24221,24226],{"type":17,"tag":79,"props":24222,"children":24224},{"className":24223},[],[24225],{"type":23,"value":9496},{"type":23,"value":7140},{"type":17,"tag":26,"props":24228,"children":24229},{},[24230,24231,24236],{"type":23,"value":3191},{"type":17,"tag":79,"props":24232,"children":24234},{"className":24233},[],[24235],{"type":23,"value":9496},{"type":23,"value":9604},{"type":17,"tag":275,"props":24238,"children":24240},{"code":9607,"language":432,"meta":8,"className":24239},[527],[24241],{"type":17,"tag":79,"props":24242,"children":24243},{"__ignoreMap":8},[24244],{"type":23,"value":9607},{"type":17,"tag":26,"props":24246,"children":24247},{},[24248],{"type":23,"value":7165},{"type":17,"tag":235,"props":24250,"children":24251},{},[24252,24261],{"type":17,"tag":36,"props":24253,"children":24254},{},[24255,24260],{"type":17,"tag":79,"props":24256,"children":24258},{"className":24257},[],[24259],{"type":23,"value":9546},{"type":23,"value":9630},{"type":17,"tag":36,"props":24262,"children":24263},{},[24264,24269,24270,24275],{"type":17,"tag":79,"props":24265,"children":24267},{"className":24266},[],[24268],{"type":23,"value":8377},{"type":23,"value":9640},{"type":17,"tag":79,"props":24271,"children":24273},{"className":24272},[],[24274],{"type":23,"value":8385},{"type":23,"value":9647},{"type":17,"tag":26,"props":24277,"children":24278},{},[24279,24280,24285],{"type":23,"value":8418},{"type":17,"tag":79,"props":24281,"children":24283},{"className":24282},[],[24284],{"type":23,"value":9496},{"type":23,"value":9658},{"type":17,"tag":518,"props":24287,"children":24288},{":editable":520,":show-in-col":520,"max-height":521},[24289],{"type":17,"tag":275,"props":24290,"children":24292},{"code":9664,"language":432,"meta":8,"className":24291},[527],[24293],{"type":17,"tag":79,"props":24294,"children":24295},{"__ignoreMap":8},[24296],{"type":23,"value":9664},{"type":17,"tag":96,"props":24298,"children":24299},{"id":9673},[24300],{"type":23,"value":9676},{"type":17,"tag":1561,"props":24302,"children":24303},{"id":9679},[24304],{"type":23,"value":9682},{"type":17,"tag":26,"props":24306,"children":24307},{},[24308,24309,24314,24315,24320],{"type":23,"value":9250},{"type":17,"tag":79,"props":24310,"children":24312},{"className":24311},[],[24313],{"type":23,"value":9692},{"type":23,"value":9694},{"type":17,"tag":79,"props":24316,"children":24318},{"className":24317},[],[24319],{"type":23,"value":9692},{"type":23,"value":5672},{"type":17,"tag":275,"props":24322,"children":24324},{"code":9703,"language":432,"meta":8,"className":24323},[527],[24325],{"type":17,"tag":79,"props":24326,"children":24327},{"__ignoreMap":8},[24328],{"type":23,"value":9703},{"type":17,"tag":26,"props":24330,"children":24331},{},[24332],{"type":23,"value":7165},{"type":17,"tag":235,"props":24334,"children":24335},{},[24336,24345],{"type":17,"tag":36,"props":24337,"children":24338},{},[24339,24344],{"type":17,"tag":79,"props":24340,"children":24342},{"className":24341},[],[24343],{"type":23,"value":9725},{"type":23,"value":9727},{"type":17,"tag":36,"props":24346,"children":24347},{},[24348,24353],{"type":17,"tag":79,"props":24349,"children":24351},{"className":24350},[],[24352],{"type":23,"value":8377},{"type":23,"value":9737},{"type":17,"tag":26,"props":24355,"children":24356},{},[24357,24358,24363],{"type":23,"value":8418},{"type":17,"tag":79,"props":24359,"children":24361},{"className":24360},[],[24362],{"type":23,"value":9692},{"type":23,"value":9748},{"type":17,"tag":518,"props":24365,"children":24366},{":editable":520,":show-in-col":520,"max-height":521},[24367],{"type":17,"tag":275,"props":24368,"children":24370},{"code":9754,"language":432,"meta":8,"className":24369},[527],[24371],{"type":17,"tag":79,"props":24372,"children":24373},{"__ignoreMap":8},[24374],{"type":23,"value":9754},{"type":17,"tag":1561,"props":24376,"children":24377},{"id":9763},[24378],{"type":23,"value":9766},{"type":17,"tag":26,"props":24380,"children":24381},{},[24382,24383,24388,24389,24394],{"type":23,"value":9250},{"type":17,"tag":79,"props":24384,"children":24386},{"className":24385},[],[24387],{"type":23,"value":9776},{"type":23,"value":9778},{"type":17,"tag":79,"props":24390,"children":24392},{"className":24391},[],[24393],{"type":23,"value":9776},{"type":23,"value":5672},{"type":17,"tag":275,"props":24396,"children":24398},{"code":9787,"language":432,"meta":8,"className":24397},[527],[24399],{"type":17,"tag":79,"props":24400,"children":24401},{"__ignoreMap":8},[24402],{"type":23,"value":9787},{"type":17,"tag":26,"props":24404,"children":24405},{},[24406],{"type":23,"value":7165},{"type":17,"tag":235,"props":24408,"children":24409},{},[24410,24419,24428],{"type":17,"tag":36,"props":24411,"children":24412},{},[24413,24418],{"type":17,"tag":79,"props":24414,"children":24416},{"className":24415},[],[24417],{"type":23,"value":9546},{"type":23,"value":9810},{"type":17,"tag":36,"props":24420,"children":24421},{},[24422,24427],{"type":17,"tag":79,"props":24423,"children":24425},{"className":24424},[],[24426],{"type":23,"value":9819},{"type":23,"value":9821},{"type":17,"tag":36,"props":24429,"children":24430},{},[24431,24436],{"type":17,"tag":79,"props":24432,"children":24434},{"className":24433},[],[24435],{"type":23,"value":8377},{"type":23,"value":9831},{"type":17,"tag":26,"props":24438,"children":24439},{},[24440,24441,24446],{"type":23,"value":8418},{"type":17,"tag":79,"props":24442,"children":24444},{"className":24443},[],[24445],{"type":23,"value":9776},{"type":23,"value":9842},{"type":17,"tag":518,"props":24448,"children":24449},{":editable":520,":show-in-col":520,"max-height":521},[24450],{"type":17,"tag":275,"props":24451,"children":24453},{"code":9848,"language":432,"meta":8,"className":24452},[527],[24454],{"type":17,"tag":79,"props":24455,"children":24456},{"__ignoreMap":8},[24457],{"type":23,"value":9848},{"type":17,"tag":18,"props":24459,"children":24460},{"id":9857},[24461],{"type":23,"value":9860},{"type":17,"tag":26,"props":24463,"children":24464},{},[24465,24466,24471],{"type":23,"value":9865},{"type":17,"tag":79,"props":24467,"children":24469},{"className":24468},[],[24470],{"type":23,"value":9871},{"type":23,"value":9873},{"type":17,"tag":26,"props":24473,"children":24474},{},[24475,24476,24481,24482,24487,24488,24493],{"type":23,"value":9878},{"type":17,"tag":79,"props":24477,"children":24479},{"className":24478},[],[24480],{"type":23,"value":9884},{"type":23,"value":9886},{"type":17,"tag":79,"props":24483,"children":24485},{"className":24484},[],[24486],{"type":23,"value":9892},{"type":23,"value":9894},{"type":17,"tag":79,"props":24489,"children":24491},{"className":24490},[],[24492],{"type":23,"value":9900},{"type":23,"value":5762},{"type":17,"tag":96,"props":24495,"children":24496},{"id":9904},[24497,24498,24503],{"type":23,"value":9907},{"type":17,"tag":79,"props":24499,"children":24501},{"className":24500},[],[24502],{"type":23,"value":9884},{"type":23,"value":7140},{"type":17,"tag":26,"props":24505,"children":24506},{},[24507,24508,24513,24514,24519],{"type":23,"value":3191},{"type":17,"tag":79,"props":24509,"children":24511},{"className":24510},[],[24512],{"type":23,"value":9884},{"type":23,"value":9924},{"type":17,"tag":79,"props":24515,"children":24517},{"className":24516},[],[24518],{"type":23,"value":9884},{"type":23,"value":5672},{"type":17,"tag":275,"props":24521,"children":24523},{"code":9933,"language":432,"meta":8,"className":24522},[527],[24524],{"type":17,"tag":79,"props":24525,"children":24526},{"__ignoreMap":8},[24527],{"type":23,"value":9933},{"type":17,"tag":26,"props":24529,"children":24530},{},[24531],{"type":23,"value":7165},{"type":17,"tag":235,"props":24533,"children":24534},{},[24535,24544,24553,24568],{"type":17,"tag":36,"props":24536,"children":24537},{},[24538,24543],{"type":17,"tag":79,"props":24539,"children":24541},{"className":24540},[],[24542],{"type":23,"value":105},{"type":23,"value":9956},{"type":17,"tag":36,"props":24545,"children":24546},{},[24547,24552],{"type":17,"tag":79,"props":24548,"children":24550},{"className":24549},[],[24551],{"type":23,"value":8377},{"type":23,"value":9966},{"type":17,"tag":36,"props":24554,"children":24555},{},[24556,24561,24562,24567],{"type":17,"tag":79,"props":24557,"children":24559},{"className":24558},[],[24560],{"type":23,"value":9975},{"type":23,"value":9977},{"type":17,"tag":79,"props":24563,"children":24565},{"className":24564},[],[24566],{"type":23,"value":8385},{"type":23,"value":9984},{"type":17,"tag":36,"props":24569,"children":24570},{},[24571,24576],{"type":17,"tag":79,"props":24572,"children":24574},{"className":24573},[],[24575],{"type":23,"value":7223},{"type":23,"value":9994},{"type":17,"tag":26,"props":24578,"children":24579},{},[24580,24581,24586],{"type":23,"value":8418},{"type":17,"tag":79,"props":24582,"children":24584},{"className":24583},[],[24585],{"type":23,"value":9884},{"type":23,"value":10005},{"type":17,"tag":518,"props":24588,"children":24589},{":editable":520,":show-in-col":520,"max-height":521},[24590],{"type":17,"tag":275,"props":24591,"children":24593},{"code":10011,"language":432,"meta":8,"className":24592},[527],[24594],{"type":17,"tag":79,"props":24595,"children":24596},{"__ignoreMap":8},[24597],{"type":23,"value":10011},{"type":17,"tag":96,"props":24599,"children":24600},{"id":10020},[24601,24602,24607],{"type":23,"value":10023},{"type":17,"tag":79,"props":24603,"children":24605},{"className":24604},[],[24606],{"type":23,"value":9892},{"type":23,"value":7140},{"type":17,"tag":26,"props":24609,"children":24610},{},[24611,24612,24617,24618,24623],{"type":23,"value":3191},{"type":17,"tag":79,"props":24613,"children":24615},{"className":24614},[],[24616],{"type":23,"value":9892},{"type":23,"value":10040},{"type":17,"tag":79,"props":24619,"children":24621},{"className":24620},[],[24622],{"type":23,"value":9892},{"type":23,"value":5672},{"type":17,"tag":275,"props":24625,"children":24627},{"code":10049,"language":432,"meta":8,"className":24626},[527],[24628],{"type":17,"tag":79,"props":24629,"children":24630},{"__ignoreMap":8},[24631],{"type":23,"value":10049},{"type":17,"tag":26,"props":24633,"children":24634},{},[24635,24636,24641],{"type":23,"value":8418},{"type":17,"tag":79,"props":24637,"children":24639},{"className":24638},[],[24640],{"type":23,"value":9892},{"type":23,"value":10066},{"type":17,"tag":518,"props":24643,"children":24644},{":editable":520,":show-in-col":520,"max-height":521},[24645],{"type":17,"tag":275,"props":24646,"children":24648},{"code":10072,"language":432,"meta":8,"className":24647},[527],[24649],{"type":17,"tag":79,"props":24650,"children":24651},{"__ignoreMap":8},[24652],{"type":23,"value":10072},{"type":17,"tag":26,"props":24654,"children":24655},{},[24656,24657,24662],{"type":23,"value":10083},{"type":17,"tag":79,"props":24658,"children":24660},{"className":24659},[],[24661],{"type":23,"value":9892},{"type":23,"value":10090},{"type":17,"tag":96,"props":24664,"children":24665},{"id":10093},[24666,24667,24672],{"type":23,"value":10096},{"type":17,"tag":79,"props":24668,"children":24670},{"className":24669},[],[24671],{"type":23,"value":9900},{"type":23,"value":7140},{"type":17,"tag":26,"props":24674,"children":24675},{},[24676,24677,24682,24683,24688,24689,24694],{"type":23,"value":3191},{"type":17,"tag":79,"props":24678,"children":24680},{"className":24679},[],[24681],{"type":23,"value":9900},{"type":23,"value":10113},{"type":17,"tag":79,"props":24684,"children":24686},{"className":24685},[],[24687],{"type":23,"value":9900},{"type":23,"value":10120},{"type":17,"tag":79,"props":24690,"children":24692},{"className":24691},[],[24693],{"type":23,"value":10126},{"type":23,"value":10128},{"type":17,"tag":275,"props":24696,"children":24698},{"code":10131,"language":432,"meta":8,"className":24697},[527],[24699],{"type":17,"tag":79,"props":24700,"children":24701},{"__ignoreMap":8},[24702],{"type":23,"value":10131},{"type":17,"tag":26,"props":24704,"children":24705},{},[24706],{"type":23,"value":7165},{"type":17,"tag":235,"props":24708,"children":24709},{},[24710,24719],{"type":17,"tag":36,"props":24711,"children":24712},{},[24713,24718],{"type":17,"tag":79,"props":24714,"children":24716},{"className":24715},[],[24717],{"type":23,"value":10126},{"type":23,"value":10154},{"type":17,"tag":36,"props":24720,"children":24721},{},[24722,24727],{"type":17,"tag":79,"props":24723,"children":24725},{"className":24724},[],[24726],{"type":23,"value":8377},{"type":23,"value":10164},{"type":17,"tag":26,"props":24729,"children":24730},{},[24731,24732,24737],{"type":23,"value":8418},{"type":17,"tag":79,"props":24733,"children":24735},{"className":24734},[],[24736],{"type":23,"value":9900},{"type":23,"value":10175},{"type":17,"tag":518,"props":24739,"children":24740},{":editable":520,":show-in-col":520,"max-height":521},[24741],{"type":17,"tag":275,"props":24742,"children":24744},{"code":10181,"language":432,"meta":8,"className":24743},[527],[24745],{"type":17,"tag":79,"props":24746,"children":24747},{"__ignoreMap":8},[24748],{"type":23,"value":10181},{"type":17,"tag":18,"props":24750,"children":24751},{"id":10190},[24752],{"type":23,"value":10193},{"type":17,"tag":26,"props":24754,"children":24755},{},[24756],{"type":23,"value":10198},{"type":17,"tag":96,"props":24758,"children":24759},{"id":10201},[24760,24761,24766],{"type":23,"value":10204},{"type":17,"tag":79,"props":24762,"children":24764},{"className":24763},[],[24765],{"type":23,"value":10210},{"type":23,"value":7140},{"type":17,"tag":26,"props":24768,"children":24769},{},[24770,24771,24776,24777,24782],{"type":23,"value":3191},{"type":17,"tag":79,"props":24772,"children":24774},{"className":24773},[],[24775],{"type":23,"value":10210},{"type":23,"value":10222},{"type":17,"tag":79,"props":24778,"children":24780},{"className":24779},[],[24781],{"type":23,"value":10210},{"type":23,"value":5672},{"type":17,"tag":275,"props":24784,"children":24786},{"code":10231,"language":432,"meta":8,"className":24785},[527],[24787],{"type":17,"tag":79,"props":24788,"children":24789},{"__ignoreMap":8},[24790],{"type":23,"value":10231},{"type":17,"tag":26,"props":24792,"children":24793},{},[24794],{"type":23,"value":7165},{"type":17,"tag":235,"props":24796,"children":24797},{},[24798,24807,24822,24831,24846,24855],{"type":17,"tag":36,"props":24799,"children":24800},{},[24801,24806],{"type":17,"tag":79,"props":24802,"children":24804},{"className":24803},[],[24805],{"type":23,"value":105},{"type":23,"value":10254},{"type":17,"tag":36,"props":24808,"children":24809},{},[24810,24815,24816,24821],{"type":17,"tag":79,"props":24811,"children":24813},{"className":24812},[],[24814],{"type":23,"value":8377},{"type":23,"value":10264},{"type":17,"tag":79,"props":24817,"children":24819},{"className":24818},[],[24820],{"type":23,"value":8385},{"type":23,"value":10271},{"type":17,"tag":36,"props":24823,"children":24824},{},[24825,24830],{"type":17,"tag":79,"props":24826,"children":24828},{"className":24827},[],[24829],{"type":23,"value":10280},{"type":23,"value":10282},{"type":17,"tag":36,"props":24832,"children":24833},{},[24834,24839,24840,24845],{"type":17,"tag":79,"props":24835,"children":24837},{"className":24836},[],[24838],{"type":23,"value":8405},{"type":23,"value":10292},{"type":17,"tag":79,"props":24841,"children":24843},{"className":24842},[],[24844],{"type":23,"value":2005},{"type":23,"value":8413},{"type":17,"tag":36,"props":24847,"children":24848},{},[24849,24854],{"type":17,"tag":79,"props":24850,"children":24852},{"className":24851},[],[24853],{"type":23,"value":10307},{"type":23,"value":10309},{"type":17,"tag":36,"props":24856,"children":24857},{},[24858,24863],{"type":17,"tag":79,"props":24859,"children":24861},{"className":24860},[],[24862],{"type":23,"value":10318},{"type":23,"value":10320},{"type":17,"tag":26,"props":24865,"children":24866},{},[24867,24868,24873],{"type":23,"value":8418},{"type":17,"tag":79,"props":24869,"children":24871},{"className":24870},[],[24872],{"type":23,"value":10210},{"type":23,"value":10331},{"type":17,"tag":518,"props":24875,"children":24876},{":editable":520,":show-in-col":520,"max-height":521},[24877],{"type":17,"tag":275,"props":24878,"children":24880},{"code":10337,"language":432,"meta":8,"className":24879},[527],[24881],{"type":17,"tag":79,"props":24882,"children":24883},{"__ignoreMap":8},[24884],{"type":23,"value":10337},{"type":17,"tag":96,"props":24886,"children":24887},{"id":10346},[24888,24889,24894],{"type":23,"value":10349},{"type":17,"tag":79,"props":24890,"children":24892},{"className":24891},[],[24893],{"type":23,"value":10355},{"type":23,"value":7140},{"type":17,"tag":26,"props":24896,"children":24897},{},[24898,24899,24904,24905,24910],{"type":23,"value":3191},{"type":17,"tag":79,"props":24900,"children":24902},{"className":24901},[],[24903],{"type":23,"value":10355},{"type":23,"value":10367},{"type":17,"tag":79,"props":24906,"children":24908},{"className":24907},[],[24909],{"type":23,"value":10355},{"type":23,"value":5672},{"type":17,"tag":275,"props":24912,"children":24914},{"code":10376,"language":432,"meta":8,"className":24913},[527],[24915],{"type":17,"tag":79,"props":24916,"children":24917},{"__ignoreMap":8},[24918],{"type":23,"value":10376},{"type":17,"tag":26,"props":24920,"children":24921},{},[24922,24923,24928],{"type":23,"value":8418},{"type":17,"tag":79,"props":24924,"children":24926},{"className":24925},[],[24927],{"type":23,"value":10355},{"type":23,"value":10393},{"type":17,"tag":518,"props":24930,"children":24931},{":editable":520,":show-in-col":520,"max-height":521},[24932],{"type":17,"tag":275,"props":24933,"children":24935},{"code":10399,"language":432,"meta":8,"className":24934},[527],[24936],{"type":17,"tag":79,"props":24937,"children":24938},{"__ignoreMap":8},[24939],{"type":23,"value":10399},{"type":17,"tag":96,"props":24941,"children":24942},{"id":10408},[24943,24944,24949],{"type":23,"value":10411},{"type":17,"tag":79,"props":24945,"children":24947},{"className":24946},[],[24948],{"type":23,"value":10417},{"type":23,"value":7140},{"type":17,"tag":26,"props":24951,"children":24952},{},[24953,24954,24959,24960,24965],{"type":23,"value":3191},{"type":17,"tag":79,"props":24955,"children":24957},{"className":24956},[],[24958],{"type":23,"value":10417},{"type":23,"value":10429},{"type":17,"tag":79,"props":24961,"children":24963},{"className":24962},[],[24964],{"type":23,"value":10417},{"type":23,"value":5672},{"type":17,"tag":275,"props":24967,"children":24969},{"code":10438,"language":432,"meta":8,"className":24968},[527],[24970],{"type":17,"tag":79,"props":24971,"children":24972},{"__ignoreMap":8},[24973],{"type":23,"value":10438},{"type":17,"tag":26,"props":24975,"children":24976},{},[24977],{"type":23,"value":7165},{"type":17,"tag":235,"props":24979,"children":24980},{},[24981,24990,25005,25014,25023],{"type":17,"tag":36,"props":24982,"children":24983},{},[24984,24989],{"type":17,"tag":79,"props":24985,"children":24987},{"className":24986},[],[24988],{"type":23,"value":105},{"type":23,"value":10461},{"type":17,"tag":36,"props":24991,"children":24992},{},[24993,24998,24999,25004],{"type":17,"tag":79,"props":24994,"children":24996},{"className":24995},[],[24997],{"type":23,"value":8377},{"type":23,"value":10471},{"type":17,"tag":79,"props":25000,"children":25002},{"className":25001},[],[25003],{"type":23,"value":8385},{"type":23,"value":10478},{"type":17,"tag":36,"props":25006,"children":25007},{},[25008,25013],{"type":17,"tag":79,"props":25009,"children":25011},{"className":25010},[],[25012],{"type":23,"value":6791},{"type":23,"value":10488},{"type":17,"tag":36,"props":25015,"children":25016},{},[25017,25022],{"type":17,"tag":79,"props":25018,"children":25020},{"className":25019},[],[25021],{"type":23,"value":10280},{"type":23,"value":10282},{"type":17,"tag":36,"props":25024,"children":25025},{},[25026,25031,25032,25037],{"type":17,"tag":79,"props":25027,"children":25029},{"className":25028},[],[25030],{"type":23,"value":8405},{"type":23,"value":10292},{"type":17,"tag":79,"props":25033,"children":25035},{"className":25034},[],[25036],{"type":23,"value":2005},{"type":23,"value":8413},{"type":17,"tag":26,"props":25039,"children":25040},{},[25041,25042,25047],{"type":23,"value":8418},{"type":17,"tag":79,"props":25043,"children":25045},{"className":25044},[],[25046],{"type":23,"value":10417},{"type":23,"value":10523},{"type":17,"tag":518,"props":25049,"children":25050},{":editable":520,":show-in-col":520,"max-height":521},[25051],{"type":17,"tag":275,"props":25052,"children":25054},{"code":10529,"language":432,"meta":8,"className":25053},[527],[25055],{"type":17,"tag":79,"props":25056,"children":25057},{"__ignoreMap":8},[25058],{"type":23,"value":10529},{"type":17,"tag":96,"props":25060,"children":25061},{"id":10538},[25062,25063,25068],{"type":23,"value":10541},{"type":17,"tag":79,"props":25064,"children":25066},{"className":25065},[],[25067],{"type":23,"value":10547},{"type":23,"value":7140},{"type":17,"tag":26,"props":25070,"children":25071},{},[25072,25073,25078,25079,25084],{"type":23,"value":3191},{"type":17,"tag":79,"props":25074,"children":25076},{"className":25075},[],[25077],{"type":23,"value":10547},{"type":23,"value":10559},{"type":17,"tag":79,"props":25080,"children":25082},{"className":25081},[],[25083],{"type":23,"value":10547},{"type":23,"value":5672},{"type":17,"tag":275,"props":25086,"children":25088},{"code":10568,"language":432,"meta":8,"className":25087},[527],[25089],{"type":17,"tag":79,"props":25090,"children":25091},{"__ignoreMap":8},[25092],{"type":23,"value":10568},{"type":17,"tag":26,"props":25094,"children":25095},{},[25096],{"type":23,"value":7165},{"type":17,"tag":235,"props":25098,"children":25099},{},[25100,25109,25124,25133,25148],{"type":17,"tag":36,"props":25101,"children":25102},{},[25103,25108],{"type":17,"tag":79,"props":25104,"children":25106},{"className":25105},[],[25107],{"type":23,"value":105},{"type":23,"value":10591},{"type":17,"tag":36,"props":25110,"children":25111},{},[25112,25117,25118,25123],{"type":17,"tag":79,"props":25113,"children":25115},{"className":25114},[],[25116],{"type":23,"value":8377},{"type":23,"value":10601},{"type":17,"tag":79,"props":25119,"children":25121},{"className":25120},[],[25122],{"type":23,"value":8385},{"type":23,"value":10608},{"type":17,"tag":36,"props":25125,"children":25126},{},[25127,25132],{"type":17,"tag":79,"props":25128,"children":25130},{"className":25129},[],[25131],{"type":23,"value":10280},{"type":23,"value":10282},{"type":17,"tag":36,"props":25134,"children":25135},{},[25136,25141,25142,25147],{"type":17,"tag":79,"props":25137,"children":25139},{"className":25138},[],[25140],{"type":23,"value":10626},{"type":23,"value":10292},{"type":17,"tag":79,"props":25143,"children":25145},{"className":25144},[],[25146],{"type":23,"value":2005},{"type":23,"value":10634},{"type":17,"tag":36,"props":25149,"children":25150},{},[25151,25156,25157,25162],{"type":17,"tag":79,"props":25152,"children":25154},{"className":25153},[],[25155],{"type":23,"value":8405},{"type":23,"value":10292},{"type":17,"tag":79,"props":25158,"children":25160},{"className":25159},[],[25161],{"type":23,"value":2005},{"type":23,"value":8413},{"type":17,"tag":26,"props":25164,"children":25165},{},[25166,25167,25172],{"type":23,"value":8418},{"type":17,"tag":79,"props":25168,"children":25170},{"className":25169},[],[25171],{"type":23,"value":10547},{"type":23,"value":10660},{"type":17,"tag":518,"props":25174,"children":25175},{":editable":520,":show-in-col":520,"max-height":521},[25176],{"type":17,"tag":275,"props":25177,"children":25179},{"code":10666,"language":432,"meta":8,"className":25178},[527],[25180],{"type":17,"tag":79,"props":25181,"children":25182},{"__ignoreMap":8},[25183],{"type":23,"value":10666},{"type":17,"tag":96,"props":25185,"children":25186},{"id":10675},[25187,25188,25193],{"type":23,"value":10678},{"type":17,"tag":79,"props":25189,"children":25191},{"className":25190},[],[25192],{"type":23,"value":10684},{"type":23,"value":7140},{"type":17,"tag":26,"props":25195,"children":25196},{},[25197,25198,25203,25204,25209],{"type":23,"value":3191},{"type":17,"tag":79,"props":25199,"children":25201},{"className":25200},[],[25202],{"type":23,"value":10684},{"type":23,"value":10696},{"type":17,"tag":79,"props":25205,"children":25207},{"className":25206},[],[25208],{"type":23,"value":10684},{"type":23,"value":5672},{"type":17,"tag":275,"props":25211,"children":25213},{"code":10705,"language":432,"meta":8,"className":25212},[527],[25214],{"type":17,"tag":79,"props":25215,"children":25216},{"__ignoreMap":8},[25217],{"type":23,"value":10705},{"type":17,"tag":26,"props":25219,"children":25220},{},[25221],{"type":23,"value":7165},{"type":17,"tag":235,"props":25223,"children":25224},{},[25225,25234,25249,25258,25267,25276],{"type":17,"tag":36,"props":25226,"children":25227},{},[25228,25233],{"type":17,"tag":79,"props":25229,"children":25231},{"className":25230},[],[25232],{"type":23,"value":105},{"type":23,"value":10728},{"type":17,"tag":36,"props":25235,"children":25236},{},[25237,25242,25243,25248],{"type":17,"tag":79,"props":25238,"children":25240},{"className":25239},[],[25241],{"type":23,"value":8377},{"type":23,"value":10738},{"type":17,"tag":79,"props":25244,"children":25246},{"className":25245},[],[25247],{"type":23,"value":8385},{"type":23,"value":10745},{"type":17,"tag":36,"props":25250,"children":25251},{},[25252,25257],{"type":17,"tag":79,"props":25253,"children":25255},{"className":25254},[],[25256],{"type":23,"value":6791},{"type":23,"value":10488},{"type":17,"tag":36,"props":25259,"children":25260},{},[25261,25266],{"type":17,"tag":79,"props":25262,"children":25264},{"className":25263},[],[25265],{"type":23,"value":10280},{"type":23,"value":10282},{"type":17,"tag":36,"props":25268,"children":25269},{},[25270,25275],{"type":17,"tag":79,"props":25271,"children":25273},{"className":25272},[],[25274],{"type":23,"value":10772},{"type":23,"value":10774},{"type":17,"tag":36,"props":25277,"children":25278},{},[25279,25284,25285,25290],{"type":17,"tag":79,"props":25280,"children":25282},{"className":25281},[],[25283],{"type":23,"value":8405},{"type":23,"value":10292},{"type":17,"tag":79,"props":25286,"children":25288},{"className":25287},[],[25289],{"type":23,"value":2005},{"type":23,"value":8413},{"type":17,"tag":26,"props":25292,"children":25293},{},[25294,25295,25300],{"type":23,"value":8418},{"type":17,"tag":79,"props":25296,"children":25298},{"className":25297},[],[25299],{"type":23,"value":10684},{"type":23,"value":10800},{"type":17,"tag":518,"props":25302,"children":25303},{":editable":520,":show-in-col":520,"max-height":521},[25304],{"type":17,"tag":275,"props":25305,"children":25307},{"code":10806,"language":432,"meta":8,"className":25306},[527],[25308],{"type":17,"tag":79,"props":25309,"children":25310},{"__ignoreMap":8},[25311],{"type":23,"value":10806},{"type":17,"tag":96,"props":25313,"children":25314},{"id":10815},[25315,25316,25321],{"type":23,"value":10818},{"type":17,"tag":79,"props":25317,"children":25319},{"className":25318},[],[25320],{"type":23,"value":10824},{"type":23,"value":7140},{"type":17,"tag":26,"props":25323,"children":25324},{},[25325,25326,25331,25332,25337],{"type":23,"value":3191},{"type":17,"tag":79,"props":25327,"children":25329},{"className":25328},[],[25330],{"type":23,"value":10824},{"type":23,"value":10836},{"type":17,"tag":79,"props":25333,"children":25335},{"className":25334},[],[25336],{"type":23,"value":10824},{"type":23,"value":5672},{"type":17,"tag":275,"props":25339,"children":25341},{"code":10845,"language":432,"meta":8,"className":25340},[527],[25342],{"type":17,"tag":79,"props":25343,"children":25344},{"__ignoreMap":8},[25345],{"type":23,"value":10845},{"type":17,"tag":26,"props":25347,"children":25348},{},[25349,25350,25355],{"type":23,"value":8418},{"type":17,"tag":79,"props":25351,"children":25353},{"className":25352},[],[25354],{"type":23,"value":10824},{"type":23,"value":10862},{"type":17,"tag":518,"props":25357,"children":25358},{":editable":520,":show-in-col":520,"max-height":521},[25359],{"type":17,"tag":275,"props":25360,"children":25362},{"code":10868,"language":432,"meta":8,"className":25361},[527],[25363],{"type":17,"tag":79,"props":25364,"children":25365},{"__ignoreMap":8},[25366],{"type":23,"value":10868},{"title":8,"searchDepth":11,"depth":11,"links":25368},[25369,25373,25377,25378],{"id":6446,"depth":11,"text":6449,"children":25370},[25371,25372],{"id":6452,"depth":375,"text":6455},{"id":6514,"depth":375,"text":6517},{"id":6589,"depth":11,"text":6592,"children":25374},[25375,25376],{"id":6595,"depth":375,"text":6598},{"id":7099,"depth":375,"text":7102},{"id":7851,"depth":11,"text":7854},{"id":8054,"depth":11,"text":8057,"children":25379},[25380,25381],{"id":8060,"depth":375,"text":8063},{"id":8522,"depth":375,"text":8525},{"_path":10894,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":10895,"description":10896,"navigation":396,"index":8271,"icon":12,"body":25383,"_type":386,"_id":14202,"_source":388,"_file":14203,"_stem":14204,"_extension":391},{"type":14,"children":25384,"toc":28203},[25385,25389,25393,25397,25401,25405,25424,25428,25442,25461,25472,25476,25492,25591,25607,25615,25619,25760,25766,25776,25784,25788,25796,25806,25814,25824,25832,25836,25844,25872,25880,25902,25910,25914,25922,25932,25940,25944,25952,25968,25972,25988,25998,26079,26095,26103,26107,26212,26221,26227,26237,26245,26249,26257,26279,26289,26300,26316,26320,26331,26347,26351,26362,26372,26379,26390,26397,26408,26421,26432,26439,26450,26463,26474,26493,26504,26520,26524,26528,26538,26546,26552,26571,26579,26595,26649,26657,26670,26678,26691,26699,26706,26714,26721,26729,26733,26737,26741,26749,26762,26770,26777,26787,26795,26805,26813,26817,26825,26835,26843,26847,26855,26859,26867,26877,26890,26898,26919,26923,26927,26931,26935,26939,26945,26970,26978,26982,26990,27033,27064,27072,27076,27084,27103,27111,27115,27211,27221,27229,27233,27241,27254,27262,27266,27274,27290,27294,27298,27304,27317,27328,27347,27358,27362,27372,27380,27384,27392,27408,27419,27423,27427,27435,27443,27447,27451,27455,27640,27644,27656,27667,27679,27690,27702,27713,27725,27736,27748,27759,27771,27782,27786,27799,27807,27811,27868,27879,27886,27894,27898,27946,27957,27961,27973,27984,27996,28007,28014,28022,28026,28065,28076,28080,28092,28100,28104,28112,28124,28132,28136,28144,28148,28160,28168,28172,28180,28192],{"type":17,"tag":18,"props":25386,"children":25387},{"id":10901},[25388],{"type":23,"value":10904},{"type":17,"tag":26,"props":25390,"children":25391},{},[25392],{"type":23,"value":10909},{"type":17,"tag":26,"props":25394,"children":25395},{},[25396],{"type":23,"value":10914},{"type":17,"tag":26,"props":25398,"children":25399},{},[25400],{"type":23,"value":10919},{"type":17,"tag":26,"props":25402,"children":25403},{},[25404],{"type":23,"value":10924},{"type":17,"tag":235,"props":25406,"children":25407},{},[25408,25412,25416,25420],{"type":17,"tag":36,"props":25409,"children":25410},{},[25411],{"type":23,"value":10932},{"type":17,"tag":36,"props":25413,"children":25414},{},[25415],{"type":23,"value":10937},{"type":17,"tag":36,"props":25417,"children":25418},{},[25419],{"type":23,"value":10942},{"type":17,"tag":36,"props":25421,"children":25422},{},[25423],{"type":23,"value":10947},{"type":17,"tag":18,"props":25425,"children":25426},{"id":10950},[25427],{"type":23,"value":10953},{"type":17,"tag":26,"props":25429,"children":25430},{},[25431,25432,25436,25437,25441],{"type":23,"value":10958},{"type":17,"tag":1136,"props":25433,"children":25434},{},[25435],{"type":23,"value":10963},{"type":23,"value":86},{"type":17,"tag":1136,"props":25438,"children":25439},{},[25440],{"type":23,"value":10969},{"type":23,"value":1517},{"type":17,"tag":235,"props":25443,"children":25444},{},[25445,25453],{"type":17,"tag":36,"props":25446,"children":25447},{},[25448,25452],{"type":17,"tag":1136,"props":25449,"children":25450},{},[25451],{"type":23,"value":10969},{"type":23,"value":10982},{"type":17,"tag":36,"props":25454,"children":25455},{},[25456,25460],{"type":17,"tag":1136,"props":25457,"children":25458},{},[25459],{"type":23,"value":10963},{"type":23,"value":10991},{"type":17,"tag":836,"props":25462,"children":25463},{},[25464],{"type":17,"tag":26,"props":25465,"children":25466},{},[25467,25471],{"type":17,"tag":2020,"props":25468,"children":25469},{},[25470],{"type":23,"value":2024},{"type":23,"value":11003},{"type":17,"tag":96,"props":25473,"children":25474},{"id":11006},[25475],{"type":23,"value":11009},{"type":17,"tag":26,"props":25477,"children":25478},{},[25479,25480,25485,25486,25491],{"type":23,"value":11014},{"type":17,"tag":79,"props":25481,"children":25483},{"className":25482},[],[25484],{"type":23,"value":10969},{"type":23,"value":11021},{"type":17,"tag":79,"props":25487,"children":25489},{"className":25488},[],[25490],{"type":23,"value":10969},{"type":23,"value":11028},{"type":17,"tag":235,"props":25493,"children":25494},{},[25495,25509,25517,25531,25545,25565],{"type":17,"tag":36,"props":25496,"children":25497},{},[25498,25502,25503,25508],{"type":17,"tag":1136,"props":25499,"children":25500},{},[25501],{"type":23,"value":11039},{"type":23,"value":11041},{"type":17,"tag":79,"props":25504,"children":25506},{"className":25505},[],[25507],{"type":23,"value":10969},{"type":23,"value":11048},{"type":17,"tag":36,"props":25510,"children":25511},{},[25512,25516],{"type":17,"tag":1136,"props":25513,"children":25514},{},[25515],{"type":23,"value":11056},{"type":23,"value":11058},{"type":17,"tag":36,"props":25518,"children":25519},{},[25520,25524,25525,25530],{"type":17,"tag":1136,"props":25521,"children":25522},{},[25523],{"type":23,"value":11066},{"type":23,"value":11041},{"type":17,"tag":79,"props":25526,"children":25528},{"className":25527},[],[25529],{"type":23,"value":10969},{"type":23,"value":11074},{"type":17,"tag":36,"props":25532,"children":25533},{},[25534,25538,25539,25544],{"type":17,"tag":1136,"props":25535,"children":25536},{},[25537],{"type":23,"value":11082},{"type":23,"value":11084},{"type":17,"tag":79,"props":25540,"children":25542},{"className":25541},[],[25543],{"type":23,"value":10969},{"type":23,"value":11091},{"type":17,"tag":36,"props":25546,"children":25547},{},[25548,25552,25553,25558,25559,25564],{"type":17,"tag":1136,"props":25549,"children":25550},{},[25551],{"type":23,"value":11099},{"type":23,"value":11041},{"type":17,"tag":79,"props":25554,"children":25556},{"className":25555},[],[25557],{"type":23,"value":10969},{"type":23,"value":11107},{"type":17,"tag":79,"props":25560,"children":25562},{"className":25561},[],[25563],{"type":23,"value":11113},{"type":23,"value":11115},{"type":17,"tag":36,"props":25566,"children":25567},{},[25568,25572,25573,25578,25579,25584,25585,25590],{"type":17,"tag":1136,"props":25569,"children":25570},{},[25571],{"type":23,"value":11123},{"type":23,"value":11125},{"type":17,"tag":79,"props":25574,"children":25576},{"className":25575},[],[25577],{"type":23,"value":10969},{"type":23,"value":11132},{"type":17,"tag":79,"props":25580,"children":25582},{"className":25581},[],[25583],{"type":23,"value":11138},{"type":23,"value":86},{"type":17,"tag":79,"props":25586,"children":25588},{"className":25587},[],[25589],{"type":23,"value":11145},{"type":23,"value":1517},{"type":17,"tag":26,"props":25592,"children":25593},{},[25594,25595,25600,25601,25606],{"type":23,"value":11151},{"type":17,"tag":79,"props":25596,"children":25598},{"className":25597},[],[25599],{"type":23,"value":10969},{"type":23,"value":11158},{"type":17,"tag":79,"props":25602,"children":25604},{"className":25603},[],[25605],{"type":23,"value":11164},{"type":23,"value":11166},{"type":17,"tag":275,"props":25608,"children":25610},{"className":25609,"code":11170,"language":432,"meta":8},[527],[25611],{"type":17,"tag":79,"props":25612,"children":25613},{"__ignoreMap":8},[25614],{"type":23,"value":11170},{"type":17,"tag":26,"props":25616,"children":25617},{},[25618],{"type":23,"value":11180},{"type":17,"tag":235,"props":25620,"children":25621},{},[25622,25646,25664,25694,25718,25742],{"type":17,"tag":36,"props":25623,"children":25624},{},[25625,25633,25634,25639,25640,25645],{"type":17,"tag":1136,"props":25626,"children":25627},{},[25628],{"type":17,"tag":79,"props":25629,"children":25631},{"className":25630},[],[25632],{"type":23,"value":594},{"type":23,"value":11196},{"type":17,"tag":79,"props":25635,"children":25637},{"className":25636},[],[25638],{"type":23,"value":10969},{"type":23,"value":11203},{"type":17,"tag":79,"props":25641,"children":25643},{"className":25642},[],[25644],{"type":23,"value":10969},{"type":23,"value":11210},{"type":17,"tag":36,"props":25647,"children":25648},{},[25649,25657,25658,25663],{"type":17,"tag":1136,"props":25650,"children":25651},{},[25652],{"type":17,"tag":79,"props":25653,"children":25655},{"className":25654},[],[25656],{"type":23,"value":11222},{"type":23,"value":11224},{"type":17,"tag":79,"props":25659,"children":25661},{"className":25660},[],[25662],{"type":23,"value":10969},{"type":23,"value":11231},{"type":17,"tag":36,"props":25665,"children":25666},{},[25667,25675,25676,25681,25682,25687,25688,25693],{"type":17,"tag":1136,"props":25668,"children":25669},{},[25670],{"type":17,"tag":79,"props":25671,"children":25673},{"className":25672},[],[25674],{"type":23,"value":6791},{"type":23,"value":11244},{"type":17,"tag":79,"props":25677,"children":25679},{"className":25678},[],[25680],{"type":23,"value":10969},{"type":23,"value":11251},{"type":17,"tag":79,"props":25683,"children":25685},{"className":25684},[],[25686],{"type":23,"value":11257},{"type":23,"value":1895},{"type":17,"tag":79,"props":25689,"children":25691},{"className":25690},[],[25692],{"type":23,"value":11264},{"type":23,"value":11266},{"type":17,"tag":36,"props":25695,"children":25696},{},[25697,25705,25706,25711,25712,25717],{"type":17,"tag":1136,"props":25698,"children":25699},{},[25700],{"type":17,"tag":79,"props":25701,"children":25703},{"className":25702},[],[25704],{"type":23,"value":4329},{"type":23,"value":11279},{"type":17,"tag":79,"props":25707,"children":25709},{"className":25708},[],[25710],{"type":23,"value":10969},{"type":23,"value":11286},{"type":17,"tag":79,"props":25713,"children":25715},{"className":25714},[],[25716],{"type":23,"value":10969},{"type":23,"value":11293},{"type":17,"tag":36,"props":25719,"children":25720},{},[25721,25729,25730,25735,25736,25741],{"type":17,"tag":1136,"props":25722,"children":25723},{},[25724],{"type":17,"tag":79,"props":25725,"children":25727},{"className":25726},[],[25728],{"type":23,"value":7198},{"type":23,"value":11306},{"type":17,"tag":79,"props":25731,"children":25733},{"className":25732},[],[25734],{"type":23,"value":2005},{"type":23,"value":11313},{"type":17,"tag":79,"props":25737,"children":25739},{"className":25738},[],[25740],{"type":23,"value":2012},{"type":23,"value":11320},{"type":17,"tag":36,"props":25743,"children":25744},{},[25745,25753,25754,25759],{"type":17,"tag":1136,"props":25746,"children":25747},{},[25748],{"type":17,"tag":79,"props":25749,"children":25751},{"className":25750},[],[25752],{"type":23,"value":11332},{"type":23,"value":11334},{"type":17,"tag":79,"props":25755,"children":25757},{"className":25756},[],[25758],{"type":23,"value":2012},{"type":23,"value":11341},{"type":17,"tag":26,"props":25761,"children":25762},{},[25763],{"type":17,"tag":714,"props":25764,"children":25765},{"alt":8,"src":11347},[],{"type":17,"tag":26,"props":25767,"children":25768},{},[25769,25770,25775],{"type":23,"value":11353},{"type":17,"tag":79,"props":25771,"children":25773},{"className":25772},[],[25774],{"type":23,"value":10969},{"type":23,"value":11360},{"type":17,"tag":275,"props":25777,"children":25779},{"className":25778,"code":11364,"language":432,"meta":8},[527],[25780],{"type":17,"tag":79,"props":25781,"children":25782},{"__ignoreMap":8},[25783],{"type":23,"value":11364},{"type":17,"tag":26,"props":25785,"children":25786},{},[25787],{"type":23,"value":11374},{"type":17,"tag":275,"props":25789,"children":25791},{"className":25790,"code":11379,"language":11380,"meta":8},[11378],[25792],{"type":17,"tag":79,"props":25793,"children":25794},{"__ignoreMap":8},[25795],{"type":23,"value":11379},{"type":17,"tag":26,"props":25797,"children":25798},{},[25799,25800,25805],{"type":23,"value":11390},{"type":17,"tag":79,"props":25801,"children":25803},{"className":25802},[],[25804],{"type":23,"value":10969},{"type":23,"value":11397},{"type":17,"tag":275,"props":25807,"children":25809},{"className":25808,"code":11401,"language":432,"meta":8},[527],[25810],{"type":17,"tag":79,"props":25811,"children":25812},{"__ignoreMap":8},[25813],{"type":23,"value":11401},{"type":17,"tag":26,"props":25815,"children":25816},{},[25817,25818,25823],{"type":23,"value":11411},{"type":17,"tag":79,"props":25819,"children":25821},{"className":25820},[],[25822],{"type":23,"value":10969},{"type":23,"value":11418},{"type":17,"tag":275,"props":25825,"children":25827},{"className":25826,"code":11422,"language":432,"meta":8},[527],[25828],{"type":17,"tag":79,"props":25829,"children":25830},{"__ignoreMap":8},[25831],{"type":23,"value":11422},{"type":17,"tag":26,"props":25833,"children":25834},{},[25835],{"type":23,"value":11374},{"type":17,"tag":275,"props":25837,"children":25839},{"className":25838,"code":11435,"language":11380,"meta":8},[11378],[25840],{"type":17,"tag":79,"props":25841,"children":25842},{"__ignoreMap":8},[25843],{"type":23,"value":11435},{"type":17,"tag":26,"props":25845,"children":25846},{},[25847,25848,25853,25854,25859,25860,25865,25866,25871],{"type":23,"value":11445},{"type":17,"tag":79,"props":25849,"children":25851},{"className":25850},[],[25852],{"type":23,"value":2188},{"type":23,"value":1895},{"type":17,"tag":79,"props":25855,"children":25857},{"className":25856},[],[25858],{"type":23,"value":11457},{"type":23,"value":1895},{"type":17,"tag":79,"props":25861,"children":25863},{"className":25862},[],[25864],{"type":23,"value":11464},{"type":23,"value":3281},{"type":17,"tag":79,"props":25867,"children":25869},{"className":25868},[],[25870],{"type":23,"value":11471},{"type":23,"value":11473},{"type":17,"tag":275,"props":25873,"children":25875},{"className":25874,"code":11477,"language":432,"meta":8},[527],[25876],{"type":17,"tag":79,"props":25877,"children":25878},{"__ignoreMap":8},[25879],{"type":23,"value":11477},{"type":17,"tag":26,"props":25881,"children":25882},{},[25883,25884,25889,25890,25895,25896,25901],{"type":23,"value":11487},{"type":17,"tag":79,"props":25885,"children":25887},{"className":25886},[],[25888],{"type":23,"value":10969},{"type":23,"value":11494},{"type":17,"tag":79,"props":25891,"children":25893},{"className":25892},[],[25894],{"type":23,"value":10969},{"type":23,"value":11501},{"type":17,"tag":79,"props":25897,"children":25899},{"className":25898},[],[25900],{"type":23,"value":10969},{"type":23,"value":920},{"type":17,"tag":275,"props":25903,"children":25905},{"className":25904,"code":11511,"language":432,"meta":8},[527],[25906],{"type":17,"tag":79,"props":25907,"children":25908},{"__ignoreMap":8},[25909],{"type":23,"value":11511},{"type":17,"tag":26,"props":25911,"children":25912},{},[25913],{"type":23,"value":11374},{"type":17,"tag":275,"props":25915,"children":25917},{"className":25916,"code":11524,"language":11380,"meta":8},[11378],[25918],{"type":17,"tag":79,"props":25919,"children":25920},{"__ignoreMap":8},[25921],{"type":23,"value":11524},{"type":17,"tag":26,"props":25923,"children":25924},{},[25925,25926,25931],{"type":23,"value":11534},{"type":17,"tag":79,"props":25927,"children":25929},{"className":25928},[],[25930],{"type":23,"value":10969},{"type":23,"value":920},{"type":17,"tag":275,"props":25933,"children":25935},{"className":25934,"code":11544,"language":432,"meta":8},[527],[25936],{"type":17,"tag":79,"props":25937,"children":25938},{"__ignoreMap":8},[25939],{"type":23,"value":11544},{"type":17,"tag":26,"props":25941,"children":25942},{},[25943],{"type":23,"value":11374},{"type":17,"tag":275,"props":25945,"children":25947},{"className":25946,"code":11557,"language":11380,"meta":8},[11378],[25948],{"type":17,"tag":79,"props":25949,"children":25950},{"__ignoreMap":8},[25951],{"type":23,"value":11557},{"type":17,"tag":26,"props":25953,"children":25954},{},[25955,25956,25961,25962,25967],{"type":23,"value":11567},{"type":17,"tag":79,"props":25957,"children":25959},{"className":25958},[],[25960],{"type":23,"value":10969},{"type":23,"value":11574},{"type":17,"tag":79,"props":25963,"children":25965},{"className":25964},[],[25966],{"type":23,"value":10969},{"type":23,"value":11581},{"type":17,"tag":96,"props":25969,"children":25970},{"id":11584},[25971],{"type":23,"value":11587},{"type":17,"tag":26,"props":25973,"children":25974},{},[25975,25976,25981,25982,25987],{"type":23,"value":11014},{"type":17,"tag":79,"props":25977,"children":25979},{"className":25978},[],[25980],{"type":23,"value":10963},{"type":23,"value":11598},{"type":17,"tag":79,"props":25983,"children":25985},{"className":25984},[],[25986],{"type":23,"value":10963},{"type":23,"value":11605},{"type":17,"tag":26,"props":25989,"children":25990},{},[25991,25992,25997],{"type":23,"value":11610},{"type":17,"tag":79,"props":25993,"children":25995},{"className":25994},[],[25996],{"type":23,"value":10963},{"type":23,"value":11028},{"type":17,"tag":235,"props":25999,"children":26000},{},[26001,26015,26023,26031,26045,26065],{"type":17,"tag":36,"props":26002,"children":26003},{},[26004,26008,26009,26014],{"type":17,"tag":1136,"props":26005,"children":26006},{},[26007],{"type":23,"value":11627},{"type":23,"value":11041},{"type":17,"tag":79,"props":26010,"children":26012},{"className":26011},[],[26013],{"type":23,"value":10963},{"type":23,"value":11635},{"type":17,"tag":36,"props":26016,"children":26017},{},[26018,26022],{"type":17,"tag":1136,"props":26019,"children":26020},{},[26021],{"type":23,"value":11643},{"type":23,"value":11645},{"type":17,"tag":36,"props":26024,"children":26025},{},[26026,26030],{"type":17,"tag":1136,"props":26027,"children":26028},{},[26029],{"type":23,"value":11653},{"type":23,"value":11655},{"type":17,"tag":36,"props":26032,"children":26033},{},[26034,26038,26039,26044],{"type":17,"tag":1136,"props":26035,"children":26036},{},[26037],{"type":23,"value":11082},{"type":23,"value":11084},{"type":17,"tag":79,"props":26040,"children":26042},{"className":26041},[],[26043],{"type":23,"value":10963},{"type":23,"value":11670},{"type":17,"tag":36,"props":26046,"children":26047},{},[26048,26052,26053,26058,26059,26064],{"type":17,"tag":1136,"props":26049,"children":26050},{},[26051],{"type":23,"value":11099},{"type":23,"value":11041},{"type":17,"tag":79,"props":26054,"children":26056},{"className":26055},[],[26057],{"type":23,"value":10963},{"type":23,"value":11685},{"type":17,"tag":79,"props":26060,"children":26062},{"className":26061},[],[26063],{"type":23,"value":11113},{"type":23,"value":11692},{"type":17,"tag":36,"props":26066,"children":26067},{},[26068,26072,26073,26078],{"type":17,"tag":1136,"props":26069,"children":26070},{},[26071],{"type":23,"value":11700},{"type":23,"value":11041},{"type":17,"tag":79,"props":26074,"children":26076},{"className":26075},[],[26077],{"type":23,"value":10963},{"type":23,"value":11708},{"type":17,"tag":26,"props":26080,"children":26081},{},[26082,26083,26088,26089,26094],{"type":23,"value":11151},{"type":17,"tag":79,"props":26084,"children":26086},{"className":26085},[],[26087],{"type":23,"value":10963},{"type":23,"value":11719},{"type":17,"tag":79,"props":26090,"children":26092},{"className":26091},[],[26093],{"type":23,"value":11725},{"type":23,"value":11727},{"type":17,"tag":275,"props":26096,"children":26098},{"className":26097,"code":11731,"language":432,"meta":8},[527],[26099],{"type":17,"tag":79,"props":26100,"children":26101},{"__ignoreMap":8},[26102],{"type":23,"value":11731},{"type":17,"tag":26,"props":26104,"children":26105},{},[26106],{"type":23,"value":11180},{"type":17,"tag":235,"props":26108,"children":26109},{},[26110,26134,26152,26170,26188],{"type":17,"tag":36,"props":26111,"children":26112},{},[26113,26121,26122,26127,26128,26133],{"type":17,"tag":1136,"props":26114,"children":26115},{},[26116],{"type":17,"tag":79,"props":26117,"children":26119},{"className":26118},[],[26120],{"type":23,"value":594},{"type":23,"value":11196},{"type":17,"tag":79,"props":26123,"children":26125},{"className":26124},[],[26126],{"type":23,"value":10963},{"type":23,"value":11762},{"type":17,"tag":79,"props":26129,"children":26131},{"className":26130},[],[26132],{"type":23,"value":10963},{"type":23,"value":11769},{"type":17,"tag":36,"props":26135,"children":26136},{},[26137,26145,26146,26151],{"type":17,"tag":1136,"props":26138,"children":26139},{},[26140],{"type":17,"tag":79,"props":26141,"children":26143},{"className":26142},[],[26144],{"type":23,"value":11222},{"type":23,"value":11782},{"type":17,"tag":79,"props":26147,"children":26149},{"className":26148},[],[26150],{"type":23,"value":10963},{"type":23,"value":11789},{"type":17,"tag":36,"props":26153,"children":26154},{},[26155,26163,26164,26169],{"type":17,"tag":1136,"props":26156,"children":26157},{},[26158],{"type":17,"tag":79,"props":26159,"children":26161},{"className":26160},[],[26162],{"type":23,"value":11801},{"type":23,"value":11803},{"type":17,"tag":79,"props":26165,"children":26167},{"className":26166},[],[26168],{"type":23,"value":10963},{"type":23,"value":11810},{"type":17,"tag":36,"props":26171,"children":26172},{},[26173,26181,26182,26187],{"type":17,"tag":1136,"props":26174,"children":26175},{},[26176],{"type":17,"tag":79,"props":26177,"children":26179},{"className":26178},[],[26180],{"type":23,"value":6791},{"type":23,"value":11244},{"type":17,"tag":79,"props":26183,"children":26185},{"className":26184},[],[26186],{"type":23,"value":10963},{"type":23,"value":11829},{"type":17,"tag":36,"props":26189,"children":26190},{},[26191,26199,26200,26205,26206,26211],{"type":17,"tag":1136,"props":26192,"children":26193},{},[26194],{"type":17,"tag":79,"props":26195,"children":26197},{"className":26196},[],[26198],{"type":23,"value":7198},{"type":23,"value":11842},{"type":17,"tag":79,"props":26201,"children":26203},{"className":26202},[],[26204],{"type":23,"value":2012},{"type":23,"value":11849},{"type":17,"tag":79,"props":26207,"children":26209},{"className":26208},[],[26210],{"type":23,"value":2005},{"type":23,"value":11856},{"type":17,"tag":26,"props":26213,"children":26214},{},[26215,26216],{"type":23,"value":11861},{"type":17,"tag":79,"props":26217,"children":26219},{"className":26218},[],[26220],{"type":23,"value":10963},{"type":17,"tag":26,"props":26222,"children":26223},{},[26224],{"type":17,"tag":714,"props":26225,"children":26226},{"alt":8,"src":11872},[],{"type":17,"tag":26,"props":26228,"children":26229},{},[26230,26231,26236],{"type":23,"value":11878},{"type":17,"tag":79,"props":26232,"children":26234},{"className":26233},[],[26235],{"type":23,"value":10963},{"type":23,"value":11885},{"type":17,"tag":275,"props":26238,"children":26240},{"className":26239,"code":11889,"language":432,"meta":8},[527],[26241],{"type":17,"tag":79,"props":26242,"children":26243},{"__ignoreMap":8},[26244],{"type":23,"value":11889},{"type":17,"tag":26,"props":26246,"children":26247},{},[26248],{"type":23,"value":11374},{"type":17,"tag":275,"props":26250,"children":26252},{"className":26251,"code":11902,"language":11380,"meta":8},[11378],[26253],{"type":17,"tag":79,"props":26254,"children":26255},{"__ignoreMap":8},[26256],{"type":23,"value":11902},{"type":17,"tag":26,"props":26258,"children":26259},{},[26260,26261,26266,26267,26272,26273,26278],{"type":23,"value":11912},{"type":17,"tag":79,"props":26262,"children":26264},{"className":26263},[],[26265],{"type":23,"value":11918},{"type":23,"value":1895},{"type":17,"tag":79,"props":26268,"children":26270},{"className":26269},[],[26271],{"type":23,"value":11925},{"type":23,"value":3281},{"type":17,"tag":79,"props":26274,"children":26276},{"className":26275},[],[26277],{"type":23,"value":11932},{"type":23,"value":11934},{"type":17,"tag":26,"props":26280,"children":26281},{},[26282,26283,26288],{"type":23,"value":11939},{"type":17,"tag":79,"props":26284,"children":26286},{"className":26285},[],[26287],{"type":23,"value":10963},{"type":23,"value":11946},{"type":17,"tag":518,"props":26290,"children":26291},{":editable":520,":show-in-col":520,"max-height":521},[26292],{"type":17,"tag":275,"props":26293,"children":26295},{"className":26294,"code":11953,"language":432,"meta":8},[527],[26296],{"type":17,"tag":79,"props":26297,"children":26298},{"__ignoreMap":8},[26299],{"type":23,"value":11953},{"type":17,"tag":26,"props":26301,"children":26302},{},[26303,26304,26309,26310,26315],{"type":23,"value":11963},{"type":17,"tag":79,"props":26305,"children":26307},{"className":26306},[],[26308],{"type":23,"value":11801},{"type":23,"value":11970},{"type":17,"tag":79,"props":26311,"children":26313},{"className":26312},[],[26314],{"type":23,"value":10963},{"type":23,"value":1517},{"type":17,"tag":26,"props":26317,"children":26318},{},[26319],{"type":23,"value":11981},{"type":17,"tag":518,"props":26321,"children":26322},{":editable":520,":show-in-col":520,"max-height":521},[26323],{"type":17,"tag":275,"props":26324,"children":26326},{"className":26325,"code":11988,"language":432,"meta":8},[527],[26327],{"type":17,"tag":79,"props":26328,"children":26329},{"__ignoreMap":8},[26330],{"type":23,"value":11988},{"type":17,"tag":26,"props":26332,"children":26333},{},[26334,26335,26340,26341,26346],{"type":23,"value":11998},{"type":17,"tag":79,"props":26336,"children":26338},{"className":26337},[],[26339],{"type":23,"value":11222},{"type":23,"value":12005},{"type":17,"tag":79,"props":26342,"children":26344},{"className":26343},[],[26345],{"type":23,"value":10963},{"type":23,"value":1517},{"type":17,"tag":26,"props":26348,"children":26349},{},[26350],{"type":23,"value":12016},{"type":17,"tag":518,"props":26352,"children":26353},{":editable":520,":show-in-col":520,"max-height":521},[26354],{"type":17,"tag":275,"props":26355,"children":26357},{"className":26356,"code":12023,"language":432,"meta":8},[527],[26358],{"type":17,"tag":79,"props":26359,"children":26360},{"__ignoreMap":8},[26361],{"type":23,"value":12023},{"type":17,"tag":26,"props":26363,"children":26364},{},[26365,26366,26371],{"type":23,"value":12033},{"type":17,"tag":79,"props":26367,"children":26369},{"className":26368},[],[26370],{"type":23,"value":10963},{"type":23,"value":12040},{"type":17,"tag":32,"props":26373,"children":26374},{},[26375],{"type":17,"tag":36,"props":26376,"children":26377},{},[26378],{"type":23,"value":12048},{"type":17,"tag":518,"props":26380,"children":26381},{":editable":520,":show-in-col":520,"max-height":521},[26382],{"type":17,"tag":275,"props":26383,"children":26385},{"className":26384,"code":12055,"language":432,"meta":8},[527],[26386],{"type":17,"tag":79,"props":26387,"children":26388},{"__ignoreMap":8},[26389],{"type":23,"value":12055},{"type":17,"tag":32,"props":26391,"children":26392},{"start":11},[26393],{"type":17,"tag":36,"props":26394,"children":26395},{},[26396],{"type":23,"value":12068},{"type":17,"tag":518,"props":26398,"children":26399},{":editable":520,":show-in-col":520,"max-height":521},[26400],{"type":17,"tag":275,"props":26401,"children":26403},{"className":26402,"code":12075,"language":432,"meta":8},[527],[26404],{"type":17,"tag":79,"props":26405,"children":26406},{"__ignoreMap":8},[26407],{"type":23,"value":12075},{"type":17,"tag":32,"props":26409,"children":26410},{"start":375},[26411],{"type":17,"tag":36,"props":26412,"children":26413},{},[26414,26415,26420],{"type":23,"value":12088},{"type":17,"tag":79,"props":26416,"children":26418},{"className":26417},[],[26419],{"type":23,"value":12094},{"type":23,"value":12096},{"type":17,"tag":518,"props":26422,"children":26423},{":editable":520,":show-in-col":520,"max-height":521},[26424],{"type":17,"tag":275,"props":26425,"children":26427},{"className":26426,"code":12103,"language":432,"meta":8},[527],[26428],{"type":17,"tag":79,"props":26429,"children":26430},{"__ignoreMap":8},[26431],{"type":23,"value":12103},{"type":17,"tag":32,"props":26433,"children":26434},{"start":1858},[26435],{"type":17,"tag":36,"props":26436,"children":26437},{},[26438],{"type":23,"value":12116},{"type":17,"tag":518,"props":26440,"children":26441},{":editable":520,":show-in-col":520,"max-height":521},[26442],{"type":17,"tag":275,"props":26443,"children":26445},{"className":26444,"code":12123,"language":432,"meta":8},[527],[26446],{"type":17,"tag":79,"props":26447,"children":26448},{"__ignoreMap":8},[26449],{"type":23,"value":12123},{"type":17,"tag":32,"props":26451,"children":26452},{"start":8271},[26453],{"type":17,"tag":36,"props":26454,"children":26455},{},[26456,26457,26462],{"type":23,"value":12136},{"type":17,"tag":79,"props":26458,"children":26460},{"className":26459},[],[26461],{"type":23,"value":10963},{"type":23,"value":12143},{"type":17,"tag":518,"props":26464,"children":26465},{":editable":520,":show-in-col":520,"max-height":521},[26466],{"type":17,"tag":275,"props":26467,"children":26469},{"className":26468,"code":12150,"language":432,"meta":8},[527],[26470],{"type":17,"tag":79,"props":26471,"children":26472},{"__ignoreMap":8},[26473],{"type":23,"value":12150},{"type":17,"tag":32,"props":26475,"children":26476},{"start":12158},[26477],{"type":17,"tag":36,"props":26478,"children":26479},{},[26480,26481,26486,26487,26492],{"type":23,"value":12164},{"type":17,"tag":79,"props":26482,"children":26484},{"className":26483},[],[26485],{"type":23,"value":12170},{"type":23,"value":12172},{"type":17,"tag":79,"props":26488,"children":26490},{"className":26489},[],[26491],{"type":23,"value":12178},{"type":23,"value":12180},{"type":17,"tag":518,"props":26494,"children":26495},{":editable":520,":show-in-col":520,"max-height":521},[26496],{"type":17,"tag":275,"props":26497,"children":26499},{"className":26498,"code":12187,"language":432,"meta":8},[527],[26500],{"type":17,"tag":79,"props":26501,"children":26502},{"__ignoreMap":8},[26503],{"type":23,"value":12187},{"type":17,"tag":26,"props":26505,"children":26506},{},[26507,26508,26513,26514,26519],{"type":23,"value":12197},{"type":17,"tag":79,"props":26509,"children":26511},{"className":26510},[],[26512],{"type":23,"value":10963},{"type":23,"value":12204},{"type":17,"tag":79,"props":26515,"children":26517},{"className":26516},[],[26518],{"type":23,"value":10963},{"type":23,"value":12211},{"type":17,"tag":18,"props":26521,"children":26522},{"id":12214},[26523],{"type":23,"value":12217},{"type":17,"tag":96,"props":26525,"children":26526},{"id":12220},[26527],{"type":23,"value":12223},{"type":17,"tag":26,"props":26529,"children":26530},{},[26531,26532,26537],{"type":23,"value":12228},{"type":17,"tag":79,"props":26533,"children":26535},{"className":26534},[],[26536],{"type":23,"value":12234},{"type":23,"value":12236},{"type":17,"tag":275,"props":26539,"children":26541},{"className":26540,"code":12241,"language":12242,"meta":8},[12240],[26542],{"type":17,"tag":79,"props":26543,"children":26544},{"__ignoreMap":8},[26545],{"type":23,"value":12241},{"type":17,"tag":26,"props":26547,"children":26548},{},[26549],{"type":17,"tag":714,"props":26550,"children":26551},{"alt":8,"src":12253},[],{"type":17,"tag":32,"props":26553,"children":26554},{},[26555],{"type":17,"tag":36,"props":26556,"children":26557},{},[26558,26559,26564,26565,26570],{"type":23,"value":12262},{"type":17,"tag":79,"props":26560,"children":26562},{"className":26561},[],[26563],{"type":23,"value":12268},{"type":23,"value":12270},{"type":17,"tag":79,"props":26566,"children":26568},{"className":26567},[],[26569],{"type":23,"value":10963},{"type":23,"value":12277},{"type":17,"tag":275,"props":26572,"children":26574},{"className":26573,"code":12281,"language":432,"meta":8},[527],[26575],{"type":17,"tag":79,"props":26576,"children":26577},{"__ignoreMap":8},[26578],{"type":23,"value":12281},{"type":17,"tag":836,"props":26580,"children":26581},{},[26582],{"type":17,"tag":26,"props":26583,"children":26584},{},[26585,26589,26594],{"type":17,"tag":2020,"props":26586,"children":26587},{},[26588],{"type":23,"value":2024},{"type":17,"tag":79,"props":26590,"children":26592},{"className":26591},[],[26593],{"type":23,"value":12302},{"type":23,"value":12304},{"type":17,"tag":32,"props":26596,"children":26597},{"start":11},[26598],{"type":17,"tag":36,"props":26599,"children":26600},{},[26601,26602],{"type":23,"value":12312},{"type":17,"tag":235,"props":26603,"children":26604},{},[26605,26627],{"type":17,"tag":36,"props":26606,"children":26607},{},[26608,26609,26614,26615,26620,26621,26626],{"type":23,"value":12320},{"type":17,"tag":79,"props":26610,"children":26612},{"className":26611},[],[26613],{"type":23,"value":12326},{"type":23,"value":12328},{"type":17,"tag":79,"props":26616,"children":26618},{"className":26617},[],[26619],{"type":23,"value":7927},{"type":23,"value":12335},{"type":17,"tag":79,"props":26622,"children":26624},{"className":26623},[],[26625],{"type":23,"value":7927},{"type":23,"value":12342},{"type":17,"tag":36,"props":26628,"children":26629},{},[26630,26631,26636,26637,26642,26643,26648],{"type":23,"value":12320},{"type":17,"tag":79,"props":26632,"children":26634},{"className":26633},[],[26635],{"type":23,"value":12352},{"type":23,"value":12354},{"type":17,"tag":79,"props":26638,"children":26640},{"className":26639},[],[26641],{"type":23,"value":7927},{"type":23,"value":12335},{"type":17,"tag":79,"props":26644,"children":26646},{"className":26645},[],[26647],{"type":23,"value":7927},{"type":23,"value":12367},{"type":17,"tag":275,"props":26650,"children":26652},{"className":26651,"code":12371,"language":432,"meta":8},[527],[26653],{"type":17,"tag":79,"props":26654,"children":26655},{"__ignoreMap":8},[26656],{"type":23,"value":12371},{"type":17,"tag":32,"props":26658,"children":26659},{"start":375},[26660],{"type":17,"tag":36,"props":26661,"children":26662},{},[26663,26664,26669],{"type":23,"value":12384},{"type":17,"tag":79,"props":26665,"children":26667},{"className":26666},[],[26668],{"type":23,"value":12390},{"type":23,"value":12392},{"type":17,"tag":275,"props":26671,"children":26673},{"className":26672,"code":12396,"language":432,"meta":8},[527],[26674],{"type":17,"tag":79,"props":26675,"children":26676},{"__ignoreMap":8},[26677],{"type":23,"value":12396},{"type":17,"tag":32,"props":26679,"children":26680},{"start":1858},[26681],{"type":17,"tag":36,"props":26682,"children":26683},{},[26684,26685,26690],{"type":23,"value":12409},{"type":17,"tag":79,"props":26686,"children":26688},{"className":26687},[],[26689],{"type":23,"value":12415},{"type":23,"value":12417},{"type":17,"tag":275,"props":26692,"children":26694},{"className":26693,"code":12421,"language":432,"meta":8},[527],[26695],{"type":17,"tag":79,"props":26696,"children":26697},{"__ignoreMap":8},[26698],{"type":23,"value":12421},{"type":17,"tag":32,"props":26700,"children":26701},{"start":8271},[26702],{"type":17,"tag":36,"props":26703,"children":26704},{},[26705],{"type":23,"value":12434},{"type":17,"tag":275,"props":26707,"children":26709},{"className":26708,"code":12438,"language":432,"meta":8},[527],[26710],{"type":17,"tag":79,"props":26711,"children":26712},{"__ignoreMap":8},[26713],{"type":23,"value":12438},{"type":17,"tag":32,"props":26715,"children":26716},{"start":12158},[26717],{"type":17,"tag":36,"props":26718,"children":26719},{},[26720],{"type":23,"value":12451},{"type":17,"tag":275,"props":26722,"children":26724},{"className":26723,"code":12455,"language":432,"meta":8},[527],[26725],{"type":17,"tag":79,"props":26726,"children":26727},{"__ignoreMap":8},[26728],{"type":23,"value":12455},{"type":17,"tag":96,"props":26730,"children":26731},{"id":12463},[26732],{"type":23,"value":12466},{"type":17,"tag":26,"props":26734,"children":26735},{},[26736],{"type":23,"value":12471},{"type":17,"tag":26,"props":26738,"children":26739},{},[26740],{"type":23,"value":12476},{"type":17,"tag":275,"props":26742,"children":26744},{"className":26743,"code":12481,"language":12482,"meta":8},[12480],[26745],{"type":17,"tag":79,"props":26746,"children":26747},{"__ignoreMap":8},[26748],{"type":23,"value":12481},{"type":17,"tag":32,"props":26750,"children":26751},{},[26752],{"type":17,"tag":36,"props":26753,"children":26754},{},[26755,26756,26761],{"type":23,"value":12495},{"type":17,"tag":79,"props":26757,"children":26759},{"className":26758},[],[26760],{"type":23,"value":12501},{"type":23,"value":12503},{"type":17,"tag":275,"props":26763,"children":26765},{"className":26764,"code":12507,"language":432,"meta":8},[527],[26766],{"type":17,"tag":79,"props":26767,"children":26768},{"__ignoreMap":8},[26769],{"type":23,"value":12507},{"type":17,"tag":32,"props":26771,"children":26772},{"start":11},[26773],{"type":17,"tag":36,"props":26774,"children":26775},{},[26776],{"type":23,"value":12520},{"type":17,"tag":26,"props":26778,"children":26779},{},[26780,26781,26786],{"type":23,"value":12525},{"type":17,"tag":79,"props":26782,"children":26784},{"className":26783},[],[26785],{"type":23,"value":12531},{"type":23,"value":12533},{"type":17,"tag":275,"props":26788,"children":26790},{"className":26789,"code":12537,"language":12482,"meta":8},[12480],[26791],{"type":17,"tag":79,"props":26792,"children":26793},{"__ignoreMap":8},[26794],{"type":23,"value":12537},{"type":17,"tag":26,"props":26796,"children":26797},{},[26798,26799,26804],{"type":23,"value":12547},{"type":17,"tag":79,"props":26800,"children":26802},{"className":26801},[],[26803],{"type":23,"value":12553},{"type":23,"value":12555},{"type":17,"tag":275,"props":26806,"children":26808},{"className":26807,"code":12559,"language":432,"meta":8},[527],[26809],{"type":17,"tag":79,"props":26810,"children":26811},{"__ignoreMap":8},[26812],{"type":23,"value":12559},{"type":17,"tag":26,"props":26814,"children":26815},{},[26816],{"type":23,"value":11374},{"type":17,"tag":275,"props":26818,"children":26820},{"className":26819,"code":12572,"language":11380,"meta":8},[11378],[26821],{"type":17,"tag":79,"props":26822,"children":26823},{"__ignoreMap":8},[26824],{"type":23,"value":12572},{"type":17,"tag":26,"props":26826,"children":26827},{},[26828,26829,26834],{"type":23,"value":12582},{"type":17,"tag":79,"props":26830,"children":26832},{"className":26831},[],[26833],{"type":23,"value":12553},{"type":23,"value":12589},{"type":17,"tag":275,"props":26836,"children":26838},{"className":26837,"code":12593,"language":12482,"meta":8},[12480],[26839],{"type":17,"tag":79,"props":26840,"children":26841},{"__ignoreMap":8},[26842],{"type":23,"value":12593},{"type":17,"tag":26,"props":26844,"children":26845},{},[26846],{"type":23,"value":12603},{"type":17,"tag":275,"props":26848,"children":26850},{"className":26849,"code":12607,"language":432,"meta":8},[527],[26851],{"type":17,"tag":79,"props":26852,"children":26853},{"__ignoreMap":8},[26854],{"type":23,"value":12607},{"type":17,"tag":26,"props":26856,"children":26857},{},[26858],{"type":23,"value":11374},{"type":17,"tag":275,"props":26860,"children":26862},{"className":26861,"code":12620,"language":11380,"meta":8},[11378],[26863],{"type":17,"tag":79,"props":26864,"children":26865},{"__ignoreMap":8},[26866],{"type":23,"value":12620},{"type":17,"tag":26,"props":26868,"children":26869},{},[26870,26871,26876],{"type":23,"value":12630},{"type":17,"tag":79,"props":26872,"children":26874},{"className":26873},[],[26875],{"type":23,"value":12636},{"type":23,"value":12638},{"type":17,"tag":32,"props":26878,"children":26879},{"start":375},[26880],{"type":17,"tag":36,"props":26881,"children":26882},{},[26883,26884,26889],{"type":23,"value":12646},{"type":17,"tag":79,"props":26885,"children":26887},{"className":26886},[],[26888],{"type":23,"value":12652},{"type":23,"value":12654},{"type":17,"tag":275,"props":26891,"children":26893},{"className":26892,"code":12658,"language":432,"meta":8},[527],[26894],{"type":17,"tag":79,"props":26895,"children":26896},{"__ignoreMap":8},[26897],{"type":23,"value":12658},{"type":17,"tag":235,"props":26899,"children":26900},{},[26901,26910],{"type":17,"tag":36,"props":26902,"children":26903},{},[26904,26909],{"type":17,"tag":79,"props":26905,"children":26907},{"className":26906},[],[26908],{"type":23,"value":12675},{"type":23,"value":12677},{"type":17,"tag":36,"props":26911,"children":26912},{},[26913,26918],{"type":17,"tag":79,"props":26914,"children":26916},{"className":26915},[],[26917],{"type":23,"value":12686},{"type":23,"value":12688},{"type":17,"tag":26,"props":26920,"children":26921},{},[26922],{"type":23,"value":12693},{"type":17,"tag":18,"props":26924,"children":26925},{"id":12696},[26926],{"type":23,"value":12699},{"type":17,"tag":26,"props":26928,"children":26929},{},[26930],{"type":23,"value":12704},{"type":17,"tag":96,"props":26932,"children":26933},{"id":12707},[26934],{"type":23,"value":12710},{"type":17,"tag":26,"props":26936,"children":26937},{},[26938],{"type":23,"value":12715},{"type":17,"tag":26,"props":26940,"children":26941},{},[26942],{"type":17,"tag":714,"props":26943,"children":26944},{"alt":8,"src":12721},[],{"type":17,"tag":32,"props":26946,"children":26947},{},[26948],{"type":17,"tag":36,"props":26949,"children":26950},{},[26951,26952,26957,26958,26963,26964,26969],{"type":23,"value":12730},{"type":17,"tag":79,"props":26953,"children":26955},{"className":26954},[],[26956],{"type":23,"value":12170},{"type":23,"value":880},{"type":17,"tag":79,"props":26959,"children":26961},{"className":26960},[],[26962],{"type":23,"value":12742},{"type":23,"value":12744},{"type":17,"tag":79,"props":26965,"children":26967},{"className":26966},[],[26968],{"type":23,"value":2005},{"type":23,"value":12751},{"type":17,"tag":275,"props":26971,"children":26973},{"className":26972,"code":12755,"language":432,"meta":8},[527],[26974],{"type":17,"tag":79,"props":26975,"children":26976},{"__ignoreMap":8},[26977],{"type":23,"value":12755},{"type":17,"tag":26,"props":26979,"children":26980},{},[26981],{"type":23,"value":11374},{"type":17,"tag":275,"props":26983,"children":26985},{"className":26984,"code":12768,"language":11380,"meta":8},[11378],[26986],{"type":17,"tag":79,"props":26987,"children":26988},{"__ignoreMap":8},[26989],{"type":23,"value":12768},{"type":17,"tag":836,"props":26991,"children":26992},{},[26993,27025],{"type":17,"tag":26,"props":26994,"children":26995},{},[26996,27000,27001,27006,27007,27012,27013,27018,27019,27024],{"type":17,"tag":2020,"props":26997,"children":26998},{},[26999],{"type":23,"value":2024},{"type":23,"value":12785},{"type":17,"tag":79,"props":27002,"children":27004},{"className":27003},[],[27005],{"type":23,"value":11113},{"type":23,"value":12792},{"type":17,"tag":79,"props":27008,"children":27010},{"className":27009},[],[27011],{"type":23,"value":12798},{"type":23,"value":880},{"type":17,"tag":79,"props":27014,"children":27016},{"className":27015},[],[27017],{"type":23,"value":12805},{"type":23,"value":12807},{"type":17,"tag":79,"props":27020,"children":27022},{"className":27021},[],[27023],{"type":23,"value":12813},{"type":23,"value":12815},{"type":17,"tag":275,"props":27026,"children":27028},{"className":27027,"code":12819,"language":432,"meta":8},[527],[27029],{"type":17,"tag":79,"props":27030,"children":27031},{"__ignoreMap":8},[27032],{"type":23,"value":12819},{"type":17,"tag":32,"props":27034,"children":27035},{"start":11},[27036],{"type":17,"tag":36,"props":27037,"children":27038},{},[27039,27040,27045,27046,27051,27052,27057,27058,27063],{"type":23,"value":12832},{"type":17,"tag":79,"props":27041,"children":27043},{"className":27042},[],[27044],{"type":23,"value":12170},{"type":23,"value":86},{"type":17,"tag":79,"props":27047,"children":27049},{"className":27048},[],[27050],{"type":23,"value":8310},{"type":23,"value":12845},{"type":17,"tag":79,"props":27053,"children":27055},{"className":27054},[],[27056],{"type":23,"value":12170},{"type":23,"value":12852},{"type":17,"tag":79,"props":27059,"children":27061},{"className":27060},[],[27062],{"type":23,"value":8310},{"type":23,"value":12859},{"type":17,"tag":275,"props":27065,"children":27067},{"className":27066,"code":12863,"language":432,"meta":8},[527],[27068],{"type":17,"tag":79,"props":27069,"children":27070},{"__ignoreMap":8},[27071],{"type":23,"value":12863},{"type":17,"tag":26,"props":27073,"children":27074},{},[27075],{"type":23,"value":11374},{"type":17,"tag":275,"props":27077,"children":27079},{"className":27078,"code":12876,"language":11380,"meta":8},[11378],[27080],{"type":17,"tag":79,"props":27081,"children":27082},{"__ignoreMap":8},[27083],{"type":23,"value":12876},{"type":17,"tag":32,"props":27085,"children":27086},{"start":375},[27087],{"type":17,"tag":36,"props":27088,"children":27089},{},[27090,27091,27096,27097,27102],{"type":23,"value":12889},{"type":17,"tag":79,"props":27092,"children":27094},{"className":27093},[],[27095],{"type":23,"value":12895},{"type":23,"value":12897},{"type":17,"tag":79,"props":27098,"children":27100},{"className":27099},[],[27101],{"type":23,"value":12895},{"type":23,"value":12904},{"type":17,"tag":275,"props":27104,"children":27106},{"className":27105,"code":12908,"language":432,"meta":8},[527],[27107],{"type":17,"tag":79,"props":27108,"children":27109},{"__ignoreMap":8},[27110],{"type":23,"value":12908},{"type":17,"tag":26,"props":27112,"children":27113},{},[27114],{"type":23,"value":12918},{"type":17,"tag":235,"props":27116,"children":27117},{},[27118,27139,27160,27181,27190],{"type":17,"tag":36,"props":27119,"children":27120},{},[27121,27126,27127,27132,27133,27138],{"type":17,"tag":79,"props":27122,"children":27124},{"className":27123},[],[27125],{"type":23,"value":8377},{"type":23,"value":12931},{"type":17,"tag":79,"props":27128,"children":27130},{"className":27129},[],[27131],{"type":23,"value":1915},{"type":23,"value":12938},{"type":17,"tag":79,"props":27134,"children":27136},{"className":27135},[],[27137],{"type":23,"value":1893},{"type":23,"value":12945},{"type":17,"tag":36,"props":27140,"children":27141},{},[27142,27147,27148,27153,27154,27159],{"type":17,"tag":79,"props":27143,"children":27145},{"className":27144},[],[27146],{"type":23,"value":12954},{"type":23,"value":12956},{"type":17,"tag":79,"props":27149,"children":27151},{"className":27150},[],[27152],{"type":23,"value":12962},{"type":23,"value":12964},{"type":17,"tag":79,"props":27155,"children":27157},{"className":27156},[],[27158],{"type":23,"value":12970},{"type":23,"value":12972},{"type":17,"tag":36,"props":27161,"children":27162},{},[27163,27168,27169,27174,27175,27180],{"type":17,"tag":79,"props":27164,"children":27166},{"className":27165},[],[27167],{"type":23,"value":12981},{"type":23,"value":12983},{"type":17,"tag":79,"props":27170,"children":27172},{"className":27171},[],[27173],{"type":23,"value":12981},{"type":23,"value":12990},{"type":17,"tag":79,"props":27176,"children":27178},{"className":27177},[],[27179],{"type":23,"value":12996},{"type":23,"value":12998},{"type":17,"tag":36,"props":27182,"children":27183},{},[27184,27189],{"type":17,"tag":79,"props":27185,"children":27187},{"className":27186},[],[27188],{"type":23,"value":13007},{"type":23,"value":13009},{"type":17,"tag":36,"props":27191,"children":27192},{},[27193,27198,27199,27204,27205,27210],{"type":17,"tag":79,"props":27194,"children":27196},{"className":27195},[],[27197],{"type":23,"value":13018},{"type":23,"value":13020},{"type":17,"tag":79,"props":27200,"children":27202},{"className":27201},[],[27203],{"type":23,"value":2005},{"type":23,"value":13027},{"type":17,"tag":79,"props":27206,"children":27208},{"className":27207},[],[27209],{"type":23,"value":2012},{"type":23,"value":13034},{"type":17,"tag":26,"props":27212,"children":27213},{},[27214,27215,27220],{"type":23,"value":13039},{"type":17,"tag":79,"props":27216,"children":27218},{"className":27217},[],[27219],{"type":23,"value":10963},{"type":23,"value":920},{"type":17,"tag":275,"props":27222,"children":27224},{"className":27223,"code":13049,"language":432,"meta":8},[527],[27225],{"type":17,"tag":79,"props":27226,"children":27227},{"__ignoreMap":8},[27228],{"type":23,"value":13049},{"type":17,"tag":26,"props":27230,"children":27231},{},[27232],{"type":23,"value":11374},{"type":17,"tag":275,"props":27234,"children":27236},{"className":27235,"code":13062,"language":11380,"meta":8},[11378],[27237],{"type":17,"tag":79,"props":27238,"children":27239},{"__ignoreMap":8},[27240],{"type":23,"value":13062},{"type":17,"tag":32,"props":27242,"children":27243},{"start":1858},[27244],{"type":17,"tag":36,"props":27245,"children":27246},{},[27247,27248,27253],{"type":23,"value":13075},{"type":17,"tag":79,"props":27249,"children":27251},{"className":27250},[],[27252],{"type":23,"value":12178},{"type":23,"value":13082},{"type":17,"tag":275,"props":27255,"children":27257},{"className":27256,"code":13086,"language":432,"meta":8},[527],[27258],{"type":17,"tag":79,"props":27259,"children":27260},{"__ignoreMap":8},[27261],{"type":23,"value":13086},{"type":17,"tag":26,"props":27263,"children":27264},{},[27265],{"type":23,"value":13096},{"type":17,"tag":275,"props":27267,"children":27269},{"className":27268,"code":13100,"language":11380,"meta":8},[11378],[27270],{"type":17,"tag":79,"props":27271,"children":27272},{"__ignoreMap":8},[27273],{"type":23,"value":13100},{"type":17,"tag":26,"props":27275,"children":27276},{},[27277,27278,27283,27284,27289],{"type":23,"value":13110},{"type":17,"tag":79,"props":27279,"children":27281},{"className":27280},[],[27282],{"type":23,"value":12895},{"type":23,"value":86},{"type":17,"tag":79,"props":27285,"children":27287},{"className":27286},[],[27288],{"type":23,"value":12178},{"type":23,"value":13123},{"type":17,"tag":96,"props":27291,"children":27292},{"id":13126},[27293],{"type":23,"value":13129},{"type":17,"tag":26,"props":27295,"children":27296},{},[27297],{"type":23,"value":13134},{"type":17,"tag":26,"props":27299,"children":27300},{},[27301],{"type":17,"tag":714,"props":27302,"children":27303},{"alt":8,"src":13140},[],{"type":17,"tag":32,"props":27305,"children":27306},{},[27307],{"type":17,"tag":36,"props":27308,"children":27309},{},[27310,27311,27316],{"type":23,"value":13149},{"type":17,"tag":79,"props":27312,"children":27314},{"className":27313},[],[27315],{"type":23,"value":13155},{"type":23,"value":13157},{"type":17,"tag":518,"props":27318,"children":27319},{":editable":520,":show-in-col":520,"max-height":521},[27320],{"type":17,"tag":275,"props":27321,"children":27323},{"className":27322,"code":13164,"language":432,"meta":8},[527],[27324],{"type":17,"tag":79,"props":27325,"children":27326},{"__ignoreMap":8},[27327],{"type":23,"value":13164},{"type":17,"tag":32,"props":27329,"children":27330},{"start":11},[27331],{"type":17,"tag":36,"props":27332,"children":27333},{},[27334,27335,27340,27341,27346],{"type":23,"value":13177},{"type":17,"tag":79,"props":27336,"children":27338},{"className":27337},[],[27339],{"type":23,"value":13183},{"type":23,"value":13185},{"type":17,"tag":79,"props":27342,"children":27344},{"className":27343},[],[27345],{"type":23,"value":13007},{"type":23,"value":13192},{"type":17,"tag":518,"props":27348,"children":27349},{":editable":520,":show-in-col":520,"max-height":521},[27350],{"type":17,"tag":275,"props":27351,"children":27353},{"className":27352,"code":13199,"language":432,"meta":8},[527],[27354],{"type":17,"tag":79,"props":27355,"children":27356},{"__ignoreMap":8},[27357],{"type":23,"value":13199},{"type":17,"tag":96,"props":27359,"children":27360},{"id":13207},[27361],{"type":23,"value":13210},{"type":17,"tag":26,"props":27363,"children":27364},{},[27365,27366,27371],{"type":23,"value":13215},{"type":17,"tag":79,"props":27367,"children":27369},{"className":27368},[],[27370],{"type":23,"value":13221},{"type":23,"value":13223},{"type":17,"tag":275,"props":27373,"children":27375},{"className":27374,"code":13227,"language":432,"meta":8},[527],[27376],{"type":17,"tag":79,"props":27377,"children":27378},{"__ignoreMap":8},[27379],{"type":23,"value":13227},{"type":17,"tag":26,"props":27381,"children":27382},{},[27383],{"type":23,"value":11374},{"type":17,"tag":275,"props":27385,"children":27387},{"className":27386,"code":13240,"language":11380,"meta":8},[11378],[27388],{"type":17,"tag":79,"props":27389,"children":27390},{"__ignoreMap":8},[27391],{"type":23,"value":13240},{"type":17,"tag":26,"props":27393,"children":27394},{},[27395,27396,27401,27402,27407],{"type":23,"value":13250},{"type":17,"tag":79,"props":27397,"children":27399},{"className":27398},[],[27400],{"type":23,"value":13256},{"type":23,"value":86},{"type":17,"tag":79,"props":27403,"children":27405},{"className":27404},[],[27406],{"type":23,"value":13263},{"type":23,"value":13265},{"type":17,"tag":518,"props":27409,"children":27410},{":editable":520,":show-in-col":520,"max-height":521},[27411],{"type":17,"tag":275,"props":27412,"children":27414},{"className":27413,"code":13272,"language":432,"meta":8},[527],[27415],{"type":17,"tag":79,"props":27416,"children":27417},{"__ignoreMap":8},[27418],{"type":23,"value":13272},{"type":17,"tag":96,"props":27420,"children":27421},{"id":13280},[27422],{"type":23,"value":13283},{"type":17,"tag":26,"props":27424,"children":27425},{},[27426],{"type":23,"value":13288},{"type":17,"tag":275,"props":27428,"children":27430},{"className":27429,"code":13292,"language":432,"meta":8},[527],[27431],{"type":17,"tag":79,"props":27432,"children":27433},{"__ignoreMap":8},[27434],{"type":23,"value":13292},{"type":17,"tag":275,"props":27436,"children":27438},{"className":27437,"code":13301,"language":11380,"meta":8},[11378],[27439],{"type":17,"tag":79,"props":27440,"children":27441},{"__ignoreMap":8},[27442],{"type":23,"value":13301},{"type":17,"tag":18,"props":27444,"children":27445},{"id":13309},[27446],{"type":23,"value":13312},{"type":17,"tag":96,"props":27448,"children":27449},{"id":13315},[27450],{"type":23,"value":13318},{"type":17,"tag":26,"props":27452,"children":27453},{},[27454],{"type":23,"value":13323},{"type":17,"tag":1211,"props":27456,"children":27457},{},[27458,27472],{"type":17,"tag":1215,"props":27459,"children":27460},{},[27461],{"type":17,"tag":1219,"props":27462,"children":27463},{},[27464,27468],{"type":17,"tag":1223,"props":27465,"children":27466},{},[27467],{"type":23,"value":13337},{"type":17,"tag":1223,"props":27469,"children":27470},{},[27471],{"type":23,"value":1232},{"type":17,"tag":1234,"props":27473,"children":27474},{},[27475,27486,27497,27508,27519,27530,27541,27552,27563,27574,27585,27596,27607,27618,27629],{"type":17,"tag":1219,"props":27476,"children":27477},{},[27478,27482],{"type":17,"tag":1241,"props":27479,"children":27480},{},[27481],{"type":23,"value":13352},{"type":17,"tag":1241,"props":27483,"children":27484},{},[27485],{"type":23,"value":13357},{"type":17,"tag":1219,"props":27487,"children":27488},{},[27489,27493],{"type":17,"tag":1241,"props":27490,"children":27491},{},[27492],{"type":23,"value":13365},{"type":17,"tag":1241,"props":27494,"children":27495},{},[27496],{"type":23,"value":13370},{"type":17,"tag":1219,"props":27498,"children":27499},{},[27500,27504],{"type":17,"tag":1241,"props":27501,"children":27502},{},[27503],{"type":23,"value":13378},{"type":17,"tag":1241,"props":27505,"children":27506},{},[27507],{"type":23,"value":13383},{"type":17,"tag":1219,"props":27509,"children":27510},{},[27511,27515],{"type":17,"tag":1241,"props":27512,"children":27513},{},[27514],{"type":23,"value":13391},{"type":17,"tag":1241,"props":27516,"children":27517},{},[27518],{"type":23,"value":13396},{"type":17,"tag":1219,"props":27520,"children":27521},{},[27522,27526],{"type":17,"tag":1241,"props":27523,"children":27524},{},[27525],{"type":23,"value":13404},{"type":17,"tag":1241,"props":27527,"children":27528},{},[27529],{"type":23,"value":13409},{"type":17,"tag":1219,"props":27531,"children":27532},{},[27533,27537],{"type":17,"tag":1241,"props":27534,"children":27535},{},[27536],{"type":23,"value":13417},{"type":17,"tag":1241,"props":27538,"children":27539},{},[27540],{"type":23,"value":13422},{"type":17,"tag":1219,"props":27542,"children":27543},{},[27544,27548],{"type":17,"tag":1241,"props":27545,"children":27546},{},[27547],{"type":23,"value":13430},{"type":17,"tag":1241,"props":27549,"children":27550},{},[27551],{"type":23,"value":13435},{"type":17,"tag":1219,"props":27553,"children":27554},{},[27555,27559],{"type":17,"tag":1241,"props":27556,"children":27557},{},[27558],{"type":23,"value":13443},{"type":17,"tag":1241,"props":27560,"children":27561},{},[27562],{"type":23,"value":13448},{"type":17,"tag":1219,"props":27564,"children":27565},{},[27566,27570],{"type":17,"tag":1241,"props":27567,"children":27568},{},[27569],{"type":23,"value":13456},{"type":17,"tag":1241,"props":27571,"children":27572},{},[27573],{"type":23,"value":13461},{"type":17,"tag":1219,"props":27575,"children":27576},{},[27577,27581],{"type":17,"tag":1241,"props":27578,"children":27579},{},[27580],{"type":23,"value":13469},{"type":17,"tag":1241,"props":27582,"children":27583},{},[27584],{"type":23,"value":13474},{"type":17,"tag":1219,"props":27586,"children":27587},{},[27588,27592],{"type":17,"tag":1241,"props":27589,"children":27590},{},[27591],{"type":23,"value":13482},{"type":17,"tag":1241,"props":27593,"children":27594},{},[27595],{"type":23,"value":13487},{"type":17,"tag":1219,"props":27597,"children":27598},{},[27599,27603],{"type":17,"tag":1241,"props":27600,"children":27601},{},[27602],{"type":23,"value":13495},{"type":17,"tag":1241,"props":27604,"children":27605},{},[27606],{"type":23,"value":13500},{"type":17,"tag":1219,"props":27608,"children":27609},{},[27610,27614],{"type":17,"tag":1241,"props":27611,"children":27612},{},[27613],{"type":23,"value":13508},{"type":17,"tag":1241,"props":27615,"children":27616},{},[27617],{"type":23,"value":13513},{"type":17,"tag":1219,"props":27619,"children":27620},{},[27621,27625],{"type":17,"tag":1241,"props":27622,"children":27623},{},[27624],{"type":23,"value":13521},{"type":17,"tag":1241,"props":27626,"children":27627},{},[27628],{"type":23,"value":13526},{"type":17,"tag":1219,"props":27630,"children":27631},{},[27632,27636],{"type":17,"tag":1241,"props":27633,"children":27634},{},[27635],{"type":23,"value":13534},{"type":17,"tag":1241,"props":27637,"children":27638},{},[27639],{"type":23,"value":13539},{"type":17,"tag":96,"props":27641,"children":27642},{"id":13542},[27643],{"type":23,"value":13545},{"type":17,"tag":32,"props":27645,"children":27646},{},[27647],{"type":17,"tag":36,"props":27648,"children":27649},{},[27650,27651],{"type":23,"value":13553},{"type":17,"tag":79,"props":27652,"children":27654},{"className":27653},[],[27655],{"type":23,"value":13559},{"type":17,"tag":518,"props":27657,"children":27658},{":editable":520,":show-in-col":520,"max-height":521},[27659],{"type":17,"tag":275,"props":27660,"children":27662},{"className":27661,"code":13566,"language":432,"meta":8},[527],[27663],{"type":17,"tag":79,"props":27664,"children":27665},{"__ignoreMap":8},[27666],{"type":23,"value":13566},{"type":17,"tag":32,"props":27668,"children":27669},{"start":11},[27670],{"type":17,"tag":36,"props":27671,"children":27672},{},[27673,27674],{"type":23,"value":13579},{"type":17,"tag":79,"props":27675,"children":27677},{"className":27676},[],[27678],{"type":23,"value":13585},{"type":17,"tag":518,"props":27680,"children":27681},{":editable":520,":show-in-col":520,"max-height":521},[27682],{"type":17,"tag":275,"props":27683,"children":27685},{"className":27684,"code":13592,"language":432,"meta":8},[527],[27686],{"type":17,"tag":79,"props":27687,"children":27688},{"__ignoreMap":8},[27689],{"type":23,"value":13592},{"type":17,"tag":32,"props":27691,"children":27692},{"start":375},[27693],{"type":17,"tag":36,"props":27694,"children":27695},{},[27696,27697],{"type":23,"value":13605},{"type":17,"tag":79,"props":27698,"children":27700},{"className":27699},[],[27701],{"type":23,"value":13611},{"type":17,"tag":518,"props":27703,"children":27704},{":editable":520,":show-in-col":520,"max-height":521},[27705],{"type":17,"tag":275,"props":27706,"children":27708},{"className":27707,"code":13618,"language":432,"meta":8},[527],[27709],{"type":17,"tag":79,"props":27710,"children":27711},{"__ignoreMap":8},[27712],{"type":23,"value":13618},{"type":17,"tag":32,"props":27714,"children":27715},{"start":1858},[27716],{"type":17,"tag":36,"props":27717,"children":27718},{},[27719,27720],{"type":23,"value":13631},{"type":17,"tag":79,"props":27721,"children":27723},{"className":27722},[],[27724],{"type":23,"value":13637},{"type":17,"tag":518,"props":27726,"children":27727},{":editable":520,":show-in-col":520,"max-height":521},[27728],{"type":17,"tag":275,"props":27729,"children":27731},{"className":27730,"code":13644,"language":432,"meta":8},[527],[27732],{"type":17,"tag":79,"props":27733,"children":27734},{"__ignoreMap":8},[27735],{"type":23,"value":13644},{"type":17,"tag":32,"props":27737,"children":27738},{"start":8271},[27739],{"type":17,"tag":36,"props":27740,"children":27741},{},[27742,27743],{"type":23,"value":13657},{"type":17,"tag":79,"props":27744,"children":27746},{"className":27745},[],[27747],{"type":23,"value":13663},{"type":17,"tag":518,"props":27749,"children":27750},{":editable":520,":show-in-col":520,"max-height":521},[27751],{"type":17,"tag":275,"props":27752,"children":27754},{"className":27753,"code":13670,"language":432,"meta":8},[527],[27755],{"type":17,"tag":79,"props":27756,"children":27757},{"__ignoreMap":8},[27758],{"type":23,"value":13670},{"type":17,"tag":32,"props":27760,"children":27761},{"start":12158},[27762],{"type":17,"tag":36,"props":27763,"children":27764},{},[27765,27766],{"type":23,"value":13683},{"type":17,"tag":79,"props":27767,"children":27769},{"className":27768},[],[27770],{"type":23,"value":13689},{"type":17,"tag":518,"props":27772,"children":27773},{":editable":520,":show-in-col":520,"max-height":521},[27774],{"type":17,"tag":275,"props":27775,"children":27777},{"className":27776,"code":13696,"language":432,"meta":8},[527],[27778],{"type":17,"tag":79,"props":27779,"children":27780},{"__ignoreMap":8},[27781],{"type":23,"value":13696},{"type":17,"tag":96,"props":27783,"children":27784},{"id":13704},[27785],{"type":23,"value":13707},{"type":17,"tag":32,"props":27787,"children":27788},{},[27789],{"type":17,"tag":36,"props":27790,"children":27791},{},[27792,27793,27798],{"type":23,"value":13715},{"type":17,"tag":79,"props":27794,"children":27796},{"className":27795},[],[27797],{"type":23,"value":10963},{"type":23,"value":13722},{"type":17,"tag":275,"props":27800,"children":27802},{"className":27801,"code":13726,"language":432,"meta":8},[527],[27803],{"type":17,"tag":79,"props":27804,"children":27805},{"__ignoreMap":8},[27806],{"type":23,"value":13726},{"type":17,"tag":26,"props":27808,"children":27809},{},[27810],{"type":23,"value":12918},{"type":17,"tag":235,"props":27812,"children":27813},{},[27814,27823,27832,27841,27850,27859],{"type":17,"tag":36,"props":27815,"children":27816},{},[27817,27822],{"type":17,"tag":79,"props":27818,"children":27820},{"className":27819},[],[27821],{"type":23,"value":13747},{"type":23,"value":13749},{"type":17,"tag":36,"props":27824,"children":27825},{},[27826,27831],{"type":17,"tag":79,"props":27827,"children":27829},{"className":27828},[],[27830],{"type":23,"value":8377},{"type":23,"value":13759},{"type":17,"tag":36,"props":27833,"children":27834},{},[27835,27840],{"type":17,"tag":79,"props":27836,"children":27838},{"className":27837},[],[27839],{"type":23,"value":13768},{"type":23,"value":13770},{"type":17,"tag":36,"props":27842,"children":27843},{},[27844,27849],{"type":17,"tag":79,"props":27845,"children":27847},{"className":27846},[],[27848],{"type":23,"value":13018},{"type":23,"value":13780},{"type":17,"tag":36,"props":27851,"children":27852},{},[27853,27858],{"type":17,"tag":79,"props":27854,"children":27856},{"className":27855},[],[27857],{"type":23,"value":9975},{"type":23,"value":13790},{"type":17,"tag":36,"props":27860,"children":27861},{},[27862,27867],{"type":17,"tag":79,"props":27863,"children":27865},{"className":27864},[],[27866],{"type":23,"value":13799},{"type":23,"value":13801},{"type":17,"tag":518,"props":27869,"children":27870},{":editable":520,":show-in-col":520,"max-height":521},[27871],{"type":17,"tag":275,"props":27872,"children":27874},{"className":27873,"code":13808,"language":432,"meta":8},[527],[27875],{"type":17,"tag":79,"props":27876,"children":27877},{"__ignoreMap":8},[27878],{"type":23,"value":13808},{"type":17,"tag":32,"props":27880,"children":27881},{"start":11},[27882],{"type":17,"tag":36,"props":27883,"children":27884},{},[27885],{"type":23,"value":13821},{"type":17,"tag":275,"props":27887,"children":27889},{"className":27888,"code":13825,"language":432,"meta":8},[527],[27890],{"type":17,"tag":79,"props":27891,"children":27892},{"__ignoreMap":8},[27893],{"type":23,"value":13825},{"type":17,"tag":26,"props":27895,"children":27896},{},[27897],{"type":23,"value":12918},{"type":17,"tag":235,"props":27899,"children":27900},{},[27901,27910,27919,27928,27937],{"type":17,"tag":36,"props":27902,"children":27903},{},[27904,27909],{"type":17,"tag":79,"props":27905,"children":27907},{"className":27906},[],[27908],{"type":23,"value":8377},{"type":23,"value":13759},{"type":17,"tag":36,"props":27911,"children":27912},{},[27913,27918],{"type":17,"tag":79,"props":27914,"children":27916},{"className":27915},[],[27917],{"type":23,"value":13768},{"type":23,"value":13770},{"type":17,"tag":36,"props":27920,"children":27921},{},[27922,27927],{"type":17,"tag":79,"props":27923,"children":27925},{"className":27924},[],[27926],{"type":23,"value":13018},{"type":23,"value":13780},{"type":17,"tag":36,"props":27929,"children":27930},{},[27931,27936],{"type":17,"tag":79,"props":27932,"children":27934},{"className":27933},[],[27935],{"type":23,"value":9975},{"type":23,"value":13790},{"type":17,"tag":36,"props":27938,"children":27939},{},[27940,27945],{"type":17,"tag":79,"props":27941,"children":27943},{"className":27942},[],[27944],{"type":23,"value":13799},{"type":23,"value":13801},{"type":17,"tag":518,"props":27947,"children":27948},{":editable":520,":show-in-col":520,"max-height":521},[27949],{"type":17,"tag":275,"props":27950,"children":27952},{"className":27951,"code":13889,"language":432,"meta":8},[527],[27953],{"type":17,"tag":79,"props":27954,"children":27955},{"__ignoreMap":8},[27956],{"type":23,"value":13889},{"type":17,"tag":96,"props":27958,"children":27959},{"id":13897},[27960],{"type":23,"value":13900},{"type":17,"tag":32,"props":27962,"children":27963},{},[27964],{"type":17,"tag":36,"props":27965,"children":27966},{},[27967,27968],{"type":23,"value":13908},{"type":17,"tag":79,"props":27969,"children":27971},{"className":27970},[],[27972],{"type":23,"value":13914},{"type":17,"tag":518,"props":27974,"children":27975},{":editable":520,":show-in-col":520,"max-height":521},[27976],{"type":17,"tag":275,"props":27977,"children":27979},{"className":27978,"code":13921,"language":432,"meta":8},[527],[27980],{"type":17,"tag":79,"props":27981,"children":27982},{"__ignoreMap":8},[27983],{"type":23,"value":13921},{"type":17,"tag":32,"props":27985,"children":27986},{"start":11},[27987],{"type":17,"tag":36,"props":27988,"children":27989},{},[27990,27991],{"type":23,"value":13934},{"type":17,"tag":79,"props":27992,"children":27994},{"className":27993},[],[27995],{"type":23,"value":13940},{"type":17,"tag":518,"props":27997,"children":27998},{":editable":520,":show-in-col":520,"max-height":521},[27999],{"type":17,"tag":275,"props":28000,"children":28002},{"className":28001,"code":13947,"language":432,"meta":8},[527],[28003],{"type":17,"tag":79,"props":28004,"children":28005},{"__ignoreMap":8},[28006],{"type":23,"value":13947},{"type":17,"tag":32,"props":28008,"children":28009},{"start":375},[28010],{"type":17,"tag":36,"props":28011,"children":28012},{},[28013],{"type":23,"value":13960},{"type":17,"tag":275,"props":28015,"children":28017},{"className":28016,"code":13964,"language":432,"meta":8},[527],[28018],{"type":17,"tag":79,"props":28019,"children":28020},{"__ignoreMap":8},[28021],{"type":23,"value":13964},{"type":17,"tag":26,"props":28023,"children":28024},{},[28025],{"type":23,"value":12918},{"type":17,"tag":235,"props":28027,"children":28028},{},[28029,28038,28047,28056],{"type":17,"tag":36,"props":28030,"children":28031},{},[28032,28037],{"type":17,"tag":79,"props":28033,"children":28035},{"className":28034},[],[28036],{"type":23,"value":13985},{"type":23,"value":13987},{"type":17,"tag":36,"props":28039,"children":28040},{},[28041,28046],{"type":17,"tag":79,"props":28042,"children":28044},{"className":28043},[],[28045],{"type":23,"value":11222},{"type":23,"value":13997},{"type":17,"tag":36,"props":28048,"children":28049},{},[28050,28055],{"type":17,"tag":79,"props":28051,"children":28053},{"className":28052},[],[28054],{"type":23,"value":11801},{"type":23,"value":14007},{"type":17,"tag":36,"props":28057,"children":28058},{},[28059,28064],{"type":17,"tag":79,"props":28060,"children":28062},{"className":28061},[],[28063],{"type":23,"value":14016},{"type":23,"value":14018},{"type":17,"tag":518,"props":28066,"children":28067},{":editable":520,":show-in-col":520,"max-height":521},[28068],{"type":17,"tag":275,"props":28069,"children":28071},{"className":28070,"code":14025,"language":432,"meta":8},[527],[28072],{"type":17,"tag":79,"props":28073,"children":28074},{"__ignoreMap":8},[28075],{"type":23,"value":14025},{"type":17,"tag":96,"props":28077,"children":28078},{"id":14033},[28079],{"type":23,"value":14036},{"type":17,"tag":32,"props":28081,"children":28082},{},[28083],{"type":17,"tag":36,"props":28084,"children":28085},{},[28086,28087],{"type":23,"value":14044},{"type":17,"tag":79,"props":28088,"children":28090},{"className":28089},[],[28091],{"type":23,"value":14050},{"type":17,"tag":275,"props":28093,"children":28095},{"className":28094,"code":14054,"language":432,"meta":8},[527],[28096],{"type":17,"tag":79,"props":28097,"children":28098},{"__ignoreMap":8},[28099],{"type":23,"value":14054},{"type":17,"tag":26,"props":28101,"children":28102},{},[28103],{"type":23,"value":11374},{"type":17,"tag":275,"props":28105,"children":28107},{"className":28106,"code":14067,"language":11380,"meta":8},[11378],[28108],{"type":17,"tag":79,"props":28109,"children":28110},{"__ignoreMap":8},[28111],{"type":23,"value":14067},{"type":17,"tag":32,"props":28113,"children":28114},{"start":11},[28115],{"type":17,"tag":36,"props":28116,"children":28117},{},[28118,28119],{"type":23,"value":14080},{"type":17,"tag":79,"props":28120,"children":28122},{"className":28121},[],[28123],{"type":23,"value":14086},{"type":17,"tag":275,"props":28125,"children":28127},{"className":28126,"code":14090,"language":432,"meta":8},[527],[28128],{"type":17,"tag":79,"props":28129,"children":28130},{"__ignoreMap":8},[28131],{"type":23,"value":14090},{"type":17,"tag":26,"props":28133,"children":28134},{},[28135],{"type":23,"value":11374},{"type":17,"tag":275,"props":28137,"children":28139},{"className":28138,"code":14103,"language":11380,"meta":8},[11378],[28140],{"type":17,"tag":79,"props":28141,"children":28142},{"__ignoreMap":8},[28143],{"type":23,"value":14103},{"type":17,"tag":96,"props":28145,"children":28146},{"id":14111},[28147],{"type":23,"value":14114},{"type":17,"tag":32,"props":28149,"children":28150},{},[28151],{"type":17,"tag":36,"props":28152,"children":28153},{},[28154,28155],{"type":23,"value":14122},{"type":17,"tag":79,"props":28156,"children":28158},{"className":28157},[],[28159],{"type":23,"value":14128},{"type":17,"tag":275,"props":28161,"children":28163},{"className":28162,"code":14132,"language":432,"meta":8},[527],[28164],{"type":17,"tag":79,"props":28165,"children":28166},{"__ignoreMap":8},[28167],{"type":23,"value":14132},{"type":17,"tag":26,"props":28169,"children":28170},{},[28171],{"type":23,"value":11374},{"type":17,"tag":275,"props":28173,"children":28175},{"className":28174,"code":14145,"language":11380,"meta":8},[11378],[28176],{"type":17,"tag":79,"props":28177,"children":28178},{"__ignoreMap":8},[28179],{"type":23,"value":14145},{"type":17,"tag":32,"props":28181,"children":28182},{"start":11},[28183],{"type":17,"tag":36,"props":28184,"children":28185},{},[28186,28187],{"type":23,"value":14158},{"type":17,"tag":79,"props":28188,"children":28190},{"className":28189},[],[28191],{"type":23,"value":14164},{"type":17,"tag":518,"props":28193,"children":28194},{":editable":520,":show-in-col":520,"max-height":521},[28195],{"type":17,"tag":275,"props":28196,"children":28198},{"className":28197,"code":14171,"language":432,"meta":8},[527],[28199],{"type":17,"tag":79,"props":28200,"children":28201},{"__ignoreMap":8},[28202],{"type":23,"value":14171},{"title":8,"searchDepth":11,"depth":11,"links":28204},[28205,28206,28210,28214,28220],{"id":10901,"depth":11,"text":10904},{"id":10950,"depth":11,"text":10953,"children":28207},[28208,28209],{"id":11006,"depth":375,"text":11009},{"id":11584,"depth":375,"text":11587},{"id":12214,"depth":11,"text":12217,"children":28211},[28212,28213],{"id":12220,"depth":375,"text":12223},{"id":12463,"depth":375,"text":12466},{"id":12696,"depth":11,"text":12699,"children":28215},[28216,28217,28218,28219],{"id":12707,"depth":375,"text":12710},{"id":13126,"depth":375,"text":13129},{"id":13207,"depth":375,"text":13210},{"id":13280,"depth":375,"text":13283},{"id":13309,"depth":11,"text":13312,"children":28221},[28222,28223,28224,28225,28226,28227],{"id":13315,"depth":375,"text":13318},{"id":13542,"depth":375,"text":13545},{"id":13704,"depth":375,"text":13707},{"id":13897,"depth":375,"text":13900},{"id":14033,"depth":375,"text":14036},{"id":14111,"depth":375,"text":14114},{"_path":14206,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":14207,"description":8,"navigation":396,"index":12158,"icon":12,"body":28229,"_type":386,"_id":15469,"_source":388,"_file":15470,"_stem":15471,"_extension":391},{"type":14,"children":28230,"toc":29241},[28231,28235,28239,28255,28259,28263,28267,28289,28293,28312,28316,28327,28331,28335,28350,28354,28358,28362,28369,28373,28388,28392,28396,28400,28411,28417,28421,28482,28486,28490,28494,28505,28509,28513,28528,28532,28536,28592,28596,28600,28611,28615,28619,28623,28634,28638,28642,28646,28650,28654,28676,28680,28691,28695,28699,28703,28714,28718,28729,28733,28790,28794,28798,28855,28859,28863,28867,28871,28882,28886,28890,28947,28951,28955,28959,28966,28970,28989,28993,29004,29008,29095,29099,29103,29107,29117,29132,29136,29163,29167,29171,29186,29190,29194,29198,29202,29221,29225,29229,29233],{"type":17,"tag":18,"props":28232,"children":28233},{"id":14212},[28234],{"type":23,"value":14215},{"type":17,"tag":26,"props":28236,"children":28237},{},[28238],{"type":23,"value":14220},{"type":17,"tag":26,"props":28240,"children":28241},{},[28242,28243,28248,28249,28254],{"type":23,"value":14225},{"type":17,"tag":105,"props":28244,"children":28246},{"href":14228,"rel":28245},[109],[28247],{"type":23,"value":14232},{"type":23,"value":14234},{"type":17,"tag":79,"props":28250,"children":28252},{"className":28251},[],[28253],{"type":23,"value":14240},{"type":23,"value":14242},{"type":17,"tag":18,"props":28256,"children":28257},{"id":14245},[28258],{"type":23,"value":14248},{"type":17,"tag":26,"props":28260,"children":28261},{},[28262],{"type":23,"value":14253},{"type":17,"tag":96,"props":28264,"children":28265},{"id":14256},[28266],{"type":23,"value":14259},{"type":17,"tag":235,"props":28268,"children":28269},{},[28270,28274],{"type":17,"tag":36,"props":28271,"children":28272},{},[28273],{"type":23,"value":14267},{"type":17,"tag":36,"props":28275,"children":28276},{},[28277,28278],{"type":23,"value":14272},{"type":17,"tag":235,"props":28279,"children":28280},{},[28281,28285],{"type":17,"tag":36,"props":28282,"children":28283},{},[28284],{"type":23,"value":14280},{"type":17,"tag":36,"props":28286,"children":28287},{},[28288],{"type":23,"value":14285},{"type":17,"tag":26,"props":28290,"children":28291},{},[28292],{"type":23,"value":14290},{"type":17,"tag":235,"props":28294,"children":28295},{},[28296,28300,28304,28308],{"type":17,"tag":36,"props":28297,"children":28298},{},[28299],{"type":23,"value":14298},{"type":17,"tag":36,"props":28301,"children":28302},{},[28303],{"type":23,"value":14303},{"type":17,"tag":36,"props":28305,"children":28306},{},[28307],{"type":23,"value":14308},{"type":17,"tag":36,"props":28309,"children":28310},{},[28311],{"type":23,"value":14313},{"type":17,"tag":26,"props":28313,"children":28314},{},[28315],{"type":23,"value":14318},{"type":17,"tag":518,"props":28317,"children":28318},{":editable":520,":show-in-col":520,"max-height":521},[28319],{"type":17,"tag":275,"props":28320,"children":28322},{"code":14324,"language":432,"meta":8,"className":28321},[527],[28323],{"type":17,"tag":79,"props":28324,"children":28325},{"__ignoreMap":8},[28326],{"type":23,"value":14324},{"type":17,"tag":1561,"props":28328,"children":28329},{"id":14333},[28330],{"type":23,"value":14336},{"type":17,"tag":26,"props":28332,"children":28333},{},[28334],{"type":23,"value":14341},{"type":17,"tag":235,"props":28336,"children":28337},{},[28338,28342,28346],{"type":17,"tag":36,"props":28339,"children":28340},{},[28341],{"type":23,"value":14349},{"type":17,"tag":36,"props":28343,"children":28344},{},[28345],{"type":23,"value":14354},{"type":17,"tag":36,"props":28347,"children":28348},{},[28349],{"type":23,"value":14359},{"type":17,"tag":26,"props":28351,"children":28352},{},[28353],{"type":23,"value":14364},{"type":17,"tag":14366,"props":28355,"children":28356},{"id":14368},[28357],{"type":23,"value":14371},{"type":17,"tag":26,"props":28359,"children":28360},{},[28361],{"type":23,"value":14376},{"type":17,"tag":275,"props":28363,"children":28364},{"code":14379},[28365],{"type":17,"tag":79,"props":28366,"children":28367},{"__ignoreMap":8},[28368],{"type":23,"value":14379},{"type":17,"tag":26,"props":28370,"children":28371},{},[28372],{"type":23,"value":14389},{"type":17,"tag":235,"props":28374,"children":28375},{},[28376,28380,28384],{"type":17,"tag":36,"props":28377,"children":28378},{},[28379],{"type":23,"value":14397},{"type":17,"tag":36,"props":28381,"children":28382},{},[28383],{"type":23,"value":14402},{"type":17,"tag":36,"props":28385,"children":28386},{},[28387],{"type":23,"value":14407},{"type":17,"tag":1561,"props":28389,"children":28390},{"id":14410},[28391],{"type":23,"value":14413},{"type":17,"tag":26,"props":28393,"children":28394},{},[28395],{"type":23,"value":14418},{"type":17,"tag":26,"props":28397,"children":28398},{},[28399],{"type":23,"value":14423},{"type":17,"tag":518,"props":28401,"children":28402},{":editable":520,":show-in-col":520,"max-height":521},[28403],{"type":17,"tag":275,"props":28404,"children":28406},{"code":14429,"language":432,"meta":8,"className":28405},[527],[28407],{"type":17,"tag":79,"props":28408,"children":28409},{"__ignoreMap":8},[28410],{"type":23,"value":14429},{"type":17,"tag":26,"props":28412,"children":28413},{},[28414],{"type":17,"tag":714,"props":28415,"children":28416},{"alt":14441,"src":14442},[],{"type":17,"tag":1561,"props":28418,"children":28419},{"id":14446},[28420],{"type":23,"value":14449},{"type":17,"tag":32,"props":28422,"children":28423},{},[28424,28432,28440,28463],{"type":17,"tag":36,"props":28425,"children":28426},{},[28427,28431],{"type":17,"tag":1136,"props":28428,"children":28429},{},[28430],{"type":23,"value":14460},{"type":23,"value":14462},{"type":17,"tag":36,"props":28433,"children":28434},{},[28435,28439],{"type":17,"tag":1136,"props":28436,"children":28437},{},[28438],{"type":23,"value":14470},{"type":23,"value":14472},{"type":17,"tag":36,"props":28441,"children":28442},{},[28443,28447,28448],{"type":17,"tag":1136,"props":28444,"children":28445},{},[28446],{"type":23,"value":14480},{"type":23,"value":920},{"type":17,"tag":235,"props":28449,"children":28450},{},[28451,28455,28459],{"type":17,"tag":36,"props":28452,"children":28453},{},[28454],{"type":23,"value":14489},{"type":17,"tag":36,"props":28456,"children":28457},{},[28458],{"type":23,"value":14494},{"type":17,"tag":36,"props":28460,"children":28461},{},[28462],{"type":23,"value":14499},{"type":17,"tag":36,"props":28464,"children":28465},{},[28466,28470,28471],{"type":17,"tag":1136,"props":28467,"children":28468},{},[28469],{"type":23,"value":14507},{"type":23,"value":920},{"type":17,"tag":235,"props":28472,"children":28473},{},[28474,28478],{"type":17,"tag":36,"props":28475,"children":28476},{},[28477],{"type":23,"value":14516},{"type":17,"tag":36,"props":28479,"children":28480},{},[28481],{"type":23,"value":14521},{"type":17,"tag":96,"props":28483,"children":28484},{"id":14524},[28485],{"type":23,"value":14527},{"type":17,"tag":26,"props":28487,"children":28488},{},[28489],{"type":23,"value":14532},{"type":17,"tag":26,"props":28491,"children":28492},{},[28493],{"type":23,"value":14537},{"type":17,"tag":32,"props":28495,"children":28496},{},[28497,28501],{"type":17,"tag":36,"props":28498,"children":28499},{},[28500],{"type":23,"value":14460},{"type":17,"tag":36,"props":28502,"children":28503},{},[28504],{"type":23,"value":14549},{"type":17,"tag":1561,"props":28506,"children":28507},{"id":14552},[28508],{"type":23,"value":14460},{"type":17,"tag":26,"props":28510,"children":28511},{},[28512],{"type":23,"value":14559},{"type":17,"tag":235,"props":28514,"children":28515},{},[28516,28520,28524],{"type":17,"tag":36,"props":28517,"children":28518},{},[28519],{"type":23,"value":14567},{"type":17,"tag":36,"props":28521,"children":28522},{},[28523],{"type":23,"value":14572},{"type":17,"tag":36,"props":28525,"children":28526},{},[28527],{"type":23,"value":14577},{"type":17,"tag":1561,"props":28529,"children":28530},{"id":14580},[28531],{"type":23,"value":14549},{"type":17,"tag":26,"props":28533,"children":28534},{},[28535],{"type":23,"value":14587},{"type":17,"tag":32,"props":28537,"children":28538},{},[28539,28562,28577],{"type":17,"tag":36,"props":28540,"children":28541},{},[28542,28546,28547],{"type":17,"tag":1136,"props":28543,"children":28544},{},[28545],{"type":23,"value":14598},{"type":23,"value":14600},{"type":17,"tag":235,"props":28548,"children":28549},{},[28550,28554,28558],{"type":17,"tag":36,"props":28551,"children":28552},{},[28553],{"type":23,"value":14608},{"type":17,"tag":36,"props":28555,"children":28556},{},[28557],{"type":23,"value":14613},{"type":17,"tag":36,"props":28559,"children":28560},{},[28561],{"type":23,"value":14618},{"type":17,"tag":36,"props":28563,"children":28564},{},[28565,28569,28570],{"type":17,"tag":1136,"props":28566,"children":28567},{},[28568],{"type":23,"value":14626},{"type":23,"value":14628},{"type":17,"tag":235,"props":28571,"children":28572},{},[28573],{"type":17,"tag":36,"props":28574,"children":28575},{},[28576],{"type":23,"value":14636},{"type":17,"tag":36,"props":28578,"children":28579},{},[28580,28584,28585],{"type":17,"tag":1136,"props":28581,"children":28582},{},[28583],{"type":23,"value":14644},{"type":23,"value":14646},{"type":17,"tag":235,"props":28586,"children":28587},{},[28588],{"type":17,"tag":36,"props":28589,"children":28590},{},[28591],{"type":23,"value":14654},{"type":17,"tag":1561,"props":28593,"children":28594},{"id":14657},[28595],{"type":23,"value":14660},{"type":17,"tag":26,"props":28597,"children":28598},{},[28599],{"type":23,"value":14665},{"type":17,"tag":235,"props":28601,"children":28602},{},[28603,28607],{"type":17,"tag":36,"props":28604,"children":28605},{},[28606],{"type":23,"value":14673},{"type":17,"tag":36,"props":28608,"children":28609},{},[28610],{"type":23,"value":14678},{"type":17,"tag":26,"props":28612,"children":28613},{},[28614],{"type":23,"value":14683},{"type":17,"tag":1561,"props":28616,"children":28617},{"id":14686},[28618],{"type":23,"value":14689},{"type":17,"tag":26,"props":28620,"children":28621},{},[28622],{"type":23,"value":14694},{"type":17,"tag":235,"props":28624,"children":28625},{},[28626,28630],{"type":17,"tag":36,"props":28627,"children":28628},{},[28629],{"type":23,"value":14702},{"type":17,"tag":36,"props":28631,"children":28632},{},[28633],{"type":23,"value":14707},{"type":17,"tag":96,"props":28635,"children":28636},{"id":14710},[28637],{"type":23,"value":14713},{"type":17,"tag":26,"props":28639,"children":28640},{},[28641],{"type":23,"value":14718},{"type":17,"tag":1561,"props":28643,"children":28644},{"id":14721},[28645],{"type":23,"value":14724},{"type":17,"tag":26,"props":28647,"children":28648},{},[28649],{"type":23,"value":14729},{"type":17,"tag":26,"props":28651,"children":28652},{},[28653],{"type":23,"value":14734},{"type":17,"tag":235,"props":28655,"children":28656},{},[28657],{"type":17,"tag":36,"props":28658,"children":28659},{},[28660,28661],{"type":23,"value":14742},{"type":17,"tag":235,"props":28662,"children":28663},{},[28664,28668,28672],{"type":17,"tag":36,"props":28665,"children":28666},{},[28667],{"type":23,"value":14750},{"type":17,"tag":36,"props":28669,"children":28670},{},[28671],{"type":23,"value":14755},{"type":17,"tag":36,"props":28673,"children":28674},{},[28675],{"type":23,"value":14760},{"type":17,"tag":26,"props":28677,"children":28678},{},[28679],{"type":23,"value":14765},{"type":17,"tag":518,"props":28681,"children":28682},{":editable":520,":show-in-col":520,"max-height":521},[28683],{"type":17,"tag":275,"props":28684,"children":28686},{"code":14771,"language":432,"meta":8,"className":28685},[527],[28687],{"type":17,"tag":79,"props":28688,"children":28689},{"__ignoreMap":8},[28690],{"type":23,"value":14771},{"type":17,"tag":1561,"props":28692,"children":28693},{"id":14780},[28694],{"type":23,"value":14783},{"type":17,"tag":26,"props":28696,"children":28697},{},[28698],{"type":23,"value":14788},{"type":17,"tag":26,"props":28700,"children":28701},{},[28702],{"type":23,"value":14793},{"type":17,"tag":235,"props":28704,"children":28705},{},[28706,28710],{"type":17,"tag":36,"props":28707,"children":28708},{},[28709],{"type":23,"value":14801},{"type":17,"tag":36,"props":28711,"children":28712},{},[28713],{"type":23,"value":14806},{"type":17,"tag":26,"props":28715,"children":28716},{},[28717],{"type":23,"value":14811},{"type":17,"tag":518,"props":28719,"children":28720},{":editable":520,":show-in-col":520,"max-height":521},[28721],{"type":17,"tag":275,"props":28722,"children":28724},{"code":14817,"language":432,"meta":8,"className":28723},[527],[28725],{"type":17,"tag":79,"props":28726,"children":28727},{"__ignoreMap":8},[28728],{"type":23,"value":14817},{"type":17,"tag":1561,"props":28730,"children":28731},{"id":14826},[28732],{"type":23,"value":14829},{"type":17,"tag":32,"props":28734,"children":28735},{},[28736,28754,28772],{"type":17,"tag":36,"props":28737,"children":28738},{},[28739,28743],{"type":17,"tag":1136,"props":28740,"children":28741},{},[28742],{"type":23,"value":14840},{"type":17,"tag":235,"props":28744,"children":28745},{},[28746,28750],{"type":17,"tag":36,"props":28747,"children":28748},{},[28749],{"type":23,"value":14848},{"type":17,"tag":36,"props":28751,"children":28752},{},[28753],{"type":23,"value":14853},{"type":17,"tag":36,"props":28755,"children":28756},{},[28757,28761],{"type":17,"tag":1136,"props":28758,"children":28759},{},[28760],{"type":23,"value":14861},{"type":17,"tag":235,"props":28762,"children":28763},{},[28764,28768],{"type":17,"tag":36,"props":28765,"children":28766},{},[28767],{"type":23,"value":14869},{"type":17,"tag":36,"props":28769,"children":28770},{},[28771],{"type":23,"value":14874},{"type":17,"tag":36,"props":28773,"children":28774},{},[28775,28779],{"type":17,"tag":1136,"props":28776,"children":28777},{},[28778],{"type":23,"value":14882},{"type":17,"tag":235,"props":28780,"children":28781},{},[28782,28786],{"type":17,"tag":36,"props":28783,"children":28784},{},[28785],{"type":23,"value":14890},{"type":17,"tag":36,"props":28787,"children":28788},{},[28789],{"type":23,"value":14895},{"type":17,"tag":1561,"props":28791,"children":28792},{"id":14898},[28793],{"type":23,"value":14901},{"type":17,"tag":26,"props":28795,"children":28796},{},[28797],{"type":23,"value":14906},{"type":17,"tag":32,"props":28799,"children":28800},{},[28801,28819,28837],{"type":17,"tag":36,"props":28802,"children":28803},{},[28804,28808],{"type":17,"tag":1136,"props":28805,"children":28806},{},[28807],{"type":23,"value":14917},{"type":17,"tag":235,"props":28809,"children":28810},{},[28811,28815],{"type":17,"tag":36,"props":28812,"children":28813},{},[28814],{"type":23,"value":14925},{"type":17,"tag":36,"props":28816,"children":28817},{},[28818],{"type":23,"value":14930},{"type":17,"tag":36,"props":28820,"children":28821},{},[28822,28826],{"type":17,"tag":1136,"props":28823,"children":28824},{},[28825],{"type":23,"value":14938},{"type":17,"tag":235,"props":28827,"children":28828},{},[28829,28833],{"type":17,"tag":36,"props":28830,"children":28831},{},[28832],{"type":23,"value":14946},{"type":17,"tag":36,"props":28834,"children":28835},{},[28836],{"type":23,"value":14951},{"type":17,"tag":36,"props":28838,"children":28839},{},[28840,28844],{"type":17,"tag":1136,"props":28841,"children":28842},{},[28843],{"type":23,"value":14959},{"type":17,"tag":235,"props":28845,"children":28846},{},[28847,28851],{"type":17,"tag":36,"props":28848,"children":28849},{},[28850],{"type":23,"value":14967},{"type":17,"tag":36,"props":28852,"children":28853},{},[28854],{"type":23,"value":14972},{"type":17,"tag":26,"props":28856,"children":28857},{},[28858],{"type":23,"value":14977},{"type":17,"tag":18,"props":28860,"children":28861},{"id":14980},[28862],{"type":23,"value":14983},{"type":17,"tag":26,"props":28864,"children":28865},{},[28866],{"type":23,"value":14988},{"type":17,"tag":26,"props":28868,"children":28869},{},[28870],{"type":23,"value":14993},{"type":17,"tag":235,"props":28872,"children":28873},{},[28874,28878],{"type":17,"tag":36,"props":28875,"children":28876},{},[28877],{"type":23,"value":15001},{"type":17,"tag":36,"props":28879,"children":28880},{},[28881],{"type":23,"value":15006},{"type":17,"tag":26,"props":28883,"children":28884},{},[28885],{"type":23,"value":15011},{"type":17,"tag":96,"props":28887,"children":28888},{"id":15014},[28889],{"type":23,"value":15017},{"type":17,"tag":32,"props":28891,"children":28892},{},[28893,28911,28929],{"type":17,"tag":36,"props":28894,"children":28895},{},[28896,28900],{"type":17,"tag":1136,"props":28897,"children":28898},{},[28899],{"type":23,"value":15028},{"type":17,"tag":235,"props":28901,"children":28902},{},[28903,28907],{"type":17,"tag":36,"props":28904,"children":28905},{},[28906],{"type":23,"value":15036},{"type":17,"tag":36,"props":28908,"children":28909},{},[28910],{"type":23,"value":15041},{"type":17,"tag":36,"props":28912,"children":28913},{},[28914,28918],{"type":17,"tag":1136,"props":28915,"children":28916},{},[28917],{"type":23,"value":15049},{"type":17,"tag":235,"props":28919,"children":28920},{},[28921,28925],{"type":17,"tag":36,"props":28922,"children":28923},{},[28924],{"type":23,"value":15057},{"type":17,"tag":36,"props":28926,"children":28927},{},[28928],{"type":23,"value":15062},{"type":17,"tag":36,"props":28930,"children":28931},{},[28932,28936],{"type":17,"tag":1136,"props":28933,"children":28934},{},[28935],{"type":23,"value":15070},{"type":17,"tag":235,"props":28937,"children":28938},{},[28939,28943],{"type":17,"tag":36,"props":28940,"children":28941},{},[28942],{"type":23,"value":15078},{"type":17,"tag":36,"props":28944,"children":28945},{},[28946],{"type":23,"value":15083},{"type":17,"tag":96,"props":28948,"children":28949},{"id":15086},[28950],{"type":23,"value":15089},{"type":17,"tag":26,"props":28952,"children":28953},{},[28954],{"type":23,"value":15094},{"type":17,"tag":1561,"props":28956,"children":28957},{"id":15097},[28958],{"type":23,"value":15100},{"type":17,"tag":275,"props":28960,"children":28961},{"code":15103},[28962],{"type":17,"tag":79,"props":28963,"children":28964},{"__ignoreMap":8},[28965],{"type":23,"value":15103},{"type":17,"tag":26,"props":28967,"children":28968},{},[28969],{"type":23,"value":15113},{"type":17,"tag":235,"props":28971,"children":28972},{},[28973,28977,28981,28985],{"type":17,"tag":36,"props":28974,"children":28975},{},[28976],{"type":23,"value":15121},{"type":17,"tag":36,"props":28978,"children":28979},{},[28980],{"type":23,"value":15126},{"type":17,"tag":36,"props":28982,"children":28983},{},[28984],{"type":23,"value":15131},{"type":17,"tag":36,"props":28986,"children":28987},{},[28988],{"type":23,"value":15136},{"type":17,"tag":1561,"props":28990,"children":28991},{"id":15139},[28992],{"type":23,"value":15142},{"type":17,"tag":518,"props":28994,"children":28995},{":editable":520,":show-in-col":520,"max-height":521},[28996],{"type":17,"tag":275,"props":28997,"children":28999},{"code":15148,"language":432,"meta":8,"className":28998},[527],[29000],{"type":17,"tag":79,"props":29001,"children":29002},{"__ignoreMap":8},[29003],{"type":23,"value":15148},{"type":17,"tag":1561,"props":29005,"children":29006},{"id":15157},[29007],{"type":23,"value":15160},{"type":17,"tag":32,"props":29009,"children":29010},{},[29011,29029,29051,29073],{"type":17,"tag":36,"props":29012,"children":29013},{},[29014,29018],{"type":17,"tag":1136,"props":29015,"children":29016},{},[29017],{"type":23,"value":15171},{"type":17,"tag":235,"props":29019,"children":29020},{},[29021,29025],{"type":17,"tag":36,"props":29022,"children":29023},{},[29024],{"type":23,"value":15179},{"type":17,"tag":36,"props":29026,"children":29027},{},[29028],{"type":23,"value":15184},{"type":17,"tag":36,"props":29030,"children":29031},{},[29032,29036],{"type":17,"tag":1136,"props":29033,"children":29034},{},[29035],{"type":23,"value":15192},{"type":17,"tag":235,"props":29037,"children":29038},{},[29039,29043,29047],{"type":17,"tag":36,"props":29040,"children":29041},{},[29042],{"type":23,"value":15200},{"type":17,"tag":36,"props":29044,"children":29045},{},[29046],{"type":23,"value":15205},{"type":17,"tag":36,"props":29048,"children":29049},{},[29050],{"type":23,"value":15210},{"type":17,"tag":36,"props":29052,"children":29053},{},[29054,29058],{"type":17,"tag":1136,"props":29055,"children":29056},{},[29057],{"type":23,"value":15218},{"type":17,"tag":235,"props":29059,"children":29060},{},[29061,29065,29069],{"type":17,"tag":36,"props":29062,"children":29063},{},[29064],{"type":23,"value":15226},{"type":17,"tag":36,"props":29066,"children":29067},{},[29068],{"type":23,"value":15231},{"type":17,"tag":36,"props":29070,"children":29071},{},[29072],{"type":23,"value":15236},{"type":17,"tag":36,"props":29074,"children":29075},{},[29076,29080],{"type":17,"tag":1136,"props":29077,"children":29078},{},[29079],{"type":23,"value":15244},{"type":17,"tag":235,"props":29081,"children":29082},{},[29083,29087,29091],{"type":17,"tag":36,"props":29084,"children":29085},{},[29086],{"type":23,"value":15252},{"type":17,"tag":36,"props":29088,"children":29089},{},[29090],{"type":23,"value":15257},{"type":17,"tag":36,"props":29092,"children":29093},{},[29094],{"type":23,"value":15262},{"type":17,"tag":26,"props":29096,"children":29097},{},[29098],{"type":23,"value":15267},{"type":17,"tag":18,"props":29100,"children":29101},{"id":15270},[29102],{"type":23,"value":15273},{"type":17,"tag":96,"props":29104,"children":29105},{"id":15276},[29106],{"type":23,"value":15279},{"type":17,"tag":26,"props":29108,"children":29109},{},[29110,29111,29116],{"type":23,"value":15284},{"type":17,"tag":79,"props":29112,"children":29114},{"className":29113},[],[29115],{"type":23,"value":15290},{"type":23,"value":15292},{"type":17,"tag":26,"props":29118,"children":29119},{},[29120,29125,29126,29131],{"type":17,"tag":79,"props":29121,"children":29123},{"className":29122},[],[29124],{"type":23,"value":15301},{"type":23,"value":15303},{"type":17,"tag":79,"props":29127,"children":29129},{"className":29128},[],[29130],{"type":23,"value":15309},{"type":23,"value":15311},{"type":17,"tag":96,"props":29133,"children":29134},{"id":15314},[29135],{"type":23,"value":15317},{"type":17,"tag":32,"props":29137,"children":29138},{},[29139,29147,29155],{"type":17,"tag":36,"props":29140,"children":29141},{},[29142,29146],{"type":17,"tag":1136,"props":29143,"children":29144},{},[29145],{"type":23,"value":15328},{"type":23,"value":15330},{"type":17,"tag":36,"props":29148,"children":29149},{},[29150,29154],{"type":17,"tag":1136,"props":29151,"children":29152},{},[29153],{"type":23,"value":15338},{"type":23,"value":15340},{"type":17,"tag":36,"props":29156,"children":29157},{},[29158,29162],{"type":17,"tag":1136,"props":29159,"children":29160},{},[29161],{"type":23,"value":15348},{"type":23,"value":15350},{"type":17,"tag":96,"props":29164,"children":29165},{"id":15353},[29166],{"type":23,"value":15356},{"type":17,"tag":26,"props":29168,"children":29169},{},[29170],{"type":23,"value":15361},{"type":17,"tag":235,"props":29172,"children":29173},{},[29174,29178,29182],{"type":17,"tag":36,"props":29175,"children":29176},{},[29177],{"type":23,"value":15369},{"type":17,"tag":36,"props":29179,"children":29180},{},[29181],{"type":23,"value":15374},{"type":17,"tag":36,"props":29183,"children":29184},{},[29185],{"type":23,"value":15379},{"type":17,"tag":96,"props":29187,"children":29188},{"id":15382},[29189],{"type":23,"value":15385},{"type":17,"tag":26,"props":29191,"children":29192},{},[29193],{"type":23,"value":15390},{"type":17,"tag":26,"props":29195,"children":29196},{},[29197],{"type":23,"value":15395},{"type":17,"tag":26,"props":29199,"children":29200},{},[29201],{"type":23,"value":15400},{"type":17,"tag":32,"props":29203,"children":29204},{},[29205,29209,29213,29217],{"type":17,"tag":36,"props":29206,"children":29207},{},[29208],{"type":23,"value":15408},{"type":17,"tag":36,"props":29210,"children":29211},{},[29212],{"type":23,"value":15413},{"type":17,"tag":36,"props":29214,"children":29215},{},[29216],{"type":23,"value":15418},{"type":17,"tag":36,"props":29218,"children":29219},{},[29220],{"type":23,"value":15423},{"type":17,"tag":26,"props":29222,"children":29223},{},[29224],{"type":23,"value":15428},{"type":17,"tag":96,"props":29226,"children":29227},{"id":15431},[29228],{"type":23,"value":15434},{"type":17,"tag":26,"props":29230,"children":29231},{},[29232],{"type":23,"value":15439},{"type":17,"tag":26,"props":29234,"children":29235},{},[29236],{"type":17,"tag":105,"props":29237,"children":29239},{"href":15445,"rel":29238},[109],[29240],{"type":23,"value":15449},{"title":8,"searchDepth":11,"depth":11,"links":29242},[29243,29244,29249,29253],{"id":14212,"depth":11,"text":14215},{"id":14245,"depth":11,"text":14248,"children":29245},[29246,29247,29248],{"id":14256,"depth":375,"text":14259},{"id":14524,"depth":375,"text":14527},{"id":14710,"depth":375,"text":14713},{"id":14980,"depth":11,"text":14983,"children":29250},[29251,29252],{"id":15014,"depth":375,"text":15017},{"id":15086,"depth":375,"text":15089},{"id":15270,"depth":11,"text":15273,"children":29254},[29255,29256,29257,29258,29259],{"id":15276,"depth":375,"text":15279},{"id":15314,"depth":375,"text":15317},{"id":15353,"depth":375,"text":15356},{"id":15382,"depth":375,"text":15385},{"id":15431,"depth":375,"text":15434},{"_path":15473,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":15474,"description":15475,"navigation":10,"index":11,"icon":12,"body":29261,"_type":386,"_id":16030,"_source":388,"_file":16031,"_stem":16032,"_extension":391},{"type":14,"children":29262,"toc":29690},[29263,29275,29289,29296,29305,29314,29318,29337,29341,29348,29354,29361,29367,29374,29380,29384,29399,29405,29409,29419,29428,29432,29436,29460,29466,29473,29479,29483,29498,29502,29512,29516,29520,29524,29528,29535,29542,29576,29583,29594,29601,29608,29615,29622,29629,29636,29651],{"type":17,"tag":15479,"props":29264,"children":29265},{"style":15481},[29266,29267],{"type":23,"value":15484},{"type":17,"tag":15486,"props":29268,"children":29269},{"style":15488,"autoPlay":10,"loop":10,"muted":10,"playsInline":10},[29270,29271,29274],{"type":23,"value":15491},{"type":17,"tag":15493,"props":29272,"children":29273},{"src":15495,"type":15496},[],{"type":23,"value":15484},{"type":17,"tag":26,"props":29276,"children":29277},{},[29278,29282,29283,29288],{"type":17,"tag":1136,"props":29279,"children":29280},{},[29281],{"type":23,"value":15506},{"type":23,"value":15508},{"type":17,"tag":105,"props":29284,"children":29286},{"href":15511,"rel":29285},[109],[29287],{"type":23,"value":15515},{"type":23,"value":15517},{"type":17,"tag":26,"props":29290,"children":29291},{},[29292],{"type":17,"tag":1136,"props":29293,"children":29294},{},[29295],{"type":23,"value":15525},{"type":17,"tag":26,"props":29297,"children":29298},{},[29299,29300],{"type":23,"value":15530},{"type":17,"tag":105,"props":29301,"children":29303},{"href":15533,"rel":29302},[109],[29304],{"type":23,"value":15537},{"type":17,"tag":18,"props":29306,"children":29307},{"id":15540},[29308,29309],{"type":23,"value":15543},{"type":17,"tag":105,"props":29310,"children":29312},{"href":15546,"rel":29311},[109],[29313],{"type":23,"value":15550},{"type":17,"tag":96,"props":29315,"children":29316},{"id":15553},[29317],{"type":23,"value":15556},{"type":17,"tag":26,"props":29319,"children":29320},{},[29321,29322,29326,29327,29331,29332,29336],{"type":23,"value":15561},{"type":17,"tag":1136,"props":29323,"children":29324},{},[29325],{"type":23,"value":15566},{"type":23,"value":880},{"type":17,"tag":1136,"props":29328,"children":29329},{},[29330],{"type":23,"value":15572},{"type":23,"value":15574},{"type":17,"tag":1136,"props":29333,"children":29334},{},[29335],{"type":23,"value":15579},{"type":23,"value":15581},{"type":17,"tag":96,"props":29338,"children":29339},{"id":15584},[29340],{"type":23,"value":15587},{"type":17,"tag":32,"props":29342,"children":29343},{},[29344],{"type":17,"tag":36,"props":29345,"children":29346},{},[29347],{"type":23,"value":15595},{"type":17,"tag":26,"props":29349,"children":29350},{},[29351],{"type":17,"tag":714,"props":29352,"children":29353},{"alt":8,"src":15601},[],{"type":17,"tag":32,"props":29355,"children":29356},{"start":11},[29357],{"type":17,"tag":36,"props":29358,"children":29359},{},[29360],{"type":23,"value":15610},{"type":17,"tag":26,"props":29362,"children":29363},{},[29364],{"type":17,"tag":714,"props":29365,"children":29366},{"alt":8,"src":15616},[],{"type":17,"tag":32,"props":29368,"children":29369},{"start":375},[29370],{"type":17,"tag":36,"props":29371,"children":29372},{},[29373],{"type":23,"value":15625},{"type":17,"tag":26,"props":29375,"children":29376},{},[29377],{"type":17,"tag":714,"props":29378,"children":29379},{"alt":8,"src":15631},[],{"type":17,"tag":96,"props":29381,"children":29382},{"id":15635},[29383],{"type":23,"value":15638},{"type":17,"tag":235,"props":29385,"children":29386},{},[29387,29391,29395],{"type":17,"tag":36,"props":29388,"children":29389},{},[29390],{"type":23,"value":15646},{"type":17,"tag":36,"props":29392,"children":29393},{},[29394],{"type":23,"value":15651},{"type":17,"tag":36,"props":29396,"children":29397},{},[29398],{"type":23,"value":15656},{"type":17,"tag":26,"props":29400,"children":29401},{},[29402],{"type":17,"tag":714,"props":29403,"children":29404},{"alt":8,"src":15662},[],{"type":17,"tag":96,"props":29406,"children":29407},{"id":15666},[29408],{"type":23,"value":15669},{"type":17,"tag":26,"props":29410,"children":29411},{},[29412],{"type":17,"tag":15486,"props":29413,"children":29414},{"width":15675,"autoPlay":10,"loop":10,"muted":10,"playsInline":10,"controls":10},[29415,29418],{"type":17,"tag":15493,"props":29416,"children":29417},{"src":15679,"type":15496},[],{"type":23,"value":15682},{"type":17,"tag":18,"props":29420,"children":29421},{"id":15685},[29422,29427],{"type":17,"tag":105,"props":29423,"children":29425},{"href":15689,"rel":29424},[109],[29426],{"type":23,"value":15693},{"type":23,"value":15695},{"type":17,"tag":26,"props":29429,"children":29430},{},[29431],{"type":23,"value":15700},{"type":17,"tag":96,"props":29433,"children":29434},{"id":15703},[29435],{"type":23,"value":15556},{"type":17,"tag":32,"props":29437,"children":29438},{},[29439,29456],{"type":17,"tag":36,"props":29440,"children":29441},{},[29442,29443,29447,29448,29452,29453],{"type":23,"value":15713},{"type":17,"tag":1136,"props":29444,"children":29445},{},[29446],{"type":23,"value":15718},{"type":23,"value":880},{"type":17,"tag":1136,"props":29449,"children":29450},{},[29451],{"type":23,"value":15724},{"type":23,"value":15726},{"type":17,"tag":714,"props":29454,"children":29455},{"alt":8,"src":15729},[],{"type":17,"tag":36,"props":29457,"children":29458},{},[29459],{"type":23,"value":15735},{"type":17,"tag":26,"props":29461,"children":29462},{},[29463],{"type":17,"tag":714,"props":29464,"children":29465},{"alt":8,"src":15741},[],{"type":17,"tag":32,"props":29467,"children":29468},{"start":375},[29469],{"type":17,"tag":36,"props":29470,"children":29471},{},[29472],{"type":23,"value":15750},{"type":17,"tag":26,"props":29474,"children":29475},{},[29476],{"type":17,"tag":714,"props":29477,"children":29478},{"alt":8,"src":15756},[],{"type":17,"tag":96,"props":29480,"children":29481},{"id":15760},[29482],{"type":23,"value":15587},{"type":17,"tag":32,"props":29484,"children":29485},{},[29486,29490,29494],{"type":17,"tag":36,"props":29487,"children":29488},{},[29489],{"type":23,"value":15770},{"type":17,"tag":36,"props":29491,"children":29492},{},[29493],{"type":23,"value":15775},{"type":17,"tag":36,"props":29495,"children":29496},{},[29497],{"type":23,"value":15780},{"type":17,"tag":96,"props":29499,"children":29500},{"id":15783},[29501],{"type":23,"value":15786},{"type":17,"tag":26,"props":29503,"children":29504},{},[29505],{"type":17,"tag":15486,"props":29506,"children":29507},{"width":15675,"autoPlay":10,"loop":10,"muted":10,"playsInline":10,"controls":10},[29508,29511],{"type":17,"tag":15493,"props":29509,"children":29510},{"src":15795,"type":15496},[],{"type":23,"value":15682},{"type":17,"tag":18,"props":29513,"children":29514},{"id":15800},[29515],{"type":23,"value":15803},{"type":17,"tag":26,"props":29517,"children":29518},{},[29519],{"type":23,"value":15808},{"type":17,"tag":1561,"props":29521,"children":29522},{"id":15811},[29523],{"type":23,"value":15814},{"type":17,"tag":26,"props":29525,"children":29526},{},[29527],{"type":23,"value":15819},{"type":17,"tag":26,"props":29529,"children":29530},{},[29531],{"type":17,"tag":1136,"props":29532,"children":29533},{},[29534],{"type":23,"value":15827},{"type":17,"tag":32,"props":29536,"children":29537},{},[29538],{"type":17,"tag":36,"props":29539,"children":29540},{},[29541],{"type":23,"value":15835},{"type":17,"tag":235,"props":29543,"children":29544},{},[29545,29549,29568,29572],{"type":17,"tag":36,"props":29546,"children":29547},{},[29548],{"type":23,"value":15843},{"type":17,"tag":36,"props":29550,"children":29551},{},[29552,29553,29557,29558,29562,29563,29567],{"type":23,"value":15848},{"type":17,"tag":1136,"props":29554,"children":29555},{},[29556],{"type":23,"value":15853},{"type":23,"value":1895},{"type":17,"tag":1136,"props":29559,"children":29560},{},[29561],{"type":23,"value":15859},{"type":23,"value":1895},{"type":17,"tag":1136,"props":29564,"children":29565},{},[29566],{"type":23,"value":15865},{"type":23,"value":15867},{"type":17,"tag":36,"props":29569,"children":29570},{},[29571],{"type":23,"value":15872},{"type":17,"tag":36,"props":29573,"children":29574},{},[29575],{"type":23,"value":15877},{"type":17,"tag":32,"props":29577,"children":29578},{"start":11},[29579],{"type":17,"tag":36,"props":29580,"children":29581},{},[29582],{"type":23,"value":15885},{"type":17,"tag":235,"props":29584,"children":29585},{},[29586,29590],{"type":17,"tag":36,"props":29587,"children":29588},{},[29589],{"type":23,"value":15893},{"type":17,"tag":36,"props":29591,"children":29592},{},[29593],{"type":23,"value":15898},{"type":17,"tag":26,"props":29595,"children":29596},{},[29597],{"type":17,"tag":1136,"props":29598,"children":29599},{},[29600],{"type":23,"value":15906},{"type":17,"tag":32,"props":29602,"children":29603},{},[29604],{"type":17,"tag":36,"props":29605,"children":29606},{},[29607],{"type":23,"value":15914},{"type":17,"tag":235,"props":29609,"children":29610},{},[29611],{"type":17,"tag":36,"props":29612,"children":29613},{},[29614],{"type":23,"value":15922},{"type":17,"tag":32,"props":29616,"children":29617},{"start":11},[29618],{"type":17,"tag":36,"props":29619,"children":29620},{},[29621],{"type":23,"value":15930},{"type":17,"tag":235,"props":29623,"children":29624},{},[29625],{"type":17,"tag":36,"props":29626,"children":29627},{},[29628],{"type":23,"value":15938},{"type":17,"tag":32,"props":29630,"children":29631},{"start":375},[29632],{"type":17,"tag":36,"props":29633,"children":29634},{},[29635],{"type":23,"value":15946},{"type":17,"tag":235,"props":29637,"children":29638},{},[29639,29643,29647],{"type":17,"tag":36,"props":29640,"children":29641},{},[29642],{"type":23,"value":15954},{"type":17,"tag":36,"props":29644,"children":29645},{},[29646],{"type":23,"value":15959},{"type":17,"tag":36,"props":29648,"children":29649},{},[29650],{"type":23,"value":15964},{"type":17,"tag":15479,"props":29652,"children":29654},{"className":29653,"style":15969},[15968],[29655,29659,29663,29682,29686],{"type":17,"tag":26,"props":29656,"children":29657},{},[29658],{"type":23,"value":15975},{"type":17,"tag":26,"props":29660,"children":29661},{},[29662],{"type":23,"value":15980},{"type":17,"tag":235,"props":29664,"children":29665},{},[29666,29670,29674,29678],{"type":17,"tag":36,"props":29667,"children":29668},{},[29669],{"type":23,"value":15988},{"type":17,"tag":36,"props":29671,"children":29672},{},[29673],{"type":23,"value":15993},{"type":17,"tag":36,"props":29675,"children":29676},{},[29677],{"type":23,"value":15998},{"type":17,"tag":36,"props":29679,"children":29680},{},[29681],{"type":23,"value":16003},{"type":17,"tag":26,"props":29683,"children":29684},{},[29685],{"type":23,"value":16008},{"type":17,"tag":26,"props":29687,"children":29688},{},[29689],{"type":23,"value":16013},{"title":8,"searchDepth":11,"depth":11,"links":29691},[29692,29698,29703],{"id":15540,"depth":11,"text":16017,"children":29693},[29694,29695,29696,29697],{"id":15553,"depth":375,"text":15556},{"id":15584,"depth":375,"text":15587},{"id":15635,"depth":375,"text":15638},{"id":15666,"depth":375,"text":15669},{"id":15685,"depth":11,"text":16024,"children":29699},[29700,29701,29702],{"id":15703,"depth":375,"text":15556},{"id":15760,"depth":375,"text":15587},{"id":15783,"depth":375,"text":15786},{"id":15800,"depth":11,"text":15803},{"_path":16034,"_dir":8,"_draft":7,"_partial":7,"_locale":8,"title":16035,"description":395,"navigation":10,"index":16036,"icon":12,"body":29705,"_type":386,"_id":16121,"_source":388,"_file":16122,"_stem":16123,"_extension":391},{"type":14,"children":29706,"toc":29772},[29707,29711,29721,29727,29735,29754,29758,29768],{"type":17,"tag":26,"props":29708,"children":29709},{},[29710],{"type":23,"value":16043},{"type":17,"tag":26,"props":29712,"children":29713},{},[29714,29715,29720],{"type":23,"value":16048},{"type":17,"tag":105,"props":29716,"children":29718},{"href":16051,"rel":29717},[109],[29719],{"type":23,"value":16055},{"type":23,"value":16057},{"type":17,"tag":26,"props":29722,"children":29723},{},[29724],{"type":17,"tag":714,"props":29725,"children":29726},{"alt":8,"src":16063},[],{"type":17,"tag":26,"props":29728,"children":29729},{},[29730,29734],{"type":17,"tag":1136,"props":29731,"children":29732},{},[29733],{"type":23,"value":16072},{"type":23,"value":920},{"type":17,"tag":235,"props":29736,"children":29737},{},[29738,29742,29746,29750],{"type":17,"tag":36,"props":29739,"children":29740},{},[29741],{"type":23,"value":16081},{"type":17,"tag":36,"props":29743,"children":29744},{},[29745],{"type":23,"value":16086},{"type":17,"tag":36,"props":29747,"children":29748},{},[29749],{"type":23,"value":16091},{"type":17,"tag":36,"props":29751,"children":29752},{},[29753],{"type":23,"value":16096},{"type":17,"tag":26,"props":29755,"children":29756},{},[29757],{"type":23,"value":16101},{"type":17,"tag":26,"props":29759,"children":29760},{},[29761,29762,29767],{"type":23,"value":16106},{"type":17,"tag":105,"props":29763,"children":29765},{"href":15511,"rel":29764},[109],[29766],{"type":23,"value":15515},{"type":23,"value":16113},{"type":17,"tag":26,"props":29769,"children":29770},{},[29771],{"type":23,"value":16118},{"title":8,"searchDepth":11,"depth":11,"links":29773},[],1732013196923]